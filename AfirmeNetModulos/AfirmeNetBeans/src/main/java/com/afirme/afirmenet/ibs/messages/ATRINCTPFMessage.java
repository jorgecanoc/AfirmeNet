package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from ATRINCTPF physical file
 * definition.
 * 
 * File level identifier is 1140611105731. Record format level identifier is
 * 4CE881C19CE57.
 */
@SuppressWarnings("rawtypes")
public class ATRINCTPFMessage extends MessageRecord {
	final static String fldnames[] = { "INCOPE", "INCUSR", "INCREF", "INCMRE",
			"INCXPMTV", "INCFECHA", "INCHORA", "INCORREO", "INNOCEL",
			"INPOSCTA", "INOCGOCTA", "INRETCTA", "INIMPDEP", "INDEPCTA",
			"INSALDISP", "INSALDO", "INCHEQSOL", "INCHEQDISP", "INCONSALD",
			"INPOSTARJ", "INOCGOTARJ", "INRETTARJ", "INPAGOTARJ", "INIMPTARJ",
			"INCREDTARJ", "ININVER", "INLIQINV", "INRENOV", "INCREDITO",
			"INDISPCRED", "INDIASPAGO", "INFECPAGO", "INLIQCRED", "INPAGOCRED",
			"INPAQSR", "INSTSSR", "INCOMIS", "INCOSMS", "INIVACO", "INSUCUR",
			"INUSERI", "INFEALT", "INHRALT", "INUSCAN", "INFECAN", "INHRCAN",
			"INESTAT" };
	final static String tnames[] = { "INCOPE", "INCUSR", "INCREF", "INCMRE",
			"INCXPMTV", "INCFECHA", "INCHORA", "INCORREO", "INNOCEL",
			"INPOSCTA", "INOCGOCTA", "INRETCTA", "INIMPDEP", "INDEPCTA",
			"INSALDISP", "INSALDO", "INCHEQSOL", "INCHEQDISP", "INCONSALD",
			"INPOSTARJ", "INOCGOTARJ", "INRETTARJ", "INPAGOTARJ", "INIMPTARJ",
			"INCREDTARJ", "ININVER", "INLIQINV", "INRENOV", "INCREDITO",
			"INDISPCRED", "INDIASPAGO", "INFECPAGO", "INLIQCRED", "INPAGOCRED",
			"INPAQSR", "INSTSSR", "INCOMIS", "INCOSMS", "INIVACO", "INSUCUR",
			"INUSERI", "INFEALT", "INHRALT", "INUSCAN", "INFECAN", "INHRCAN",
			"INESTAT" };
	final static String fid = "1140611105731";
	final static String rid = "4CE881C19CE57";
	final static String fmtname = "ATRINCTPF";
	final int FIELDCOUNT = 47;

	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldINCOPE = null;
	private CharacterField fieldINCUSR = null;
	private CharacterField fieldINCREF = null;
	private CharacterField fieldINCMRE = null;
	private CharacterField fieldINCXPMTV = null;
	private DecimalField fieldINCFECHA = null;
	private DecimalField fieldINCHORA = null;
	private CharacterField fieldINCORREO = null;
	private DecimalField fieldINNOCEL = null;
	private CharacterField fieldINPOSCTA = null;
	private CharacterField fieldINOCGOCTA = null;
	private CharacterField fieldINRETCTA = null;
	private DecimalField fieldINIMPDEP = null;
	private CharacterField fieldINDEPCTA = null;
	private DecimalField fieldINSALDISP = null;
	private CharacterField fieldINSALDO = null;
	private CharacterField fieldINCHEQSOL = null;
	private CharacterField fieldINCHEQDISP = null;
	private CharacterField fieldINCONSALD = null;
	private CharacterField fieldINPOSTARJ = null;
	private CharacterField fieldINOCGOTARJ = null;
	private CharacterField fieldINRETTARJ = null;
	private CharacterField fieldINPAGOTARJ = null;
	private DecimalField fieldINIMPTARJ = null;
	private CharacterField fieldINCREDTARJ = null;
	private CharacterField fieldININVER = null;
	private CharacterField fieldINLIQINV = null;
	private CharacterField fieldINRENOV = null;
	private CharacterField fieldINCREDITO = null;
	private CharacterField fieldINDISPCRED = null;
	private DecimalField fieldINDIASPAGO = null;
	private CharacterField fieldINFECPAGO = null;
	private CharacterField fieldINLIQCRED = null;
	private CharacterField fieldINPAGOCRED = null;
	private CharacterField fieldINPAQSR = null;
	private CharacterField fieldINSTSSR = null;
	private DecimalField fieldINCOMIS = null;
	private DecimalField fieldINCOSMS = null;
	private DecimalField fieldINIVACO = null;
	private DecimalField fieldINSUCUR = null;
	private CharacterField fieldINUSERI = null;
	private DecimalField fieldINFEALT = null;
	private DecimalField fieldINHRALT = null;
	private CharacterField fieldINUSCAN = null;
	private DecimalField fieldINFECAN = null;
	private DecimalField fieldINHRCAN = null;
	private CharacterField fieldINESTAT = null;

	/**
	 * Constructor for ATRINCTPFMessage.
	 */
	public ATRINCTPFMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 339;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldINCOPE = new CharacterField(message, HEADERSIZE + 0,
				1, "INCOPE");
		fields[1] = fieldINCUSR = new CharacterField(message, HEADERSIZE + 1,
				10, "INCUSR");
		fields[2] = fieldINCREF = new CharacterField(message, HEADERSIZE + 11,
				12, "INCREF");
		fields[3] = fieldINCMRE = new CharacterField(message, HEADERSIZE + 23,
				12, "INCMRE");
		fields[4] = fieldINCXPMTV = new CharacterField(message,
				HEADERSIZE + 35, 2, "INCXPMTV");
		fields[5] = fieldINCFECHA = new DecimalField(message, HEADERSIZE + 37,
				9, 0, "INCFECHA");
		fields[6] = fieldINCHORA = new DecimalField(message, HEADERSIZE + 46,
				7, 0, "INCHORA");
		fields[7] = fieldINCORREO = new CharacterField(message,
				HEADERSIZE + 53, 60, "INCORREO");
		fields[8] = fieldINNOCEL = new DecimalField(message, HEADERSIZE + 113,
				11, 0, "INNOCEL");
		fields[9] = fieldINPOSCTA = new CharacterField(message,
				HEADERSIZE + 124, 3, "INPOSCTA");
		fields[10] = fieldINOCGOCTA = new CharacterField(message,
				HEADERSIZE + 127, 3, "INOCGOCTA");
		fields[11] = fieldINRETCTA = new CharacterField(message,
				HEADERSIZE + 130, 3, "INRETCTA");
		fields[12] = fieldINIMPDEP = new DecimalField(message,
				HEADERSIZE + 133, 15, 2, "INIMPDEP");
		fields[13] = fieldINDEPCTA = new CharacterField(message,
				HEADERSIZE + 148, 3, "INDEPCTA");
		fields[14] = fieldINSALDISP = new DecimalField(message,
				HEADERSIZE + 151, 15, 2, "INSALDISP");
		fields[15] = fieldINSALDO = new CharacterField(message,
				HEADERSIZE + 166, 3, "INSALDO");
		fields[16] = fieldINCHEQSOL = new CharacterField(message,
				HEADERSIZE + 169, 3, "INCHEQSOL");
		fields[17] = fieldINCHEQDISP = new CharacterField(message,
				HEADERSIZE + 172, 3, "INCHEQDISP");
		fields[18] = fieldINCONSALD = new CharacterField(message,
				HEADERSIZE + 175, 3, "INCONSALD");
		fields[19] = fieldINPOSTARJ = new CharacterField(message,
				HEADERSIZE + 178, 3, "INPOSTARJ");
		fields[20] = fieldINOCGOTARJ = new CharacterField(message,
				HEADERSIZE + 181, 3, "INOCGOTARJ");
		fields[21] = fieldINRETTARJ = new CharacterField(message,
				HEADERSIZE + 184, 3, "INRETTARJ");
		fields[22] = fieldINPAGOTARJ = new CharacterField(message,
				HEADERSIZE + 187, 3, "INPAGOTARJ");
		fields[23] = fieldINIMPTARJ = new DecimalField(message,
				HEADERSIZE + 190, 15, 2, "INIMPTARJ");
		fields[24] = fieldINCREDTARJ = new CharacterField(message,
				HEADERSIZE + 205, 3, "INCREDTARJ");
		fields[25] = fieldININVER = new CharacterField(message,
				HEADERSIZE + 208, 3, "ININVER");
		fields[26] = fieldINLIQINV = new CharacterField(message,
				HEADERSIZE + 211, 3, "INLIQINV");
		fields[27] = fieldINRENOV = new CharacterField(message,
				HEADERSIZE + 214, 3, "INRENOV");
		fields[28] = fieldINCREDITO = new CharacterField(message,
				HEADERSIZE + 217, 3, "INCREDITO");
		fields[29] = fieldINDISPCRED = new CharacterField(message,
				HEADERSIZE + 220, 3, "INDISPCRED");
		fields[30] = fieldINDIASPAGO = new DecimalField(message,
				HEADERSIZE + 223, 6, 0, "INDIASPAGO");
		fields[31] = fieldINFECPAGO = new CharacterField(message,
				HEADERSIZE + 229, 3, "INFECPAGO");
		fields[32] = fieldINLIQCRED = new CharacterField(message,
				HEADERSIZE + 232, 3, "INLIQCRED");
		fields[33] = fieldINPAGOCRED = new CharacterField(message,
				HEADERSIZE + 235, 3, "INPAGOCRED");
		fields[34] = fieldINPAQSR = new CharacterField(message,
				HEADERSIZE + 238, 4, "INPAQSR");
		fields[35] = fieldINSTSSR = new CharacterField(message,
				HEADERSIZE + 242, 1, "INSTSSR");
		fields[36] = fieldINCOMIS = new DecimalField(message, HEADERSIZE + 243,
				15, 2, "INCOMIS");
		fields[37] = fieldINCOSMS = new DecimalField(message, HEADERSIZE + 258,
				15, 2, "INCOSMS");
		fields[38] = fieldINIVACO = new DecimalField(message, HEADERSIZE + 273,
				8, 2, "INIVACO");
		fields[39] = fieldINSUCUR = new DecimalField(message, HEADERSIZE + 281,
				5, 0, "INSUCUR");
		fields[40] = fieldINUSERI = new CharacterField(message,
				HEADERSIZE + 286, 10, "INUSERI");
		fields[41] = fieldINFEALT = new DecimalField(message, HEADERSIZE + 296,
				9, 0, "INFEALT");
		fields[42] = fieldINHRALT = new DecimalField(message, HEADERSIZE + 305,
				7, 0, "INHRALT");
		fields[43] = fieldINUSCAN = new CharacterField(message,
				HEADERSIZE + 312, 10, "INUSCAN");
		fields[44] = fieldINFECAN = new DecimalField(message, HEADERSIZE + 322,
				9, 0, "INFECAN");
		fields[45] = fieldINHRCAN = new DecimalField(message, HEADERSIZE + 331,
				7, 0, "INHRCAN");
		fields[46] = fieldINESTAT = new CharacterField(message,
				HEADERSIZE + 338, 1, "INESTAT");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field INCOPE using a String value.
	 */
	public void setINCOPE(String newvalue) {
		fieldINCOPE.setString(newvalue);
	}

	/**
	 * Get value of field INCOPE as a String.
	 */
	public String getINCOPE() {
		return fieldINCOPE.getString();
	}

	/**
	 * Set field INCUSR using a String value.
	 */
	public void setINCUSR(String newvalue) {
		fieldINCUSR.setString(newvalue);
	}

	/**
	 * Get value of field INCUSR as a String.
	 */
	public String getINCUSR() {
		return fieldINCUSR.getString();
	}

	/**
	 * Set field INCREF using a String value.
	 */
	public void setINCREF(String newvalue) {
		fieldINCREF.setString(newvalue);
	}

	/**
	 * Get value of field INCREF as a String.
	 */
	public String getINCREF() {
		return fieldINCREF.getString();
	}

	/**
	 * Set field INCMRE using a String value.
	 */
	public void setINCMRE(String newvalue) {
		fieldINCMRE.setString(newvalue);
	}

	/**
	 * Get value of field INCMRE as a String.
	 */
	public String getINCMRE() {
		return fieldINCMRE.getString();
	}

	/**
	 * Set field INCXPMTV using a String value.
	 */
	public void setINCXPMTV(String newvalue) {
		fieldINCXPMTV.setString(newvalue);
	}

	/**
	 * Get value of field INCXPMTV as a String.
	 */
	public String getINCXPMTV() {
		return fieldINCXPMTV.getString();
	}

	/**
	 * Set field INCFECHA using a String value.
	 */
	public void setINCFECHA(String newvalue) {
		fieldINCFECHA.setString(newvalue);
	}

	/**
	 * Get value of field INCFECHA as a String.
	 */
	public String getINCFECHA() {
		return fieldINCFECHA.getString();
	}

	/**
	 * Set numeric field INCFECHA using a BigDecimal value.
	 */
	public void setINCFECHA(BigDecimal newvalue) {
		fieldINCFECHA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFECHA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFECHA() {
		return fieldINCFECHA.getBigDecimal();
	}

	/**
	 * Set field INCHORA using a String value.
	 */
	public void setINCHORA(String newvalue) {
		fieldINCHORA.setString(newvalue);
	}

	/**
	 * Get value of field INCHORA as a String.
	 */
	public String getINCHORA() {
		return fieldINCHORA.getString();
	}

	/**
	 * Set numeric field INCHORA using a BigDecimal value.
	 */
	public void setINCHORA(BigDecimal newvalue) {
		fieldINCHORA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHORA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHORA() {
		return fieldINCHORA.getBigDecimal();
	}

	/**
	 * Set field INCORREO using a String value.
	 */
	public void setINCORREO(String newvalue) {
		fieldINCORREO.setString(newvalue);
	}

	/**
	 * Get value of field INCORREO as a String.
	 */
	public String getINCORREO() {
		return fieldINCORREO.getString();
	}

	/**
	 * Set field INNOCEL using a String value.
	 */
	public void setINNOCEL(String newvalue) {
		fieldINNOCEL.setString(newvalue);
	}

	/**
	 * Get value of field INNOCEL as a String.
	 */
	public String getINNOCEL() {
		return fieldINNOCEL.getString();
	}

	/**
	 * Set numeric field INNOCEL using a BigDecimal value.
	 */
	public void setINNOCEL(BigDecimal newvalue) {
		fieldINNOCEL.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INNOCEL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINNOCEL() {
		return fieldINNOCEL.getBigDecimal();
	}

	/**
	 * Set field INPOSCTA using a String value.
	 */
	public void setINPOSCTA(String newvalue) {
		fieldINPOSCTA.setString(newvalue);
	}

	/**
	 * Get value of field INPOSCTA as a String.
	 */
	public String getINPOSCTA() {
		return fieldINPOSCTA.getString();
	}

	/**
	 * Set field INOCGOCTA using a String value.
	 */
	public void setINOCGOCTA(String newvalue) {
		fieldINOCGOCTA.setString(newvalue);
	}

	/**
	 * Get value of field INOCGOCTA as a String.
	 */
	public String getINOCGOCTA() {
		return fieldINOCGOCTA.getString();
	}

	/**
	 * Set field INRETCTA using a String value.
	 */
	public void setINRETCTA(String newvalue) {
		fieldINRETCTA.setString(newvalue);
	}

	/**
	 * Get value of field INRETCTA as a String.
	 */
	public String getINRETCTA() {
		return fieldINRETCTA.getString();
	}

	/**
	 * Set field INIMPDEP using a String value.
	 */
	public void setINIMPDEP(String newvalue) {
		fieldINIMPDEP.setString(newvalue);
	}

	/**
	 * Get value of field INIMPDEP as a String.
	 */
	public String getINIMPDEP() {
		return fieldINIMPDEP.getString();
	}

	/**
	 * Set numeric field INIMPDEP using a BigDecimal value.
	 */
	public void setINIMPDEP(BigDecimal newvalue) {
		fieldINIMPDEP.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INIMPDEP as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINIMPDEP() {
		return fieldINIMPDEP.getBigDecimal();
	}

	/**
	 * Set field INDEPCTA using a String value.
	 */
	public void setINDEPCTA(String newvalue) {
		fieldINDEPCTA.setString(newvalue);
	}

	/**
	 * Get value of field INDEPCTA as a String.
	 */
	public String getINDEPCTA() {
		return fieldINDEPCTA.getString();
	}

	/**
	 * Set field INSALDISP using a String value.
	 */
	public void setINSALDISP(String newvalue) {
		fieldINSALDISP.setString(newvalue);
	}

	/**
	 * Get value of field INSALDISP as a String.
	 */
	public String getINSALDISP() {
		return fieldINSALDISP.getString();
	}

	/**
	 * Set numeric field INSALDISP using a BigDecimal value.
	 */
	public void setINSALDISP(BigDecimal newvalue) {
		fieldINSALDISP.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INSALDISP as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINSALDISP() {
		return fieldINSALDISP.getBigDecimal();
	}

	/**
	 * Set field INSALDO using a String value.
	 */
	public void setINSALDO(String newvalue) {
		fieldINSALDO.setString(newvalue);
	}

	/**
	 * Get value of field INSALDO as a String.
	 */
	public String getINSALDO() {
		return fieldINSALDO.getString();
	}

	/**
	 * Set field INCHEQSOL using a String value.
	 */
	public void setINCHEQSOL(String newvalue) {
		fieldINCHEQSOL.setString(newvalue);
	}

	/**
	 * Get value of field INCHEQSOL as a String.
	 */
	public String getINCHEQSOL() {
		return fieldINCHEQSOL.getString();
	}

	/**
	 * Set field INCHEQDISP using a String value.
	 */
	public void setINCHEQDISP(String newvalue) {
		fieldINCHEQDISP.setString(newvalue);
	}

	/**
	 * Get value of field INCHEQDISP as a String.
	 */
	public String getINCHEQDISP() {
		return fieldINCHEQDISP.getString();
	}

	/**
	 * Set field INCONSALD using a String value.
	 */
	public void setINCONSALD(String newvalue) {
		fieldINCONSALD.setString(newvalue);
	}

	/**
	 * Get value of field INCONSALD as a String.
	 */
	public String getINCONSALD() {
		return fieldINCONSALD.getString();
	}

	/**
	 * Set field INPOSTARJ using a String value.
	 */
	public void setINPOSTARJ(String newvalue) {
		fieldINPOSTARJ.setString(newvalue);
	}

	/**
	 * Get value of field INPOSTARJ as a String.
	 */
	public String getINPOSTARJ() {
		return fieldINPOSTARJ.getString();
	}

	/**
	 * Set field INOCGOTARJ using a String value.
	 */
	public void setINOCGOTARJ(String newvalue) {
		fieldINOCGOTARJ.setString(newvalue);
	}

	/**
	 * Get value of field INOCGOTARJ as a String.
	 */
	public String getINOCGOTARJ() {
		return fieldINOCGOTARJ.getString();
	}

	/**
	 * Set field INRETTARJ using a String value.
	 */
	public void setINRETTARJ(String newvalue) {
		fieldINRETTARJ.setString(newvalue);
	}

	/**
	 * Get value of field INRETTARJ as a String.
	 */
	public String getINRETTARJ() {
		return fieldINRETTARJ.getString();
	}

	/**
	 * Set field INPAGOTARJ using a String value.
	 */
	public void setINPAGOTARJ(String newvalue) {
		fieldINPAGOTARJ.setString(newvalue);
	}

	/**
	 * Get value of field INPAGOTARJ as a String.
	 */
	public String getINPAGOTARJ() {
		return fieldINPAGOTARJ.getString();
	}

	/**
	 * Set field INIMPTARJ using a String value.
	 */
	public void setINIMPTARJ(String newvalue) {
		fieldINIMPTARJ.setString(newvalue);
	}

	/**
	 * Get value of field INIMPTARJ as a String.
	 */
	public String getINIMPTARJ() {
		return fieldINIMPTARJ.getString();
	}

	/**
	 * Set numeric field INIMPTARJ using a BigDecimal value.
	 */
	public void setINIMPTARJ(BigDecimal newvalue) {
		fieldINIMPTARJ.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INIMPTARJ as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINIMPTARJ() {
		return fieldINIMPTARJ.getBigDecimal();
	}

	/**
	 * Set field INCREDTARJ using a String value.
	 */
	public void setINCREDTARJ(String newvalue) {
		fieldINCREDTARJ.setString(newvalue);
	}

	/**
	 * Get value of field INCREDTARJ as a String.
	 */
	public String getINCREDTARJ() {
		return fieldINCREDTARJ.getString();
	}

	/**
	 * Set field ININVER using a String value.
	 */
	public void setININVER(String newvalue) {
		fieldININVER.setString(newvalue);
	}

	/**
	 * Get value of field ININVER as a String.
	 */
	public String getININVER() {
		return fieldININVER.getString();
	}

	/**
	 * Set field INLIQINV using a String value.
	 */
	public void setINLIQINV(String newvalue) {
		fieldINLIQINV.setString(newvalue);
	}

	/**
	 * Get value of field INLIQINV as a String.
	 */
	public String getINLIQINV() {
		return fieldINLIQINV.getString();
	}

	/**
	 * Set field INRENOV using a String value.
	 */
	public void setINRENOV(String newvalue) {
		fieldINRENOV.setString(newvalue);
	}

	/**
	 * Get value of field INRENOV as a String.
	 */
	public String getINRENOV() {
		return fieldINRENOV.getString();
	}

	/**
	 * Set field INCREDITO using a String value.
	 */
	public void setINCREDITO(String newvalue) {
		fieldINCREDITO.setString(newvalue);
	}

	/**
	 * Get value of field INCREDITO as a String.
	 */
	public String getINCREDITO() {
		return fieldINCREDITO.getString();
	}

	/**
	 * Set field INDISPCRED using a String value.
	 */
	public void setINDISPCRED(String newvalue) {
		fieldINDISPCRED.setString(newvalue);
	}

	/**
	 * Get value of field INDISPCRED as a String.
	 */
	public String getINDISPCRED() {
		return fieldINDISPCRED.getString();
	}

	/**
	 * Set field INDIASPAGO using a String value.
	 */
	public void setINDIASPAGO(String newvalue) {
		fieldINDIASPAGO.setString(newvalue);
	}

	/**
	 * Get value of field INDIASPAGO as a String.
	 */
	public String getINDIASPAGO() {
		return fieldINDIASPAGO.getString();
	}

	/**
	 * Set numeric field INDIASPAGO using a BigDecimal value.
	 */
	public void setINDIASPAGO(BigDecimal newvalue) {
		fieldINDIASPAGO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INDIASPAGO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINDIASPAGO() {
		return fieldINDIASPAGO.getBigDecimal();
	}

	/**
	 * Set field INFECPAGO using a String value.
	 */
	public void setINFECPAGO(String newvalue) {
		fieldINFECPAGO.setString(newvalue);
	}

	/**
	 * Get value of field INFECPAGO as a String.
	 */
	public String getINFECPAGO() {
		return fieldINFECPAGO.getString();
	}

	/**
	 * Set field INLIQCRED using a String value.
	 */
	public void setINLIQCRED(String newvalue) {
		fieldINLIQCRED.setString(newvalue);
	}

	/**
	 * Get value of field INLIQCRED as a String.
	 */
	public String getINLIQCRED() {
		return fieldINLIQCRED.getString();
	}

	/**
	 * Set field INPAGOCRED using a String value.
	 */
	public void setINPAGOCRED(String newvalue) {
		fieldINPAGOCRED.setString(newvalue);
	}

	/**
	 * Get value of field INPAGOCRED as a String.
	 */
	public String getINPAGOCRED() {
		return fieldINPAGOCRED.getString();
	}

	/**
	 * Set field INPAQSR using a String value.
	 */
	public void setINPAQSR(String newvalue) {
		fieldINPAQSR.setString(newvalue);
	}

	/**
	 * Get value of field INPAQSR as a String.
	 */
	public String getINPAQSR() {
		return fieldINPAQSR.getString();
	}

	/**
	 * Set field INSTSSR using a String value.
	 */
	public void setINSTSSR(String newvalue) {
		fieldINSTSSR.setString(newvalue);
	}

	/**
	 * Get value of field INSTSSR as a String.
	 */
	public String getINSTSSR() {
		return fieldINSTSSR.getString();
	}

	/**
	 * Set field INCOMIS using a String value.
	 */
	public void setINCOMIS(String newvalue) {
		fieldINCOMIS.setString(newvalue);
	}

	/**
	 * Get value of field INCOMIS as a String.
	 */
	public String getINCOMIS() {
		return fieldINCOMIS.getString();
	}

	/**
	 * Set numeric field INCOMIS using a BigDecimal value.
	 */
	public void setINCOMIS(BigDecimal newvalue) {
		fieldINCOMIS.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCOMIS as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCOMIS() {
		return fieldINCOMIS.getBigDecimal();
	}

	/**
	 * Set field INCOSMS using a String value.
	 */
	public void setINCOSMS(String newvalue) {
		fieldINCOSMS.setString(newvalue);
	}

	/**
	 * Get value of field INCOSMS as a String.
	 */
	public String getINCOSMS() {
		return fieldINCOSMS.getString();
	}

	/**
	 * Set numeric field INCOSMS using a BigDecimal value.
	 */
	public void setINCOSMS(BigDecimal newvalue) {
		fieldINCOSMS.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCOSMS as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCOSMS() {
		return fieldINCOSMS.getBigDecimal();
	}

	/**
	 * Set field INIVACO using a String value.
	 */
	public void setINIVACO(String newvalue) {
		fieldINIVACO.setString(newvalue);
	}

	/**
	 * Get value of field INIVACO as a String.
	 */
	public String getINIVACO() {
		return fieldINIVACO.getString();
	}

	/**
	 * Set numeric field INIVACO using a BigDecimal value.
	 */
	public void setINIVACO(BigDecimal newvalue) {
		fieldINIVACO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INIVACO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINIVACO() {
		return fieldINIVACO.getBigDecimal();
	}

	/**
	 * Set field INSUCUR using a String value.
	 */
	public void setINSUCUR(String newvalue) {
		fieldINSUCUR.setString(newvalue);
	}

	/**
	 * Get value of field INSUCUR as a String.
	 */
	public String getINSUCUR() {
		return fieldINSUCUR.getString();
	}

	/**
	 * Set numeric field INSUCUR using a BigDecimal value.
	 */
	public void setINSUCUR(BigDecimal newvalue) {
		fieldINSUCUR.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INSUCUR as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINSUCUR() {
		return fieldINSUCUR.getBigDecimal();
	}

	/**
	 * Set field INUSERI using a String value.
	 */
	public void setINUSERI(String newvalue) {
		fieldINUSERI.setString(newvalue);
	}

	/**
	 * Get value of field INUSERI as a String.
	 */
	public String getINUSERI() {
		return fieldINUSERI.getString();
	}

	/**
	 * Set field INFEALT using a String value.
	 */
	public void setINFEALT(String newvalue) {
		fieldINFEALT.setString(newvalue);
	}

	/**
	 * Get value of field INFEALT as a String.
	 */
	public String getINFEALT() {
		return fieldINFEALT.getString();
	}

	/**
	 * Set numeric field INFEALT using a BigDecimal value.
	 */
	public void setINFEALT(BigDecimal newvalue) {
		fieldINFEALT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INFEALT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINFEALT() {
		return fieldINFEALT.getBigDecimal();
	}

	/**
	 * Set field INHRALT using a String value.
	 */
	public void setINHRALT(String newvalue) {
		fieldINHRALT.setString(newvalue);
	}

	/**
	 * Get value of field INHRALT as a String.
	 */
	public String getINHRALT() {
		return fieldINHRALT.getString();
	}

	/**
	 * Set numeric field INHRALT using a BigDecimal value.
	 */
	public void setINHRALT(BigDecimal newvalue) {
		fieldINHRALT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INHRALT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINHRALT() {
		return fieldINHRALT.getBigDecimal();
	}

	/**
	 * Set field INUSCAN using a String value.
	 */
	public void setINUSCAN(String newvalue) {
		fieldINUSCAN.setString(newvalue);
	}

	/**
	 * Get value of field INUSCAN as a String.
	 */
	public String getINUSCAN() {
		return fieldINUSCAN.getString();
	}

	/**
	 * Set field INFECAN using a String value.
	 */
	public void setINFECAN(String newvalue) {
		fieldINFECAN.setString(newvalue);
	}

	/**
	 * Get value of field INFECAN as a String.
	 */
	public String getINFECAN() {
		return fieldINFECAN.getString();
	}

	/**
	 * Set numeric field INFECAN using a BigDecimal value.
	 */
	public void setINFECAN(BigDecimal newvalue) {
		fieldINFECAN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INFECAN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINFECAN() {
		return fieldINFECAN.getBigDecimal();
	}

	/**
	 * Set field INHRCAN using a String value.
	 */
	public void setINHRCAN(String newvalue) {
		fieldINHRCAN.setString(newvalue);
	}

	/**
	 * Get value of field INHRCAN as a String.
	 */
	public String getINHRCAN() {
		return fieldINHRCAN.getString();
	}

	/**
	 * Set numeric field INHRCAN using a BigDecimal value.
	 */
	public void setINHRCAN(BigDecimal newvalue) {
		fieldINHRCAN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INHRCAN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINHRCAN() {
		return fieldINHRCAN.getBigDecimal();
	}

	/**
	 * Set field INESTAT using a String value.
	 */
	public void setINESTAT(String newvalue) {
		fieldINESTAT.setString(newvalue);
	}

	/**
	 * Get value of field INESTAT as a String.
	 */
	public String getINESTAT() {
		return fieldINESTAT.getString();
	}

}
