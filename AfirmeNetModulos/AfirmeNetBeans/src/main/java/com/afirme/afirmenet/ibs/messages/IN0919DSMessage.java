package com.afirme.afirmenet.ibs.messages;

import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from IN0919DS physical file
 * definition.
 * 
 * File level identifier is 1040302191729. Record format level identifier is
 * 2C739653F1016.
 */
@SuppressWarnings("rawtypes")
public class IN0919DSMessage extends MessageRecord {
	final static String fldnames[] = { "E01USR" };
	final static String tnames[] = { "E01USR" };
	final static String fid = "1040302191729";
	final static String rid = "2C739653F1016";
	final static String fmtname = "IN0919DS";
	final int FIELDCOUNT = 1;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldE01USR = null;

	/**
	 * Constructor for IN0919DSMessage.
	 */
	public IN0919DSMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 10;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldE01USR = new CharacterField(message, HEADERSIZE + 0,
				10, "E01USR");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field E01USR using a String value.
	 */
	public void setE01USR(String newvalue) {
		fieldE01USR.setString(newvalue);
	}

	/**
	 * Get value of field E01USR as a String.
	 */
	public String getE01USR() {
		return fieldE01USR.getString();
	}

}
