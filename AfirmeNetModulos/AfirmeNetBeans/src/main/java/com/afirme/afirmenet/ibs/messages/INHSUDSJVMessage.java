package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from INHSUDSJV physical file
 * definition.
 * 
 * File level identifier is 1001004210153. Record format level identifier is
 * 3661D9052951D.
 */

public class INHSUDSJVMessage extends MessageRecord {
	final int FIELDCOUNT = 10;
	private CharacterField fieldDSJINHUSR = null;
	private DecimalField fieldDSJINHVNO = null;
	private CharacterField fieldDSJINHNME = null;
	private DecimalField fieldDSJINHLDM = null;
	private DecimalField fieldDSJINHLDD = null;
	private DecimalField fieldDSJINHLDY = null;
	private DecimalField fieldDSJINHYTD = null;
	private DecimalField fieldDSJINHLTD = null;
	private DecimalField fieldDSJINHLPA = null;
	private CharacterField fieldDSJINHFIM = null;

	/**
	 * Constructor for INHSUDSJVMessage.
	 */
	public INHSUDSJVMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 116;
		fileid = "1001004210153";
		recordid = "3661D9052951D";
		message = new byte[getByteLength()];
		formatname = "INHSUDSJV";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "DSJINHUSR";
		tagnames[0] = "DSJINHUSR";
		fields[0] = fieldDSJINHUSR = new CharacterField(message,
				HEADERSIZE + 0, 10, "DSJINHUSR");
		fieldnames[1] = "DSJINHVNO";
		tagnames[1] = "DSJINHVNO";
		fields[1] = fieldDSJINHVNO = new DecimalField(message, HEADERSIZE + 10,
				10, 0, "DSJINHVNO");
		fieldnames[2] = "DSJINHNME";
		tagnames[2] = "DSJINHNME";
		fields[2] = fieldDSJINHNME = new CharacterField(message,
				HEADERSIZE + 20, 35, "DSJINHNME");
		fieldnames[3] = "DSJINHLDM";
		tagnames[3] = "DSJINHLDM";
		fields[3] = fieldDSJINHLDM = new DecimalField(message, HEADERSIZE + 55,
				3, 0, "DSJINHLDM");
		fieldnames[4] = "DSJINHLDD";
		tagnames[4] = "DSJINHLDD";
		fields[4] = fieldDSJINHLDD = new DecimalField(message, HEADERSIZE + 58,
				3, 0, "DSJINHLDD");
		fieldnames[5] = "DSJINHLDY";
		tagnames[5] = "DSJINHLDY";
		fields[5] = fieldDSJINHLDY = new DecimalField(message, HEADERSIZE + 61,
				3, 0, "DSJINHLDY");
		fieldnames[6] = "DSJINHYTD";
		tagnames[6] = "DSJINHYTD";
		fields[6] = fieldDSJINHYTD = new DecimalField(message, HEADERSIZE + 64,
				17, 2, "DSJINHYTD");
		fieldnames[7] = "DSJINHLTD";
		tagnames[7] = "DSJINHLTD";
		fields[7] = fieldDSJINHLTD = new DecimalField(message, HEADERSIZE + 81,
				17, 2, "DSJINHLTD");
		fieldnames[8] = "DSJINHLPA";
		tagnames[8] = "DSJINHLPA";
		fields[8] = fieldDSJINHLPA = new DecimalField(message, HEADERSIZE + 98,
				17, 2, "DSJINHLPA");
		fieldnames[9] = "DSJINHFIM";
		tagnames[9] = "DSJINHFIM";
		fields[9] = fieldDSJINHFIM = new CharacterField(message,
				HEADERSIZE + 115, 1, "DSJINHFIM");
	}

	/**
	 * Return value of numeric field DSJINHLDD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINHLDD() {
		return fieldDSJINHLDD.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINHLDM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINHLDM() {
		return fieldDSJINHLDM.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINHLDY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINHLDY() {
		return fieldDSJINHLDY.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINHLPA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINHLPA() {
		return fieldDSJINHLPA.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINHLTD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINHLTD() {
		return fieldDSJINHLTD.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINHVNO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINHVNO() {
		return fieldDSJINHVNO.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINHYTD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINHYTD() {
		return fieldDSJINHYTD.getBigDecimal();
	}

	/**
	 * Get value of field DSJINHFIM as a String.
	 */
	public String getDSJINHFIM() {
		return fieldDSJINHFIM.getString();
	}

	/**
	 * Get value of field DSJINHLDD as a String.
	 */
	public String getDSJINHLDD() {
		return fieldDSJINHLDD.getString();
	}

	/**
	 * Get value of field DSJINHLDM as a String.
	 */
	public String getDSJINHLDM() {
		return fieldDSJINHLDM.getString();
	}

	/**
	 * Get value of field DSJINHLDY as a String.
	 */
	public String getDSJINHLDY() {
		return fieldDSJINHLDY.getString();
	}

	/**
	 * Get value of field DSJINHLPA as a String.
	 */
	public String getDSJINHLPA() {
		return fieldDSJINHLPA.getString();
	}

	/**
	 * Get value of field DSJINHLTD as a String.
	 */
	public String getDSJINHLTD() {
		return fieldDSJINHLTD.getString();
	}

	/**
	 * Get value of field DSJINHNME as a String.
	 */
	public String getDSJINHNME() {
		return fieldDSJINHNME.getString();
	}

	/**
	 * Get value of field DSJINHUSR as a String.
	 */
	public String getDSJINHUSR() {
		return fieldDSJINHUSR.getString();
	}

	/**
	 * Get value of field DSJINHVNO as a String.
	 */
	public String getDSJINHVNO() {
		return fieldDSJINHVNO.getString();
	}

	/**
	 * Get value of field DSJINHYTD as a String.
	 */
	public String getDSJINHYTD() {
		return fieldDSJINHYTD.getString();
	}

	/**
	 * Set field DSJINHFIM using a String value.
	 */
	public void setDSJINHFIM(String newvalue) {
		fieldDSJINHFIM.setString(newvalue);
	}

	/**
	 * Set field DSJINHLDD using a String value.
	 */
	public void setDSJINHLDD(String newvalue) {
		fieldDSJINHLDD.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINHLDD using a BigDecimal value.
	 */
	public void setDSJINHLDD(BigDecimal newvalue) {
		fieldDSJINHLDD.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINHLDM using a String value.
	 */
	public void setDSJINHLDM(String newvalue) {
		fieldDSJINHLDM.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINHLDM using a BigDecimal value.
	 */
	public void setDSJINHLDM(BigDecimal newvalue) {
		fieldDSJINHLDM.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINHLDY using a String value.
	 */
	public void setDSJINHLDY(String newvalue) {
		fieldDSJINHLDY.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINHLDY using a BigDecimal value.
	 */
	public void setDSJINHLDY(BigDecimal newvalue) {
		fieldDSJINHLDY.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINHLPA using a String value.
	 */
	public void setDSJINHLPA(String newvalue) {
		fieldDSJINHLPA.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINHLPA using a BigDecimal value.
	 */
	public void setDSJINHLPA(BigDecimal newvalue) {
		fieldDSJINHLPA.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINHLTD using a String value.
	 */
	public void setDSJINHLTD(String newvalue) {
		fieldDSJINHLTD.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINHLTD using a BigDecimal value.
	 */
	public void setDSJINHLTD(BigDecimal newvalue) {
		fieldDSJINHLTD.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINHNME using a String value.
	 */
	public void setDSJINHNME(String newvalue) {
		fieldDSJINHNME.setString(newvalue);
	}

	/**
	 * Set field DSJINHUSR using a String value.
	 */
	public void setDSJINHUSR(String newvalue) {
		fieldDSJINHUSR.setString(newvalue);
	}

	/**
	 * Set field DSJINHVNO using a String value.
	 */
	public void setDSJINHVNO(String newvalue) {
		fieldDSJINHVNO.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINHVNO using a BigDecimal value.
	 */
	public void setDSJINHVNO(BigDecimal newvalue) {
		fieldDSJINHVNO.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINHYTD using a String value.
	 */
	public void setDSJINHYTD(String newvalue) {
		fieldDSJINHYTD.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINHYTD using a BigDecimal value.
	 */
	public void setDSJINHYTD(BigDecimal newvalue) {
		fieldDSJINHYTD.setBigDecimal(newvalue);
	}
}