package com.afirme.afirmenet.ibs.messages;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from WI090501 physical file
 * definition.
 * 
 * File level identifier is 1001017145012. Record format level identifier is
 * 516570BBAA353.
 */

public class WI090501Message extends MessageRecord {
	final int FIELDCOUNT = 5;
	private CharacterField fieldWI905USR = null;
	private CharacterField fieldWI905ACD = null;
	private CharacterField fieldWI905TYP = null;
	private CharacterField fieldWI905DES = null;
	private CharacterField fieldWI905EOF = null;

	/**
	 * Constructor for WI090501Message.
	 */
	public WI090501Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 32;
		fileid = "1001017145012";
		recordid = "516570BBAA353";
		message = new byte[getByteLength()];
		formatname = "WI090501";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "WI905USR";
		tagnames[0] = "WI905USR";
		fields[0] = fieldWI905USR = new CharacterField(message, HEADERSIZE + 0,
				10, "WI905USR");
		fieldnames[1] = "WI905ACD";
		tagnames[1] = "WI905ACD";
		fields[1] = fieldWI905ACD = new CharacterField(message,
				HEADERSIZE + 10, 2, "WI905ACD");
		fieldnames[2] = "WI905TYP";
		tagnames[2] = "WI905TYP";
		fields[2] = fieldWI905TYP = new CharacterField(message,
				HEADERSIZE + 12, 4, "WI905TYP");
		fieldnames[3] = "WI905DES";
		tagnames[3] = "WI905DES";
		fields[3] = fieldWI905DES = new CharacterField(message,
				HEADERSIZE + 16, 15, "WI905DES");
		fieldnames[4] = "WI905EOF";
		tagnames[4] = "WI905EOF";
		fields[4] = fieldWI905EOF = new CharacterField(message,
				HEADERSIZE + 31, 1, "WI905EOF");
	}

	/**
	 * Get value of field WI905ACD as a String.
	 */
	public String getWI905ACD() {
		return fieldWI905ACD.getString();
	}

	/**
	 * Get value of field WI905DES as a String.
	 */
	public String getWI905DES() {
		return fieldWI905DES.getString();
	}

	/**
	 * Get value of field WI905EOF as a String.
	 */
	public String getWI905EOF() {
		return fieldWI905EOF.getString();
	}

	/**
	 * Get value of field WI905TYP as a String.
	 */
	public String getWI905TYP() {
		return fieldWI905TYP.getString();
	}

	/**
	 * Get value of field WI905USR as a String.
	 */
	public String getWI905USR() {
		return fieldWI905USR.getString();
	}

	/**
	 * Set field WI905ACD using a String value.
	 */
	public void setWI905ACD(String newvalue) {
		fieldWI905ACD.setString(newvalue);
	}

	/**
	 * Set field WI905DES using a String value.
	 */
	public void setWI905DES(String newvalue) {
		fieldWI905DES.setString(newvalue);
	}

	/**
	 * Set field WI905EOF using a String value.
	 */
	public void setWI905EOF(String newvalue) {
		fieldWI905EOF.setString(newvalue);
	}

	/**
	 * Set field WI905TYP using a String value.
	 */
	public void setWI905TYP(String newvalue) {
		fieldWI905TYP.setString(newvalue);
	}

	/**
	 * Set field WI905USR using a String value.
	 */
	public void setWI905USR(String newvalue) {
		fieldWI905USR.setString(newvalue);
	}
}