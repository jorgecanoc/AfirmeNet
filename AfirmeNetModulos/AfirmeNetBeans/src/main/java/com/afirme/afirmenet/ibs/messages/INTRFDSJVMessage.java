package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from INTRFDSJV physical file
 * definition.
 * 
 * File level identifier is 1130612104435. Record format level identifier is
 * 59020F732A53D.
 */
@SuppressWarnings("rawtypes")
public class INTRFDSJVMessage extends MessageRecord {
	final static String fldnames[] = { "INTUSR", "INTFRMACC", "INTTOACC",
			"INTTRFAMT", "INTVDT1", "INTVDT2", "INTVDT3", "INTTIN", "INTTIF",
			"INTREF", "INTTRFCCY", "INTBNKFRM", "INTBRNFRM", "INTFRMATY",
			"INTXPMTV", "INTDSC", "INTBNKCOD", "INTBRNCOD", "INTBNFACC",
			"INTACCTYP", "INTBNFAD1", "INTRFN", "INTCOM", "INTIVC", "INTRFC",
			"INTTSC", "INTTSA", "INTTSP", "INTDRBNK", "INTDRBRN", "INTDRCCY",
			"INTDRGLN", "INTDRACC", "INTCRBNK", "INTCRBRN", "INTCRCCY",
			"INTCRGLN", "INTCRACC", "INTCVE", "INTTASA", "INTIMPO", "INTUS1",
			"INTUS2", "INTUS3" };
	final static String tnames[] = { "INTUSR", "INTFRMACC", "INTTOACC",
			"INTTRFAMT", "INTVDT1", "INTVDT2", "INTVDT3", "INTTIN", "INTTIF",
			"INTREF", "INTTRFCCY", "INTBNKFRM", "INTBRNFRM", "INTFRMATY",
			"INTXPMTV", "INTDSC", "INTBNKCOD", "INTBRNCOD", "INTBNFACC",
			"INTACCTYP", "INTBNFAD1", "INTRFN", "INTCOM", "INTIVC", "INTRFC",
			"INTTSC", "INTTSA", "INTTSP", "INTDRBNK", "INTDRBRN", "INTDRCCY",
			"INTDRGLN", "INTDRACC", "INTCRBNK", "INTCRBRN", "INTCRCCY",
			"INTCRGLN", "INTCRACC", "INTCVE", "INTTASA", "INTIMPO", "INTUS1",
			"INTUS2", "INTUS3" };
	final static String fid = "1130612104435";
	final static String rid = "59020F732A53D";
	final static String fmtname = "INTRFDSJV";
	final int FIELDCOUNT = 44;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldINTUSR = null;
	private DecimalField fieldINTFRMACC = null;
	private DecimalField fieldINTTOACC = null;
	private DecimalField fieldINTTRFAMT = null;
	private DecimalField fieldINTVDT1 = null;
	private DecimalField fieldINTVDT2 = null;
	private DecimalField fieldINTVDT3 = null;
	private DecimalField fieldINTTIN = null;
	private DecimalField fieldINTTIF = null;
	private CharacterField fieldINTREF = null;
	private CharacterField fieldINTTRFCCY = null;
	private DecimalField fieldINTBNKFRM = null;
	private DecimalField fieldINTBRNFRM = null;
	private DecimalField fieldINTFRMATY = null;
	private CharacterField fieldINTXPMTV = null;
	private CharacterField fieldINTDSC = null;
	private DecimalField fieldINTBNKCOD = null;
	private DecimalField fieldINTBRNCOD = null;
	private CharacterField fieldINTBNFACC = null;
	private DecimalField fieldINTACCTYP = null;
	private CharacterField fieldINTBNFAD1 = null;
	private DecimalField fieldINTRFN = null;
	private DecimalField fieldINTCOM = null;
	private DecimalField fieldINTIVC = null;
	private CharacterField fieldINTRFC = null;
	private DecimalField fieldINTTSC = null;
	private DecimalField fieldINTTSA = null;
	private DecimalField fieldINTTSP = null;
	private CharacterField fieldINTDRBNK = null;
	private DecimalField fieldINTDRBRN = null;
	private CharacterField fieldINTDRCCY = null;
	private DecimalField fieldINTDRGLN = null;
	private DecimalField fieldINTDRACC = null;
	private CharacterField fieldINTCRBNK = null;
	private DecimalField fieldINTCRBRN = null;
	private CharacterField fieldINTCRCCY = null;
	private DecimalField fieldINTCRGLN = null;
	private DecimalField fieldINTCRACC = null;
	private CharacterField fieldINTCVE = null;
	private DecimalField fieldINTTASA = null;
	private DecimalField fieldINTIMPO = null;
	private CharacterField fieldINTUS1 = null;
	private CharacterField fieldINTUS2 = null;
	private CharacterField fieldINTUS3 = null;

	/**
	 * Constructor for INTRFDSJVMessage.
	 */
	public INTRFDSJVMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 471;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldINTUSR = new CharacterField(message, HEADERSIZE + 0,
				10, "INTUSR");
		fields[1] = fieldINTFRMACC = new DecimalField(message, HEADERSIZE + 10,
				13, 0, "INTFRMACC");
		fields[2] = fieldINTTOACC = new DecimalField(message, HEADERSIZE + 23,
				13, 0, "INTTOACC");
		fields[3] = fieldINTTRFAMT = new DecimalField(message, HEADERSIZE + 36,
				15, 2, "INTTRFAMT");
		fields[4] = fieldINTVDT1 = new DecimalField(message, HEADERSIZE + 51,
				3, 0, "INTVDT1");
		fields[5] = fieldINTVDT2 = new DecimalField(message, HEADERSIZE + 54,
				3, 0, "INTVDT2");
		fields[6] = fieldINTVDT3 = new DecimalField(message, HEADERSIZE + 57,
				3, 0, "INTVDT3");
		fields[7] = fieldINTTIN = new DecimalField(message, HEADERSIZE + 60, 7,
				0, "INTTIN");
		fields[8] = fieldINTTIF = new DecimalField(message, HEADERSIZE + 67, 7,
				0, "INTTIF");
		fields[9] = fieldINTREF = new CharacterField(message, HEADERSIZE + 74,
				12, "INTREF");
		fields[10] = fieldINTTRFCCY = new CharacterField(message,
				HEADERSIZE + 86, 3, "INTTRFCCY");
		fields[11] = fieldINTBNKFRM = new DecimalField(message,
				HEADERSIZE + 89, 5, 0, "INTBNKFRM");
		fields[12] = fieldINTBRNFRM = new DecimalField(message,
				HEADERSIZE + 94, 6, 0, "INTBRNFRM");
		fields[13] = fieldINTFRMATY = new DecimalField(message,
				HEADERSIZE + 100, 3, 0, "INTFRMATY");
		fields[14] = fieldINTXPMTV = new CharacterField(message,
				HEADERSIZE + 103, 2, "INTXPMTV");
		fields[15] = fieldINTDSC = new CharacterField(message,
				HEADERSIZE + 105, 45, "INTDSC");
		fields[16] = fieldINTBNKCOD = new DecimalField(message,
				HEADERSIZE + 150, 5, 0, "INTBNKCOD");
		fields[17] = fieldINTBRNCOD = new DecimalField(message,
				HEADERSIZE + 155, 6, 0, "INTBRNCOD");
		fields[18] = fieldINTBNFACC = new CharacterField(message,
				HEADERSIZE + 161, 20, "INTBNFACC");
		fields[19] = fieldINTACCTYP = new DecimalField(message,
				HEADERSIZE + 181, 3, 0, "INTACCTYP");
		fields[20] = fieldINTBNFAD1 = new CharacterField(message,
				HEADERSIZE + 184, 40, "INTBNFAD1");
		fields[21] = fieldINTRFN = new DecimalField(message, HEADERSIZE + 224,
				10, 0, "INTRFN");
		fields[22] = fieldINTCOM = new DecimalField(message, HEADERSIZE + 234,
				15, 2, "INTCOM");
		fields[23] = fieldINTIVC = new DecimalField(message, HEADERSIZE + 249,
				15, 2, "INTIVC");
		fields[24] = fieldINTRFC = new CharacterField(message,
				HEADERSIZE + 264, 18, "INTRFC");
		fields[25] = fieldINTTSC = new DecimalField(message, HEADERSIZE + 282,
				13, 0, "INTTSC");
		fields[26] = fieldINTTSA = new DecimalField(message, HEADERSIZE + 295,
				13, 0, "INTTSA");
		fields[27] = fieldINTTSP = new DecimalField(message, HEADERSIZE + 308,
				13, 0, "INTTSP");
		fields[28] = fieldINTDRBNK = new CharacterField(message,
				HEADERSIZE + 321, 2, "INTDRBNK");
		fields[29] = fieldINTDRBRN = new DecimalField(message,
				HEADERSIZE + 323, 4, 0, "INTDRBRN");
		fields[30] = fieldINTDRCCY = new CharacterField(message,
				HEADERSIZE + 327, 3, "INTDRCCY");
		fields[31] = fieldINTDRGLN = new DecimalField(message,
				HEADERSIZE + 330, 17, 0, "INTDRGLN");
		fields[32] = fieldINTDRACC = new DecimalField(message,
				HEADERSIZE + 347, 13, 0, "INTDRACC");
		fields[33] = fieldINTCRBNK = new CharacterField(message,
				HEADERSIZE + 360, 2, "INTCRBNK");
		fields[34] = fieldINTCRBRN = new DecimalField(message,
				HEADERSIZE + 362, 4, 0, "INTCRBRN");
		fields[35] = fieldINTCRCCY = new CharacterField(message,
				HEADERSIZE + 366, 3, "INTCRCCY");
		fields[36] = fieldINTCRGLN = new DecimalField(message,
				HEADERSIZE + 369, 17, 0, "INTCRGLN");
		fields[37] = fieldINTCRACC = new DecimalField(message,
				HEADERSIZE + 386, 13, 0, "INTCRACC");
		fields[38] = fieldINTCVE = new CharacterField(message,
				HEADERSIZE + 399, 12, "INTCVE");
		fields[39] = fieldINTTASA = new DecimalField(message, HEADERSIZE + 411,
				13, 6, "INTTASA");
		fields[40] = fieldINTIMPO = new DecimalField(message, HEADERSIZE + 424,
				17, 4, "INTIMPO");
		fields[41] = fieldINTUS1 = new CharacterField(message,
				HEADERSIZE + 441, 10, "INTUS1");
		fields[42] = fieldINTUS2 = new CharacterField(message,
				HEADERSIZE + 451, 10, "INTUS2");
		fields[43] = fieldINTUS3 = new CharacterField(message,
				HEADERSIZE + 461, 10, "INTUS3");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field INTUSR using a String value.
	 */
	public void setINTUSR(String newvalue) {
		fieldINTUSR.setString(newvalue);
	}

	/**
	 * Get value of field INTUSR as a String.
	 */
	public String getINTUSR() {
		return fieldINTUSR.getString();
	}

	/**
	 * Set field INTFRMACC using a String value.
	 */
	public void setINTFRMACC(String newvalue) {
		fieldINTFRMACC.setString(newvalue);
	}

	/**
	 * Get value of field INTFRMACC as a String.
	 */
	public String getINTFRMACC() {
		return fieldINTFRMACC.getString();
	}

	/**
	 * Set numeric field INTFRMACC using a BigDecimal value.
	 */
	public void setINTFRMACC(BigDecimal newvalue) {
		fieldINTFRMACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTFRMACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTFRMACC() {
		return fieldINTFRMACC.getBigDecimal();
	}

	/**
	 * Set field INTTOACC using a String value.
	 */
	public void setINTTOACC(String newvalue) {
		fieldINTTOACC.setString(newvalue);
	}

	/**
	 * Get value of field INTTOACC as a String.
	 */
	public String getINTTOACC() {
		return fieldINTTOACC.getString();
	}

	/**
	 * Set numeric field INTTOACC using a BigDecimal value.
	 */
	public void setINTTOACC(BigDecimal newvalue) {
		fieldINTTOACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTOACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTOACC() {
		return fieldINTTOACC.getBigDecimal();
	}

	/**
	 * Set field INTTRFAMT using a String value.
	 */
	public void setINTTRFAMT(String newvalue) {
		fieldINTTRFAMT.setString(newvalue);
	}

	/**
	 * Get value of field INTTRFAMT as a String.
	 */
	public String getINTTRFAMT() {
		return fieldINTTRFAMT.getString();
	}

	/**
	 * Set numeric field INTTRFAMT using a BigDecimal value.
	 */
	public void setINTTRFAMT(BigDecimal newvalue) {
		fieldINTTRFAMT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTRFAMT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTRFAMT() {
		return fieldINTTRFAMT.getBigDecimal();
	}

	/**
	 * Set field INTVDT1 using a String value.
	 */
	public void setINTVDT1(String newvalue) {
		fieldINTVDT1.setString(newvalue);
	}

	/**
	 * Get value of field INTVDT1 as a String.
	 */
	public String getINTVDT1() {
		return fieldINTVDT1.getString();
	}

	/**
	 * Set numeric field INTVDT1 using a BigDecimal value.
	 */
	public void setINTVDT1(BigDecimal newvalue) {
		fieldINTVDT1.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTVDT1 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTVDT1() {
		return fieldINTVDT1.getBigDecimal();
	}

	/**
	 * Set field INTVDT2 using a String value.
	 */
	public void setINTVDT2(String newvalue) {
		fieldINTVDT2.setString(newvalue);
	}

	/**
	 * Get value of field INTVDT2 as a String.
	 */
	public String getINTVDT2() {
		return fieldINTVDT2.getString();
	}

	/**
	 * Set numeric field INTVDT2 using a BigDecimal value.
	 */
	public void setINTVDT2(BigDecimal newvalue) {
		fieldINTVDT2.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTVDT2 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTVDT2() {
		return fieldINTVDT2.getBigDecimal();
	}

	/**
	 * Set field INTVDT3 using a String value.
	 */
	public void setINTVDT3(String newvalue) {
		fieldINTVDT3.setString(newvalue);
	}

	/**
	 * Get value of field INTVDT3 as a String.
	 */
	public String getINTVDT3() {
		return fieldINTVDT3.getString();
	}

	/**
	 * Set numeric field INTVDT3 using a BigDecimal value.
	 */
	public void setINTVDT3(BigDecimal newvalue) {
		fieldINTVDT3.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTVDT3 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTVDT3() {
		return fieldINTVDT3.getBigDecimal();
	}

	/**
	 * Set field INTTIN using a String value.
	 */
	public void setINTTIN(String newvalue) {
		fieldINTTIN.setString(newvalue);
	}

	/**
	 * Get value of field INTTIN as a String.
	 */
	public String getINTTIN() {
		return fieldINTTIN.getString();
	}

	/**
	 * Set numeric field INTTIN using a BigDecimal value.
	 */
	public void setINTTIN(BigDecimal newvalue) {
		fieldINTTIN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTIN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTIN() {
		return fieldINTTIN.getBigDecimal();
	}

	/**
	 * Set field INTTIF using a String value.
	 */
	public void setINTTIF(String newvalue) {
		fieldINTTIF.setString(newvalue);
	}

	/**
	 * Get value of field INTTIF as a String.
	 */
	public String getINTTIF() {
		return fieldINTTIF.getString();
	}

	/**
	 * Set numeric field INTTIF using a BigDecimal value.
	 */
	public void setINTTIF(BigDecimal newvalue) {
		fieldINTTIF.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTIF as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTIF() {
		return fieldINTTIF.getBigDecimal();
	}

	/**
	 * Set field INTREF using a String value.
	 */
	public void setINTREF(String newvalue) {
		fieldINTREF.setString(newvalue);
	}

	/**
	 * Get value of field INTREF as a String.
	 */
	public String getINTREF() {
		return fieldINTREF.getString();
	}

	/**
	 * Set field INTTRFCCY using a String value.
	 */
	public void setINTTRFCCY(String newvalue) {
		fieldINTTRFCCY.setString(newvalue);
	}

	/**
	 * Get value of field INTTRFCCY as a String.
	 */
	public String getINTTRFCCY() {
		return fieldINTTRFCCY.getString();
	}

	/**
	 * Set field INTBNKFRM using a String value.
	 */
	public void setINTBNKFRM(String newvalue) {
		fieldINTBNKFRM.setString(newvalue);
	}

	/**
	 * Get value of field INTBNKFRM as a String.
	 */
	public String getINTBNKFRM() {
		return fieldINTBNKFRM.getString();
	}

	/**
	 * Set numeric field INTBNKFRM using a BigDecimal value.
	 */
	public void setINTBNKFRM(BigDecimal newvalue) {
		fieldINTBNKFRM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTBNKFRM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTBNKFRM() {
		return fieldINTBNKFRM.getBigDecimal();
	}

	/**
	 * Set field INTBRNFRM using a String value.
	 */
	public void setINTBRNFRM(String newvalue) {
		fieldINTBRNFRM.setString(newvalue);
	}

	/**
	 * Get value of field INTBRNFRM as a String.
	 */
	public String getINTBRNFRM() {
		return fieldINTBRNFRM.getString();
	}

	/**
	 * Set numeric field INTBRNFRM using a BigDecimal value.
	 */
	public void setINTBRNFRM(BigDecimal newvalue) {
		fieldINTBRNFRM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTBRNFRM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTBRNFRM() {
		return fieldINTBRNFRM.getBigDecimal();
	}

	/**
	 * Set field INTFRMATY using a String value.
	 */
	public void setINTFRMATY(String newvalue) {
		fieldINTFRMATY.setString(newvalue);
	}

	/**
	 * Get value of field INTFRMATY as a String.
	 */
	public String getINTFRMATY() {
		return fieldINTFRMATY.getString();
	}

	/**
	 * Set numeric field INTFRMATY using a BigDecimal value.
	 */
	public void setINTFRMATY(BigDecimal newvalue) {
		fieldINTFRMATY.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTFRMATY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTFRMATY() {
		return fieldINTFRMATY.getBigDecimal();
	}

	/**
	 * Set field INTXPMTV using a String value.
	 */
	public void setINTXPMTV(String newvalue) {
		fieldINTXPMTV.setString(newvalue);
	}

	/**
	 * Get value of field INTXPMTV as a String.
	 */
	public String getINTXPMTV() {
		return fieldINTXPMTV.getString();
	}

	/**
	 * Set field INTDSC using a String value.
	 */
	public void setINTDSC(String newvalue) {
		fieldINTDSC.setString(newvalue);
	}

	/**
	 * Get value of field INTDSC as a String.
	 */
	public String getINTDSC() {
		return fieldINTDSC.getString();
	}

	/**
	 * Set field INTBNKCOD using a String value.
	 */
	public void setINTBNKCOD(String newvalue) {
		fieldINTBNKCOD.setString(newvalue);
	}

	/**
	 * Get value of field INTBNKCOD as a String.
	 */
	public String getINTBNKCOD() {
		return fieldINTBNKCOD.getString();
	}

	/**
	 * Set numeric field INTBNKCOD using a BigDecimal value.
	 */
	public void setINTBNKCOD(BigDecimal newvalue) {
		fieldINTBNKCOD.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTBNKCOD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTBNKCOD() {
		return fieldINTBNKCOD.getBigDecimal();
	}

	/**
	 * Set field INTBRNCOD using a String value.
	 */
	public void setINTBRNCOD(String newvalue) {
		fieldINTBRNCOD.setString(newvalue);
	}

	/**
	 * Get value of field INTBRNCOD as a String.
	 */
	public String getINTBRNCOD() {
		return fieldINTBRNCOD.getString();
	}

	/**
	 * Set numeric field INTBRNCOD using a BigDecimal value.
	 */
	public void setINTBRNCOD(BigDecimal newvalue) {
		fieldINTBRNCOD.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTBRNCOD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTBRNCOD() {
		return fieldINTBRNCOD.getBigDecimal();
	}

	/**
	 * Set field INTBNFACC using a String value.
	 */
	public void setINTBNFACC(String newvalue) {
		fieldINTBNFACC.setString(newvalue);
	}

	/**
	 * Get value of field INTBNFACC as a String.
	 */
	public String getINTBNFACC() {
		return fieldINTBNFACC.getString();
	}

	/**
	 * Set field INTACCTYP using a String value.
	 */
	public void setINTACCTYP(String newvalue) {
		fieldINTACCTYP.setString(newvalue);
	}

	/**
	 * Get value of field INTACCTYP as a String.
	 */
	public String getINTACCTYP() {
		return fieldINTACCTYP.getString();
	}

	/**
	 * Set numeric field INTACCTYP using a BigDecimal value.
	 */
	public void setINTACCTYP(BigDecimal newvalue) {
		fieldINTACCTYP.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTACCTYP as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTACCTYP() {
		return fieldINTACCTYP.getBigDecimal();
	}

	/**
	 * Set field INTBNFAD1 using a String value.
	 */
	public void setINTBNFAD1(String newvalue) {
		fieldINTBNFAD1.setString(newvalue);
	}

	/**
	 * Get value of field INTBNFAD1 as a String.
	 */
	public String getINTBNFAD1() {
		return fieldINTBNFAD1.getString();
	}

	/**
	 * Set field INTRFN using a String value.
	 */
	public void setINTRFN(String newvalue) {
		fieldINTRFN.setString(newvalue);
	}

	/**
	 * Get value of field INTRFN as a String.
	 */
	public String getINTRFN() {
		return fieldINTRFN.getString();
	}

	/**
	 * Set numeric field INTRFN using a BigDecimal value.
	 */
	public void setINTRFN(BigDecimal newvalue) {
		fieldINTRFN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTRFN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTRFN() {
		return fieldINTRFN.getBigDecimal();
	}

	/**
	 * Set field INTCOM using a String value.
	 */
	public void setINTCOM(String newvalue) {
		fieldINTCOM.setString(newvalue);
	}

	/**
	 * Get value of field INTCOM as a String.
	 */
	public String getINTCOM() {
		return fieldINTCOM.getString();
	}

	/**
	 * Set numeric field INTCOM using a BigDecimal value.
	 */
	public void setINTCOM(BigDecimal newvalue) {
		fieldINTCOM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTCOM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTCOM() {
		return fieldINTCOM.getBigDecimal();
	}

	/**
	 * Set field INTIVC using a String value.
	 */
	public void setINTIVC(String newvalue) {
		fieldINTIVC.setString(newvalue);
	}

	/**
	 * Get value of field INTIVC as a String.
	 */
	public String getINTIVC() {
		return fieldINTIVC.getString();
	}

	/**
	 * Set numeric field INTIVC using a BigDecimal value.
	 */
	public void setINTIVC(BigDecimal newvalue) {
		fieldINTIVC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTIVC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTIVC() {
		return fieldINTIVC.getBigDecimal();
	}

	/**
	 * Set field INTRFC using a String value.
	 */
	public void setINTRFC(String newvalue) {
		fieldINTRFC.setString(newvalue);
	}

	/**
	 * Get value of field INTRFC as a String.
	 */
	public String getINTRFC() {
		return fieldINTRFC.getString();
	}

	/**
	 * Set field INTTSC using a String value.
	 */
	public void setINTTSC(String newvalue) {
		fieldINTTSC.setString(newvalue);
	}

	/**
	 * Get value of field INTTSC as a String.
	 */
	public String getINTTSC() {
		return fieldINTTSC.getString();
	}

	/**
	 * Set numeric field INTTSC using a BigDecimal value.
	 */
	public void setINTTSC(BigDecimal newvalue) {
		fieldINTTSC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTSC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTSC() {
		return fieldINTTSC.getBigDecimal();
	}

	/**
	 * Set field INTTSA using a String value.
	 */
	public void setINTTSA(String newvalue) {
		fieldINTTSA.setString(newvalue);
	}

	/**
	 * Get value of field INTTSA as a String.
	 */
	public String getINTTSA() {
		return fieldINTTSA.getString();
	}

	/**
	 * Set numeric field INTTSA using a BigDecimal value.
	 */
	public void setINTTSA(BigDecimal newvalue) {
		fieldINTTSA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTSA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTSA() {
		return fieldINTTSA.getBigDecimal();
	}

	/**
	 * Set field INTTSP using a String value.
	 */
	public void setINTTSP(String newvalue) {
		fieldINTTSP.setString(newvalue);
	}

	/**
	 * Get value of field INTTSP as a String.
	 */
	public String getINTTSP() {
		return fieldINTTSP.getString();
	}

	/**
	 * Set numeric field INTTSP using a BigDecimal value.
	 */
	public void setINTTSP(BigDecimal newvalue) {
		fieldINTTSP.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTSP as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTSP() {
		return fieldINTTSP.getBigDecimal();
	}

	/**
	 * Set field INTDRBNK using a String value.
	 */
	public void setINTDRBNK(String newvalue) {
		fieldINTDRBNK.setString(newvalue);
	}

	/**
	 * Get value of field INTDRBNK as a String.
	 */
	public String getINTDRBNK() {
		return fieldINTDRBNK.getString();
	}

	/**
	 * Set field INTDRBRN using a String value.
	 */
	public void setINTDRBRN(String newvalue) {
		fieldINTDRBRN.setString(newvalue);
	}

	/**
	 * Get value of field INTDRBRN as a String.
	 */
	public String getINTDRBRN() {
		return fieldINTDRBRN.getString();
	}

	/**
	 * Set numeric field INTDRBRN using a BigDecimal value.
	 */
	public void setINTDRBRN(BigDecimal newvalue) {
		fieldINTDRBRN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTDRBRN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTDRBRN() {
		return fieldINTDRBRN.getBigDecimal();
	}

	/**
	 * Set field INTDRCCY using a String value.
	 */
	public void setINTDRCCY(String newvalue) {
		fieldINTDRCCY.setString(newvalue);
	}

	/**
	 * Get value of field INTDRCCY as a String.
	 */
	public String getINTDRCCY() {
		return fieldINTDRCCY.getString();
	}

	/**
	 * Set field INTDRGLN using a String value.
	 */
	public void setINTDRGLN(String newvalue) {
		fieldINTDRGLN.setString(newvalue);
	}

	/**
	 * Get value of field INTDRGLN as a String.
	 */
	public String getINTDRGLN() {
		return fieldINTDRGLN.getString();
	}

	/**
	 * Set numeric field INTDRGLN using a BigDecimal value.
	 */
	public void setINTDRGLN(BigDecimal newvalue) {
		fieldINTDRGLN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTDRGLN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTDRGLN() {
		return fieldINTDRGLN.getBigDecimal();
	}

	/**
	 * Set field INTDRACC using a String value.
	 */
	public void setINTDRACC(String newvalue) {
		fieldINTDRACC.setString(newvalue);
	}

	/**
	 * Get value of field INTDRACC as a String.
	 */
	public String getINTDRACC() {
		return fieldINTDRACC.getString();
	}

	/**
	 * Set numeric field INTDRACC using a BigDecimal value.
	 */
	public void setINTDRACC(BigDecimal newvalue) {
		fieldINTDRACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTDRACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTDRACC() {
		return fieldINTDRACC.getBigDecimal();
	}

	/**
	 * Set field INTCRBNK using a String value.
	 */
	public void setINTCRBNK(String newvalue) {
		fieldINTCRBNK.setString(newvalue);
	}

	/**
	 * Get value of field INTCRBNK as a String.
	 */
	public String getINTCRBNK() {
		return fieldINTCRBNK.getString();
	}

	/**
	 * Set field INTCRBRN using a String value.
	 */
	public void setINTCRBRN(String newvalue) {
		fieldINTCRBRN.setString(newvalue);
	}

	/**
	 * Get value of field INTCRBRN as a String.
	 */
	public String getINTCRBRN() {
		return fieldINTCRBRN.getString();
	}

	/**
	 * Set numeric field INTCRBRN using a BigDecimal value.
	 */
	public void setINTCRBRN(BigDecimal newvalue) {
		fieldINTCRBRN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTCRBRN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTCRBRN() {
		return fieldINTCRBRN.getBigDecimal();
	}

	/**
	 * Set field INTCRCCY using a String value.
	 */
	public void setINTCRCCY(String newvalue) {
		fieldINTCRCCY.setString(newvalue);
	}

	/**
	 * Get value of field INTCRCCY as a String.
	 */
	public String getINTCRCCY() {
		return fieldINTCRCCY.getString();
	}

	/**
	 * Set field INTCRGLN using a String value.
	 */
	public void setINTCRGLN(String newvalue) {
		fieldINTCRGLN.setString(newvalue);
	}

	/**
	 * Get value of field INTCRGLN as a String.
	 */
	public String getINTCRGLN() {
		return fieldINTCRGLN.getString();
	}

	/**
	 * Set numeric field INTCRGLN using a BigDecimal value.
	 */
	public void setINTCRGLN(BigDecimal newvalue) {
		fieldINTCRGLN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTCRGLN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTCRGLN() {
		return fieldINTCRGLN.getBigDecimal();
	}

	/**
	 * Set field INTCRACC using a String value.
	 */
	public void setINTCRACC(String newvalue) {
		fieldINTCRACC.setString(newvalue);
	}

	/**
	 * Get value of field INTCRACC as a String.
	 */
	public String getINTCRACC() {
		return fieldINTCRACC.getString();
	}

	/**
	 * Set numeric field INTCRACC using a BigDecimal value.
	 */
	public void setINTCRACC(BigDecimal newvalue) {
		fieldINTCRACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTCRACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTCRACC() {
		return fieldINTCRACC.getBigDecimal();
	}

	/**
	 * Set field INTCVE using a String value.
	 */
	public void setINTCVE(String newvalue) {
		fieldINTCVE.setString(newvalue);
	}

	/**
	 * Get value of field INTCVE as a String.
	 */
	public String getINTCVE() {
		return fieldINTCVE.getString();
	}

	/**
	 * Set field INTTASA using a String value.
	 */
	public void setINTTASA(String newvalue) {
		fieldINTTASA.setString(newvalue);
	}

	/**
	 * Get value of field INTTASA as a String.
	 */
	public String getINTTASA() {
		return fieldINTTASA.getString();
	}

	/**
	 * Set numeric field INTTASA using a BigDecimal value.
	 */
	public void setINTTASA(BigDecimal newvalue) {
		fieldINTTASA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTASA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTASA() {
		return fieldINTTASA.getBigDecimal();
	}

	/**
	 * Set field INTIMPO using a String value.
	 */
	public void setINTIMPO(String newvalue) {
		fieldINTIMPO.setString(newvalue);
	}

	/**
	 * Get value of field INTIMPO as a String.
	 */
	public String getINTIMPO() {
		return fieldINTIMPO.getString();
	}

	/**
	 * Set numeric field INTIMPO using a BigDecimal value.
	 */
	public void setINTIMPO(BigDecimal newvalue) {
		fieldINTIMPO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTIMPO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTIMPO() {
		return fieldINTIMPO.getBigDecimal();
	}

	/**
	 * Set field INTUS1 using a String value.
	 */
	public void setINTUS1(String newvalue) {
		fieldINTUS1.setString(newvalue);
	}

	/**
	 * Get value of field INTUS1 as a String.
	 */
	public String getINTUS1() {
		return fieldINTUS1.getString();
	}

	/**
	 * Set field INTUS2 using a String value.
	 */
	public void setINTUS2(String newvalue) {
		fieldINTUS2.setString(newvalue);
	}

	/**
	 * Get value of field INTUS2 as a String.
	 */
	public String getINTUS2() {
		return fieldINTUS2.getString();
	}

	/**
	 * Set field INTUS3 using a String value.
	 */
	public void setINTUS3(String newvalue) {
		fieldINTUS3.setString(newvalue);
	}

	/**
	 * Get value of field INTUS3 as a String.
	 */
	public String getINTUS3() {
		return fieldINTUS3.getString();
	}

}
