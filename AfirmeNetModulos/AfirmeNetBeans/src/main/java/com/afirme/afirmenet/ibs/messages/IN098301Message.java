package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from IN098301 physical file
 * definition.
 * 
 * File level identifier is 1010514151703. Record format level identifier is
 * 5606F6616DD7C.
 */

public class IN098301Message extends MessageRecord {
	final int FIELDCOUNT = 5;
	private CharacterField fieldIN983USR = null;
	private CharacterField fieldIN983NUM = null;
	private DecimalField fieldIN983SAL = null;
	private DecimalField fieldIN963CASBK = null;
	private CharacterField fieldIN981ENDFL = null;

	/**
	 * Constructor for IN098301Message.
	 */
	public IN098301Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 58;
		fileid = "1010514151703";
		recordid = "5606F6616DD7C";
		message = new byte[getByteLength()];
		formatname = "IN098301";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "IN983USR";
		tagnames[0] = "IN983USR";
		fields[0] = fieldIN983USR = new CharacterField(message, HEADERSIZE + 0,
				10, "IN983USR");
		fieldnames[1] = "IN983NUM";
		tagnames[1] = "IN983NUM";
		fields[1] = fieldIN983NUM = new CharacterField(message,
				HEADERSIZE + 10, 19, "IN983NUM");
		fieldnames[2] = "IN983SAL";
		tagnames[2] = "IN983SAL";
		fields[2] = fieldIN983SAL = new DecimalField(message, HEADERSIZE + 29,
				14, 2, "IN983SAL");
		fieldnames[3] = "IN963CASBK";
		tagnames[3] = "IN963CASBK";
		fields[3] = fieldIN963CASBK = new DecimalField(message,
				HEADERSIZE + 43, 14, 2, "IN963CASBK");
		fieldnames[4] = "IN981ENDFL";
		tagnames[4] = "IN981ENDFL";
		fields[4] = fieldIN981ENDFL = new CharacterField(message,
				HEADERSIZE + 57, 1, "IN981ENDFL");
	}

	/**
	 * Set field IN983USR using a String value.
	 */
	public void setIN983USR(String newvalue) {
		fieldIN983USR.setString(newvalue);
	}

	/**
	 * Get value of field IN983USR as a String.
	 */
	public String getIN983USR() {
		return fieldIN983USR.getString();
	}

	/**
	 * Set field IN983NUM using a String value.
	 */
	public void setIN983NUM(String newvalue) {
		fieldIN983NUM.setString(newvalue);
	}

	/**
	 * Get value of field IN983NUM as a String.
	 */
	public String getIN983NUM() {
		return fieldIN983NUM.getString();
	}

	/**
	 * Set field IN983SAL using a String value.
	 */
	public void setIN983SAL(String newvalue) {
		fieldIN983SAL.setString(newvalue);
	}

	/**
	 * Get value of field IN983SAL as a String.
	 */
	public String getIN983SAL() {
		return fieldIN983SAL.getString();
	}

	/**
	 * Set numeric field IN983SAL using a BigDecimal value.
	 */
	public void setIN983SAL(BigDecimal newvalue) {
		fieldIN983SAL.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN983SAL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN983SAL() {
		return fieldIN983SAL.getBigDecimal();
	}

	/**
	 * Set field IN963CASBK using a String value.
	 */
	public void setIN963CASBK(String newvalue) {
		fieldIN963CASBK.setString(newvalue);
	}

	/**
	 * Get value of field IN963CASBK as a String.
	 */
	public String getIN963CASBK() {
		return fieldIN963CASBK.getString();
	}

	/**
	 * Set numeric field IN963CASBK using a BigDecimal value.
	 */
	public void setIN963CASBK(BigDecimal newvalue) {
		fieldIN963CASBK.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN963CASBK as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN963CASBK() {
		return fieldIN963CASBK.getBigDecimal();
	}

	/**
	 * Set field IN981ENDFL using a String value.
	 */
	public void setIN981ENDFL(String newvalue) {
		fieldIN981ENDFL.setString(newvalue);
	}

	/**
	 * Get value of field IN981ENDFL as a String.
	 */
	public String getIN981ENDFL() {
		return fieldIN981ENDFL.getString();
	}

}