package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
* Class generated by AS/400 CRTCLASS command from FOLIODSJV physical file definition.
* 
* File level identifier is 1031014173614.
* Record format level identifier is 3A64651EAB378.
*/
@SuppressWarnings("rawtypes")
public class FOLIODSJVMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "FOLUSR",
                                     "FOLRF1",
                                     "FOLRF2",
                                     "FOLRFC",
                                     "FOLNUM"
                                   };
  final static String tnames[] = {
                                   "FOLUSR",
                                   "FOLRF1",
                                   "FOLRF2",
                                   "FOLRFC",
                                   "FOLNUM"
                                 };
  final static String fid = "1031014173614";
  final static String rid = "3A64651EAB378";
  final static String fmtname = "FOLIODSJV";
  final int FIELDCOUNT = 5;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldFOLUSR = null;
  private CharacterField fieldFOLRF1 = null;
  private CharacterField fieldFOLRF2 = null;
  private CharacterField fieldFOLRFC = null;
  private DecimalField fieldFOLNUM = null;

  /**
  * Constructor for FOLIODSJVMessage.
  */
  public FOLIODSJVMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
@SuppressWarnings("unchecked")    protected void createFields()
  {
    recordsize = 67;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldFOLUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "FOLUSR");
    fields[1] = fieldFOLRF1 =
    new CharacterField(message, HEADERSIZE + 10, 15, "FOLRF1");
    fields[2] = fieldFOLRF2 =
    new CharacterField(message, HEADERSIZE + 25, 15, "FOLRF2");
    fields[3] = fieldFOLRFC =
    new CharacterField(message, HEADERSIZE + 40, 18, "FOLRFC");
    fields[4] = fieldFOLNUM =
    new DecimalField(message, HEADERSIZE + 58, 9, 0, "FOLNUM");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field FOLUSR using a String value.
  */
  public void setFOLUSR(String newvalue)
  {
    fieldFOLUSR.setString(newvalue);
  }

  /**
  * Get value of field FOLUSR as a String.
  */
  public String getFOLUSR()
  {
    return fieldFOLUSR.getString();
  }

  /**
  * Set field FOLRF1 using a String value.
  */
  public void setFOLRF1(String newvalue)
  {
    fieldFOLRF1.setString(newvalue);
  }

  /**
  * Get value of field FOLRF1 as a String.
  */
  public String getFOLRF1()
  {
    return fieldFOLRF1.getString();
  }

  /**
  * Set field FOLRF2 using a String value.
  */
  public void setFOLRF2(String newvalue)
  {
    fieldFOLRF2.setString(newvalue);
  }

  /**
  * Get value of field FOLRF2 as a String.
  */
  public String getFOLRF2()
  {
    return fieldFOLRF2.getString();
  }

  /**
  * Set field FOLRFC using a String value.
  */
  public void setFOLRFC(String newvalue)
  {
    fieldFOLRFC.setString(newvalue);
  }

  /**
  * Get value of field FOLRFC as a String.
  */
  public String getFOLRFC()
  {
    return fieldFOLRFC.getString();
  }

  /**
  * Set field FOLNUM using a String value.
  */
  public void setFOLNUM(String newvalue)
  {
    fieldFOLNUM.setString(newvalue);
  }

  /**
  * Get value of field FOLNUM as a String.
  */
  public String getFOLNUM()
  {
    return fieldFOLNUM.getString();
  }

  /**
  * Set numeric field FOLNUM using a BigDecimal value.
  */
  public void setFOLNUM(BigDecimal newvalue)
  {
    fieldFOLNUM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field FOLNUM as a BigDecimal.
  */
  public BigDecimal getBigDecimalFOLNUM()
  {
    return fieldFOLNUM.getBigDecimal();
  }

}
