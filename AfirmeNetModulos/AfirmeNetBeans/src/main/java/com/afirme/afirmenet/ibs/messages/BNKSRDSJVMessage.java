package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
* Class generated by AS/400 CRTCLASS command from BNKSRDSJV physical file definition.
* 
* File level identifier is 1030828141131.
* Record format level identifier is 475FBDE3163BA.
*/
@SuppressWarnings("rawtypes")
public class BNKSRDSJVMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "BNKUSR",
                                     "BNKPVI",
                                     "BNKFRC",
                                     "BNKID",
                                     "BNKNME",
                                     "BNKAD1",
                                     "BNKCTY",
                                     "BNKSTA",
                                     "BNKCTR",
                                     "BNKBRN",
                                     "BNKIN1",
                                     "BNKIN2",
                                     "BNKIN3",
                                     "BNKIN4",
                                     "BNKIN5",
                                     "BNKIN6",
                                     "BNKREC",
                                     "BNKRUD"
                                   };
  final static String tnames[] = {
                                   "BNKUSR",
                                   "BNKPVI",
                                   "BNKFRC",
                                   "BNKID",
                                   "BNKNME",
                                   "BNKAD1",
                                   "BNKCTY",
                                   "BNKSTA",
                                   "BNKCTR",
                                   "BNKBRN",
                                   "BNKIN1",
                                   "BNKIN2",
                                   "BNKIN3",
                                   "BNKIN4",
                                   "BNKIN5",
                                   "BNKIN6",
                                   "BNKREC",
                                   "BNKRUD"
                                 };
  final static String fid = "1030828141131";
  final static String rid = "475FBDE3163BA";
  final static String fmtname = "BNKSRDSJV";
  final int FIELDCOUNT = 18;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldBNKUSR = null;
  private CharacterField fieldBNKPVI = null;
  private DecimalField fieldBNKFRC = null;
  private CharacterField fieldBNKID = null;
  private CharacterField fieldBNKNME = null;
  private CharacterField fieldBNKAD1 = null;
  private CharacterField fieldBNKCTY = null;
  private CharacterField fieldBNKSTA = null;
  private CharacterField fieldBNKCTR = null;
  private DecimalField fieldBNKBRN = null;
  private CharacterField fieldBNKIN1 = null;
  private CharacterField fieldBNKIN2 = null;
  private CharacterField fieldBNKIN3 = null;
  private CharacterField fieldBNKIN4 = null;
  private CharacterField fieldBNKIN5 = null;
  private CharacterField fieldBNKIN6 = null;
  private DecimalField fieldBNKREC = null;
  private CharacterField fieldBNKRUD = null;

  /**
  * Constructor for BNKSRDSJVMessage.
  */
  public BNKSRDSJVMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
@SuppressWarnings("unchecked")    protected void createFields()
  {
    recordsize = 305;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldBNKUSR =
    new CharacterField(message, HEADERSIZE + 0, 10, "BNKUSR");
    fields[1] = fieldBNKPVI =
    new CharacterField(message, HEADERSIZE + 10, 1, "BNKPVI");
    fields[2] = fieldBNKFRC =
    new DecimalField(message, HEADERSIZE + 11, 8, 0, "BNKFRC");
    fields[3] = fieldBNKID =
    new CharacterField(message, HEADERSIZE + 19, 12, "BNKID");
    fields[4] = fieldBNKNME =
    new CharacterField(message, HEADERSIZE + 31, 35, "BNKNME");
    fields[5] = fieldBNKAD1 =
    new CharacterField(message, HEADERSIZE + 66, 35, "BNKAD1");
    fields[6] = fieldBNKCTY =
    new CharacterField(message, HEADERSIZE + 101, 30, "BNKCTY");
    fields[7] = fieldBNKSTA =
    new CharacterField(message, HEADERSIZE + 131, 4, "BNKSTA");
    fields[8] = fieldBNKCTR =
    new CharacterField(message, HEADERSIZE + 135, 20, "BNKCTR");
    fields[9] = fieldBNKBRN =
    new DecimalField(message, HEADERSIZE + 155, 5, 0, "BNKBRN");
    fields[10] = fieldBNKIN1 =
    new CharacterField(message, HEADERSIZE + 160, 35, "BNKIN1");
    fields[11] = fieldBNKIN2 =
    new CharacterField(message, HEADERSIZE + 195, 35, "BNKIN2");
    fields[12] = fieldBNKIN3 =
    new CharacterField(message, HEADERSIZE + 230, 30, "BNKIN3");
    fields[13] = fieldBNKIN4 =
    new CharacterField(message, HEADERSIZE + 260, 4, "BNKIN4");
    fields[14] = fieldBNKIN5 =
    new CharacterField(message, HEADERSIZE + 264, 20, "BNKIN5");
    fields[15] = fieldBNKIN6 =
    new CharacterField(message, HEADERSIZE + 284, 12, "BNKIN6");
    fields[16] = fieldBNKREC =
    new DecimalField(message, HEADERSIZE + 296, 8, 0, "BNKREC");
    fields[17] = fieldBNKRUD =
    new CharacterField(message, HEADERSIZE + 304, 1, "BNKRUD");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field BNKUSR using a String value.
  */
  public void setBNKUSR(String newvalue)
  {
    fieldBNKUSR.setString(newvalue);
  }

  /**
  * Get value of field BNKUSR as a String.
  */
  public String getBNKUSR()
  {
    return fieldBNKUSR.getString();
  }

  /**
  * Set field BNKPVI using a String value.
  */
  public void setBNKPVI(String newvalue)
  {
    fieldBNKPVI.setString(newvalue);
  }

  /**
  * Get value of field BNKPVI as a String.
  */
  public String getBNKPVI()
  {
    return fieldBNKPVI.getString();
  }

  /**
  * Set field BNKFRC using a String value.
  */
  public void setBNKFRC(String newvalue)
  {
    fieldBNKFRC.setString(newvalue);
  }

  /**
  * Get value of field BNKFRC as a String.
  */
  public String getBNKFRC()
  {
    return fieldBNKFRC.getString();
  }

  /**
  * Set numeric field BNKFRC using a BigDecimal value.
  */
  public void setBNKFRC(BigDecimal newvalue)
  {
    fieldBNKFRC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field BNKFRC as a BigDecimal.
  */
  public BigDecimal getBigDecimalBNKFRC()
  {
    return fieldBNKFRC.getBigDecimal();
  }

  /**
  * Set field BNKID using a String value.
  */
  public void setBNKID(String newvalue)
  {
    fieldBNKID.setString(newvalue);
  }

  /**
  * Get value of field BNKID as a String.
  */
  public String getBNKID()
  {
    return fieldBNKID.getString();
  }

  /**
  * Set field BNKNME using a String value.
  */
  public void setBNKNME(String newvalue)
  {
    fieldBNKNME.setString(newvalue);
  }

  /**
  * Get value of field BNKNME as a String.
  */
  public String getBNKNME()
  {
    return fieldBNKNME.getString();
  }

  /**
  * Set field BNKAD1 using a String value.
  */
  public void setBNKAD1(String newvalue)
  {
    fieldBNKAD1.setString(newvalue);
  }

  /**
  * Get value of field BNKAD1 as a String.
  */
  public String getBNKAD1()
  {
    return fieldBNKAD1.getString();
  }

  /**
  * Set field BNKCTY using a String value.
  */
  public void setBNKCTY(String newvalue)
  {
    fieldBNKCTY.setString(newvalue);
  }

  /**
  * Get value of field BNKCTY as a String.
  */
  public String getBNKCTY()
  {
    return fieldBNKCTY.getString();
  }

  /**
  * Set field BNKSTA using a String value.
  */
  public void setBNKSTA(String newvalue)
  {
    fieldBNKSTA.setString(newvalue);
  }

  /**
  * Get value of field BNKSTA as a String.
  */
  public String getBNKSTA()
  {
    return fieldBNKSTA.getString();
  }

  /**
  * Set field BNKCTR using a String value.
  */
  public void setBNKCTR(String newvalue)
  {
    fieldBNKCTR.setString(newvalue);
  }

  /**
  * Get value of field BNKCTR as a String.
  */
  public String getBNKCTR()
  {
    return fieldBNKCTR.getString();
  }

  /**
  * Set field BNKBRN using a String value.
  */
  public void setBNKBRN(String newvalue)
  {
    fieldBNKBRN.setString(newvalue);
  }

  /**
  * Get value of field BNKBRN as a String.
  */
  public String getBNKBRN()
  {
    return fieldBNKBRN.getString();
  }

  /**
  * Set numeric field BNKBRN using a BigDecimal value.
  */
  public void setBNKBRN(BigDecimal newvalue)
  {
    fieldBNKBRN.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field BNKBRN as a BigDecimal.
  */
  public BigDecimal getBigDecimalBNKBRN()
  {
    return fieldBNKBRN.getBigDecimal();
  }

  /**
  * Set field BNKIN1 using a String value.
  */
  public void setBNKIN1(String newvalue)
  {
    fieldBNKIN1.setString(newvalue);
  }

  /**
  * Get value of field BNKIN1 as a String.
  */
  public String getBNKIN1()
  {
    return fieldBNKIN1.getString();
  }

  /**
  * Set field BNKIN2 using a String value.
  */
  public void setBNKIN2(String newvalue)
  {
    fieldBNKIN2.setString(newvalue);
  }

  /**
  * Get value of field BNKIN2 as a String.
  */
  public String getBNKIN2()
  {
    return fieldBNKIN2.getString();
  }

  /**
  * Set field BNKIN3 using a String value.
  */
  public void setBNKIN3(String newvalue)
  {
    fieldBNKIN3.setString(newvalue);
  }

  /**
  * Get value of field BNKIN3 as a String.
  */
  public String getBNKIN3()
  {
    return fieldBNKIN3.getString();
  }

  /**
  * Set field BNKIN4 using a String value.
  */
  public void setBNKIN4(String newvalue)
  {
    fieldBNKIN4.setString(newvalue);
  }

  /**
  * Get value of field BNKIN4 as a String.
  */
  public String getBNKIN4()
  {
    return fieldBNKIN4.getString();
  }

  /**
  * Set field BNKIN5 using a String value.
  */
  public void setBNKIN5(String newvalue)
  {
    fieldBNKIN5.setString(newvalue);
  }

  /**
  * Get value of field BNKIN5 as a String.
  */
  public String getBNKIN5()
  {
    return fieldBNKIN5.getString();
  }

  /**
  * Set field BNKIN6 using a String value.
  */
  public void setBNKIN6(String newvalue)
  {
    fieldBNKIN6.setString(newvalue);
  }

  /**
  * Get value of field BNKIN6 as a String.
  */
  public String getBNKIN6()
  {
    return fieldBNKIN6.getString();
  }

  /**
  * Set field BNKREC using a String value.
  */
  public void setBNKREC(String newvalue)
  {
    fieldBNKREC.setString(newvalue);
  }

  /**
  * Get value of field BNKREC as a String.
  */
  public String getBNKREC()
  {
    return fieldBNKREC.getString();
  }

  /**
  * Set numeric field BNKREC using a BigDecimal value.
  */
  public void setBNKREC(BigDecimal newvalue)
  {
    fieldBNKREC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field BNKREC as a BigDecimal.
  */
  public BigDecimal getBigDecimalBNKREC()
  {
    return fieldBNKREC.getBigDecimal();
  }

  /**
  * Set field BNKRUD using a String value.
  */
  public void setBNKRUD(String newvalue)
  {
    fieldBNKRUD.setString(newvalue);
  }

  /**
  * Get value of field BNKRUD as a String.
  */
  public String getBNKRUD()
  {
    return fieldBNKRUD.getString();
  }

}
