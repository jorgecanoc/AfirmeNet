package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from SUMPRDSJV physical file
 * definition.
 * 
 * File level identifier is 1040903201642. Record format level identifier is
 * 4C529E9EEA7F8.
 */

@SuppressWarnings("rawtypes")
public class SUMPRDSJVMessage extends MessageRecord {
	final static String fldnames[] = { "SU_USER", "SU_TRNCDE", "SU_TIPREG",
			"SU_SECSUM", "SU_FOLIO", "SU_RFC", "SU_CADENA", "SU_SELLO",
			"SU_ERR01", "SU_ERR02", "SU_ERR03", "SU_ERR04" };
	final static String tnames[] = { "SU_USER", "SU_TRNCDE", "SU_TIPREG",
			"SU_SECSUM", "SU_FOLIO", "SU_RFC", "SU_CADENA", "SU_SELLO",
			"SU_ERR01", "SU_ERR02", "SU_ERR03", "SU_ERR04" };
	final static String fid = "1040903201642";
	final static String rid = "4C529E9EEA7F8";
	final static String fmtname = "SUMPRDSJV";
	final int FIELDCOUNT = 12;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldSU_USER = null;
	private DecimalField fieldSU_TRNCDE = null;
	private CharacterField fieldSU_TIPREG = null;
	private DecimalField fieldSU_SECSUM = null;
	private DecimalField fieldSU_FOLIO = null;
	private CharacterField fieldSU_RFC = null;
	private CharacterField fieldSU_CADENA = null;
	private CharacterField fieldSU_SELLO = null;
	private CharacterField fieldSU_ERR01 = null;
	private CharacterField fieldSU_ERR02 = null;
	private CharacterField fieldSU_ERR03 = null;
	private CharacterField fieldSU_ERR04 = null;

	/**
	 * Constructor for SUMPRDSJVMessage.
	 */
	public SUMPRDSJVMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 3436;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldSU_USER = new CharacterField(message, HEADERSIZE + 0,
				10, "SU_USER");
		fields[1] = fieldSU_TRNCDE = new DecimalField(message, HEADERSIZE + 10,
				5, 0, "SU_TRNCDE");
		fields[2] = fieldSU_TIPREG = new CharacterField(message,
				HEADERSIZE + 15, 1, "SU_TIPREG");
		fields[3] = fieldSU_SECSUM = new DecimalField(message, HEADERSIZE + 16,
				5, 0, "SU_SECSUM");
		fields[4] = fieldSU_FOLIO = new DecimalField(message, HEADERSIZE + 21,
				9, 0, "SU_FOLIO");
		fields[5] = fieldSU_RFC = new CharacterField(message, HEADERSIZE + 30,
				18, "SU_RFC");
		fields[6] = fieldSU_CADENA = new CharacterField(message,
				HEADERSIZE + 48, 3200, "SU_CADENA");
		fields[7] = fieldSU_SELLO = new CharacterField(message,
				HEADERSIZE + 3248, 172, "SU_SELLO");
		fields[8] = fieldSU_ERR01 = new CharacterField(message,
				HEADERSIZE + 3420, 4, "SU_ERR01");
		fields[9] = fieldSU_ERR02 = new CharacterField(message,
				HEADERSIZE + 3424, 4, "SU_ERR02");
		fields[10] = fieldSU_ERR03 = new CharacterField(message,
				HEADERSIZE + 3428, 4, "SU_ERR03");
		fields[11] = fieldSU_ERR04 = new CharacterField(message,
				HEADERSIZE + 3432, 4, "SU_ERR04");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field SU_USER using a String value.
	 */
	public void setSU_USER(String newvalue) {
		fieldSU_USER.setString(newvalue);
	}

	/**
	 * Get value of field SU_USER as a String.
	 */
	public String getSU_USER() {
		return fieldSU_USER.getString();
	}

	/**
	 * Set field SU_TRNCDE using a String value.
	 */
	public void setSU_TRNCDE(String newvalue) {
		fieldSU_TRNCDE.setString(newvalue);
	}

	/**
	 * Get value of field SU_TRNCDE as a String.
	 */
	public String getSU_TRNCDE() {
		return fieldSU_TRNCDE.getString();
	}

	/**
	 * Set numeric field SU_TRNCDE using a BigDecimal value.
	 */
	public void setSU_TRNCDE(BigDecimal newvalue) {
		fieldSU_TRNCDE.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SU_TRNCDE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSU_TRNCDE() {
		return fieldSU_TRNCDE.getBigDecimal();
	}

	/**
	 * Set field SU_TIPREG using a String value.
	 */
	public void setSU_TIPREG(String newvalue) {
		fieldSU_TIPREG.setString(newvalue);
	}

	/**
	 * Get value of field SU_TIPREG as a String.
	 */
	public String getSU_TIPREG() {
		return fieldSU_TIPREG.getString();
	}

	/**
	 * Set field SU_SECSUM using a String value.
	 */
	public void setSU_SECSUM(String newvalue) {
		fieldSU_SECSUM.setString(newvalue);
	}

	/**
	 * Get value of field SU_SECSUM as a String.
	 */
	public String getSU_SECSUM() {
		return fieldSU_SECSUM.getString();
	}

	/**
	 * Set numeric field SU_SECSUM using a BigDecimal value.
	 */
	public void setSU_SECSUM(BigDecimal newvalue) {
		fieldSU_SECSUM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SU_SECSUM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSU_SECSUM() {
		return fieldSU_SECSUM.getBigDecimal();
	}

	/**
	 * Set field SU_FOLIO using a String value.
	 */
	public void setSU_FOLIO(String newvalue) {
		fieldSU_FOLIO.setString(newvalue);
	}

	/**
	 * Get value of field SU_FOLIO as a String.
	 */
	public String getSU_FOLIO() {
		return fieldSU_FOLIO.getString();
	}

	/**
	 * Set numeric field SU_FOLIO using a BigDecimal value.
	 */
	public void setSU_FOLIO(BigDecimal newvalue) {
		fieldSU_FOLIO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SU_FOLIO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSU_FOLIO() {
		return fieldSU_FOLIO.getBigDecimal();
	}

	/**
	 * Set field SU_RFC using a String value.
	 */
	public void setSU_RFC(String newvalue) {
		fieldSU_RFC.setString(newvalue);
	}

	/**
	 * Get value of field SU_RFC as a String.
	 */
	public String getSU_RFC() {
		return fieldSU_RFC.getString();
	}

	/**
	 * Set field SU_CADENA using a String value.
	 */
	public void setSU_CADENA(String newvalue) {
		fieldSU_CADENA.setString(newvalue);
	}

	/**
	 * Get value of field SU_CADENA as a String.
	 */
	public String getSU_CADENA() {
		return fieldSU_CADENA.getString();
	}

	/**
	 * Set field SU_SELLO using a String value.
	 */
	public void setSU_SELLO(String newvalue) {
		fieldSU_SELLO.setString(newvalue);
	}

	/**
	 * Get value of field SU_SELLO as a String.
	 */
	public String getSU_SELLO() {
		return fieldSU_SELLO.getString();
	}

	/**
	 * Set field SU_ERR01 using a String value.
	 */
	public void setSU_ERR01(String newvalue) {
		fieldSU_ERR01.setString(newvalue);
	}

	/**
	 * Get value of field SU_ERR01 as a String.
	 */
	public String getSU_ERR01() {
		return fieldSU_ERR01.getString();
	}

	/**
	 * Set field SU_ERR02 using a String value.
	 */
	public void setSU_ERR02(String newvalue) {
		fieldSU_ERR02.setString(newvalue);
	}

	/**
	 * Get value of field SU_ERR02 as a String.
	 */
	public String getSU_ERR02() {
		return fieldSU_ERR02.getString();
	}

	/**
	 * Set field SU_ERR03 using a String value.
	 */
	public void setSU_ERR03(String newvalue) {
		fieldSU_ERR03.setString(newvalue);
	}

	/**
	 * Get value of field SU_ERR03 as a String.
	 */
	public String getSU_ERR03() {
		return fieldSU_ERR03.getString();
	}

	/**
	 * Set field SU_ERR04 using a String value.
	 */
	public void setSU_ERR04(String newvalue) {
		fieldSU_ERR04.setString(newvalue);
	}

	/**
	 * Get value of field SU_ERR04 as a String.
	 */
	public String getSU_ERR04() {
		return fieldSU_ERR04.getString();
	}

}
