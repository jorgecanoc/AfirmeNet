package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from TRIMPDSJV physical file
 * definition.
 * 
 * File level identifier is 1040903201643. Record format level identifier is
 * 43D9A744D22E1.
 */

@SuppressWarnings("rawtypes")
public class TRIMPDSJVMessage extends MessageRecord {
	final static String fldnames[] = { "TR_USER", "TR_ACCNUM", "TR_AMOUNT",
			"TR_TISERV", "TR_RFC", "TR_TIPAGO", "TR_TIPRES", "TR_PERINI",
			"TR_PERFIN", "TR_FOLSAT", "TR_ERROR1", "TR_ERROR2", "TR_ERROR3",
			"TR_ERROR4" };
	final static String tnames[] = { "TR_USER", "TR_ACCNUM", "TR_AMOUNT",
			"TR_TISERV", "TR_RFC", "TR_TIPAGO", "TR_TIPRES", "TR_PERINI",
			"TR_PERFIN", "TR_FOLSAT", "TR_ERROR1", "TR_ERROR2", "TR_ERROR3",
			"TR_ERROR4" };
	final static String fid = "1040903201643";
	final static String rid = "43D9A744D22E1";
	final static String fmtname = "TRIMPDSJV";
	final int FIELDCOUNT = 14;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldTR_USER = null;
	private DecimalField fieldTR_ACCNUM = null;
	private DecimalField fieldTR_AMOUNT = null;
	private DecimalField fieldTR_TISERV = null;
	private CharacterField fieldTR_RFC = null;
	private DecimalField fieldTR_TIPAGO = null;
	private DecimalField fieldTR_TIPRES = null;
	private DecimalField fieldTR_PERINI = null;
	private DecimalField fieldTR_PERFIN = null;
	private DecimalField fieldTR_FOLSAT = null;
	private CharacterField fieldTR_ERROR1 = null;
	private CharacterField fieldTR_ERROR2 = null;
	private CharacterField fieldTR_ERROR3 = null;
	private CharacterField fieldTR_ERROR4 = null;

	/**
	 * Constructor for TRIMPDSJVMessage.
	 */
	public TRIMPDSJVMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 110;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldTR_USER = new CharacterField(message, HEADERSIZE + 0,
				10, "TR_USER");
		fields[1] = fieldTR_ACCNUM = new DecimalField(message, HEADERSIZE + 10,
				13, 0, "TR_ACCNUM");
		fields[2] = fieldTR_AMOUNT = new DecimalField(message, HEADERSIZE + 23,
				12, 0, "TR_AMOUNT");
		fields[3] = fieldTR_TISERV = new DecimalField(message, HEADERSIZE + 35,
				3, 0, "TR_TISERV");
		fields[4] = fieldTR_RFC = new CharacterField(message, HEADERSIZE + 38,
				15, "TR_RFC");
		fields[5] = fieldTR_TIPAGO = new DecimalField(message, HEADERSIZE + 53,
				2, 0, "TR_TIPAGO");
		fields[6] = fieldTR_TIPRES = new DecimalField(message, HEADERSIZE + 55,
				2, 0, "TR_TIPRES");
		fields[7] = fieldTR_PERINI = new DecimalField(message, HEADERSIZE + 57,
				9, 0, "TR_PERINI");
		fields[8] = fieldTR_PERFIN = new DecimalField(message, HEADERSIZE + 66,
				9, 0, "TR_PERFIN");
		fields[9] = fieldTR_FOLSAT = new DecimalField(message, HEADERSIZE + 75,
				19, 0, "TR_FOLSAT");
		fields[10] = fieldTR_ERROR1 = new CharacterField(message,
				HEADERSIZE + 94, 4, "TR_ERROR1");
		fields[11] = fieldTR_ERROR2 = new CharacterField(message,
				HEADERSIZE + 98, 4, "TR_ERROR2");
		fields[12] = fieldTR_ERROR3 = new CharacterField(message,
				HEADERSIZE + 102, 4, "TR_ERROR3");
		fields[13] = fieldTR_ERROR4 = new CharacterField(message,
				HEADERSIZE + 106, 4, "TR_ERROR4");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field TR_USER using a String value.
	 */
	public void setTR_USER(String newvalue) {
		fieldTR_USER.setString(newvalue);
	}

	/**
	 * Get value of field TR_USER as a String.
	 */
	public String getTR_USER() {
		return fieldTR_USER.getString();
	}

	/**
	 * Set field TR_ACCNUM using a String value.
	 */
	public void setTR_ACCNUM(String newvalue) {
		fieldTR_ACCNUM.setString(newvalue);
	}

	/**
	 * Get value of field TR_ACCNUM as a String.
	 */
	public String getTR_ACCNUM() {
		return fieldTR_ACCNUM.getString();
	}

	/**
	 * Set numeric field TR_ACCNUM using a BigDecimal value.
	 */
	public void setTR_ACCNUM(BigDecimal newvalue) {
		fieldTR_ACCNUM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TR_ACCNUM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTR_ACCNUM() {
		return fieldTR_ACCNUM.getBigDecimal();
	}

	/**
	 * Set field TR_AMOUNT using a String value.
	 */
	public void setTR_AMOUNT(String newvalue) {
		fieldTR_AMOUNT.setString(newvalue);
	}

	/**
	 * Get value of field TR_AMOUNT as a String.
	 */
	public String getTR_AMOUNT() {
		return fieldTR_AMOUNT.getString();
	}

	/**
	 * Set numeric field TR_AMOUNT using a BigDecimal value.
	 */
	public void setTR_AMOUNT(BigDecimal newvalue) {
		fieldTR_AMOUNT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TR_AMOUNT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTR_AMOUNT() {
		return fieldTR_AMOUNT.getBigDecimal();
	}

	/**
	 * Set field TR_TISERV using a String value.
	 */
	public void setTR_TISERV(String newvalue) {
		fieldTR_TISERV.setString(newvalue);
	}

	/**
	 * Get value of field TR_TISERV as a String.
	 */
	public String getTR_TISERV() {
		return fieldTR_TISERV.getString();
	}

	/**
	 * Set numeric field TR_TISERV using a BigDecimal value.
	 */
	public void setTR_TISERV(BigDecimal newvalue) {
		fieldTR_TISERV.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TR_TISERV as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTR_TISERV() {
		return fieldTR_TISERV.getBigDecimal();
	}

	/**
	 * Set field TR_RFC using a String value.
	 */
	public void setTR_RFC(String newvalue) {
		fieldTR_RFC.setString(newvalue);
	}

	/**
	 * Get value of field TR_RFC as a String.
	 */
	public String getTR_RFC() {
		return fieldTR_RFC.getString();
	}

	/**
	 * Set field TR_TIPAGO using a String value.
	 */
	public void setTR_TIPAGO(String newvalue) {
		fieldTR_TIPAGO.setString(newvalue);
	}

	/**
	 * Get value of field TR_TIPAGO as a String.
	 */
	public String getTR_TIPAGO() {
		return fieldTR_TIPAGO.getString();
	}

	/**
	 * Set numeric field TR_TIPAGO using a BigDecimal value.
	 */
	public void setTR_TIPAGO(BigDecimal newvalue) {
		fieldTR_TIPAGO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TR_TIPAGO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTR_TIPAGO() {
		return fieldTR_TIPAGO.getBigDecimal();
	}

	/**
	 * Set field TR_TIPRES using a String value.
	 */
	public void setTR_TIPRES(String newvalue) {
		fieldTR_TIPRES.setString(newvalue);
	}

	/**
	 * Get value of field TR_TIPRES as a String.
	 */
	public String getTR_TIPRES() {
		return fieldTR_TIPRES.getString();
	}

	/**
	 * Set numeric field TR_TIPRES using a BigDecimal value.
	 */
	public void setTR_TIPRES(BigDecimal newvalue) {
		fieldTR_TIPRES.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TR_TIPRES as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTR_TIPRES() {
		return fieldTR_TIPRES.getBigDecimal();
	}

	/**
	 * Set field TR_PERINI using a String value.
	 */
	public void setTR_PERINI(String newvalue) {
		fieldTR_PERINI.setString(newvalue);
	}

	/**
	 * Get value of field TR_PERINI as a String.
	 */
	public String getTR_PERINI() {
		return fieldTR_PERINI.getString();
	}

	/**
	 * Set numeric field TR_PERINI using a BigDecimal value.
	 */
	public void setTR_PERINI(BigDecimal newvalue) {
		fieldTR_PERINI.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TR_PERINI as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTR_PERINI() {
		return fieldTR_PERINI.getBigDecimal();
	}

	/**
	 * Set field TR_PERFIN using a String value.
	 */
	public void setTR_PERFIN(String newvalue) {
		fieldTR_PERFIN.setString(newvalue);
	}

	/**
	 * Get value of field TR_PERFIN as a String.
	 */
	public String getTR_PERFIN() {
		return fieldTR_PERFIN.getString();
	}

	/**
	 * Set numeric field TR_PERFIN using a BigDecimal value.
	 */
	public void setTR_PERFIN(BigDecimal newvalue) {
		fieldTR_PERFIN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TR_PERFIN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTR_PERFIN() {
		return fieldTR_PERFIN.getBigDecimal();
	}

	/**
	 * Set field TR_FOLSAT using a String value.
	 */
	public void setTR_FOLSAT(String newvalue) {
		fieldTR_FOLSAT.setString(newvalue);
	}

	/**
	 * Get value of field TR_FOLSAT as a String.
	 */
	public String getTR_FOLSAT() {
		return fieldTR_FOLSAT.getString();
	}

	/**
	 * Set numeric field TR_FOLSAT using a BigDecimal value.
	 */
	public void setTR_FOLSAT(BigDecimal newvalue) {
		fieldTR_FOLSAT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TR_FOLSAT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTR_FOLSAT() {
		return fieldTR_FOLSAT.getBigDecimal();
	}

	/**
	 * Set field TR_ERROR1 using a String value.
	 */
	public void setTR_ERROR1(String newvalue) {
		fieldTR_ERROR1.setString(newvalue);
	}

	/**
	 * Get value of field TR_ERROR1 as a String.
	 */
	public String getTR_ERROR1() {
		return fieldTR_ERROR1.getString();
	}

	/**
	 * Set field TR_ERROR2 using a String value.
	 */
	public void setTR_ERROR2(String newvalue) {
		fieldTR_ERROR2.setString(newvalue);
	}

	/**
	 * Get value of field TR_ERROR2 as a String.
	 */
	public String getTR_ERROR2() {
		return fieldTR_ERROR2.getString();
	}

	/**
	 * Set field TR_ERROR3 using a String value.
	 */
	public void setTR_ERROR3(String newvalue) {
		fieldTR_ERROR3.setString(newvalue);
	}

	/**
	 * Get value of field TR_ERROR3 as a String.
	 */
	public String getTR_ERROR3() {
		return fieldTR_ERROR3.getString();
	}

	/**
	 * Set field TR_ERROR4 using a String value.
	 */
	public void setTR_ERROR4(String newvalue) {
		fieldTR_ERROR4.setString(newvalue);
	}

	/**
	 * Get value of field TR_ERROR4 as a String.
	 */
	public String getTR_ERROR4() {
		return fieldTR_ERROR4.getString();
	}

}
