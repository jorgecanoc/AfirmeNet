package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from IN098102 physical file
 * definition.
 * 
 * File level identifier is 1010330122725. Record format level identifier is
 * 59EC42D760081.
 */

public class IN098102Message extends MessageRecord {
	final int FIELDCOUNT = 9;
	private CharacterField fieldIN982USR = null;
	private CharacterField fieldIN982CRNUM = null;
	private DecimalField fieldIN982DEBAC = null;
	private DecimalField fieldIN982PAYAM = null;
	private CharacterField fieldIN982CCY = null;
	private DecimalField fieldIN982DTE1 = null;
	private DecimalField fieldIN982DTE2 = null;
	private DecimalField fieldIN982DTE3 = null;
	private CharacterField fieldIN982ENDFL = null;

	/**
	 * Constructor for IN098102Message.
	 */
	public IN098102Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 70;
		fileid = "1010330122725";
		recordid = "59EC42D760081";
		message = new byte[getByteLength()];
		formatname = "IN098102";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "IN982USR";
		tagnames[0] = "IN982USR";
		fields[0] = fieldIN982USR = new CharacterField(message, HEADERSIZE + 0,
				10, "IN982USR");
		fieldnames[1] = "IN982CRNUM";
		tagnames[1] = "IN982CRNUM";
		fields[1] = fieldIN982CRNUM = new CharacterField(message,
				HEADERSIZE + 10, 17, "IN982CRNUM");
		fieldnames[2] = "IN982DEBAC";
		tagnames[2] = "IN982DEBAC";
		fields[2] = fieldIN982DEBAC = new DecimalField(message,
				HEADERSIZE + 27, 13, 0, "IN982DEBAC");
		fieldnames[3] = "IN982PAYAM";
		tagnames[3] = "IN982PAYAM";
		fields[3] = fieldIN982PAYAM = new DecimalField(message,
				HEADERSIZE + 40, 17, 2, "IN982PAYAM");
		fieldnames[4] = "IN982CCY";
		tagnames[4] = "IN982CCY";
		fields[4] = fieldIN982CCY = new CharacterField(message,
				HEADERSIZE + 57, 3, "IN982CCY");
		fieldnames[5] = "IN982DTE1";
		tagnames[5] = "IN982DTE1";
		fields[5] = fieldIN982DTE1 = new DecimalField(message, HEADERSIZE + 60,
				3, 0, "IN982DTE1");
		fieldnames[6] = "IN982DTE2";
		tagnames[6] = "IN982DTE2";
		fields[6] = fieldIN982DTE2 = new DecimalField(message, HEADERSIZE + 63,
				3, 0, "IN982DTE2");
		fieldnames[7] = "IN982DTE3";
		tagnames[7] = "IN982DTE3";
		fields[7] = fieldIN982DTE3 = new DecimalField(message, HEADERSIZE + 66,
				3, 0, "IN982DTE3");
		fieldnames[8] = "IN982ENDFL";
		tagnames[8] = "IN982ENDFL";
		fields[8] = fieldIN982ENDFL = new CharacterField(message,
				HEADERSIZE + 69, 1, "IN982ENDFL");
	}

	/**
	 * Set field IN982USR using a String value.
	 */
	public void setIN982USR(String newvalue) {
		fieldIN982USR.setString(newvalue);
	}

	/**
	 * Get value of field IN982USR as a String.
	 */
	public String getIN982USR() {
		return fieldIN982USR.getString();
	}

	/**
	 * Set field IN982CRNUM using a String value.
	 */
	public void setIN982CRNUM(String newvalue) {
		fieldIN982CRNUM.setString(newvalue);
	}

	/**
	 * Get value of field IN982CRNUM as a String.
	 */
	public String getIN982CRNUM() {
		return fieldIN982CRNUM.getString();
	}

	/**
	 * Set field IN982DEBAC using a String value.
	 */
	public void setIN982DEBAC(String newvalue) {
		fieldIN982DEBAC.setString(newvalue);
	}

	/**
	 * Get value of field IN982DEBAC as a String.
	 */
	public String getIN982DEBAC() {
		return fieldIN982DEBAC.getString();
	}

	/**
	 * Set numeric field IN982DEBAC using a BigDecimal value.
	 */
	public void setIN982DEBAC(BigDecimal newvalue) {
		fieldIN982DEBAC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN982DEBAC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN982DEBAC() {
		return fieldIN982DEBAC.getBigDecimal();
	}

	/**
	 * Set field IN982PAYAM using a String value.
	 */
	public void setIN982PAYAM(String newvalue) {
		fieldIN982PAYAM.setString(newvalue);
	}

	/**
	 * Get value of field IN982PAYAM as a String.
	 */
	public String getIN982PAYAM() {
		return fieldIN982PAYAM.getString();
	}

	/**
	 * Set numeric field IN982PAYAM using a BigDecimal value.
	 */
	public void setIN982PAYAM(BigDecimal newvalue) {
		fieldIN982PAYAM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN982PAYAM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN982PAYAM() {
		return fieldIN982PAYAM.getBigDecimal();
	}

	/**
	 * Set field IN982CCY using a String value.
	 */
	public void setIN982CCY(String newvalue) {
		fieldIN982CCY.setString(newvalue);
	}

	/**
	 * Get value of field IN982CCY as a String.
	 */
	public String getIN982CCY() {
		return fieldIN982CCY.getString();
	}

	/**
	 * Set field IN982DTE1 using a String value.
	 */
	public void setIN982DTE1(String newvalue) {
		fieldIN982DTE1.setString(newvalue);
	}

	/**
	 * Get value of field IN982DTE1 as a String.
	 */
	public String getIN982DTE1() {
		return fieldIN982DTE1.getString();
	}

	/**
	 * Set numeric field IN982DTE1 using a BigDecimal value.
	 */
	public void setIN982DTE1(BigDecimal newvalue) {
		fieldIN982DTE1.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN982DTE1 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN982DTE1() {
		return fieldIN982DTE1.getBigDecimal();
	}

	/**
	 * Set field IN982DTE2 using a String value.
	 */
	public void setIN982DTE2(String newvalue) {
		fieldIN982DTE2.setString(newvalue);
	}

	/**
	 * Get value of field IN982DTE2 as a String.
	 */
	public String getIN982DTE2() {
		return fieldIN982DTE2.getString();
	}

	/**
	 * Set numeric field IN982DTE2 using a BigDecimal value.
	 */
	public void setIN982DTE2(BigDecimal newvalue) {
		fieldIN982DTE2.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN982DTE2 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN982DTE2() {
		return fieldIN982DTE2.getBigDecimal();
	}

	/**
	 * Set field IN982DTE3 using a String value.
	 */
	public void setIN982DTE3(String newvalue) {
		fieldIN982DTE3.setString(newvalue);
	}

	/**
	 * Get value of field IN982DTE3 as a String.
	 */
	public String getIN982DTE3() {
		return fieldIN982DTE3.getString();
	}

	/**
	 * Set numeric field IN982DTE3 using a BigDecimal value.
	 */
	public void setIN982DTE3(BigDecimal newvalue) {
		fieldIN982DTE3.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN982DTE3 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN982DTE3() {
		return fieldIN982DTE3.getBigDecimal();
	}

	/**
	 * Set field IN982ENDFL using a String value.
	 */
	public void setIN982ENDFL(String newvalue) {
		fieldIN982ENDFL.setString(newvalue);
	}

	/**
	 * Get value of field IN982ENDFL as a String.
	 */
	public String getIN982ENDFL() {
		return fieldIN982ENDFL.getString();
	}

}