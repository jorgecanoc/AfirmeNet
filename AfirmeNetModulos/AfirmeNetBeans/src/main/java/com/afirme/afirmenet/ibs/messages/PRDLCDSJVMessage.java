package com.afirme.afirmenet.ibs.messages;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from PRDLCDSJV physical file
 * definition.
 * 
 * File level identifier is 1000802211902. Record format level identifier is
 * 4032B6AA0A017.
 */

public class PRDLCDSJVMessage extends MessageRecord {
	final int FIELDCOUNT = 11;
	private CharacterField fieldPRDUSR = null;
	private CharacterField fieldPRDKEY = null;
	private CharacterField fieldPRDATY = null;
	private CharacterField fieldPRDPRD = null;
	private CharacterField fieldPRDSNM = null;
	private CharacterField fieldPRDTYP = null;
	private CharacterField fieldPRDAOB = null;
	private CharacterField fieldPRDTRN = null;
	private CharacterField fieldPRDCNF = null;
	private CharacterField fieldPRDPSH = null;
	private CharacterField fieldPRDTSH = null;

	/**
	 * Constructor for PRDLCDSJVMessage.
	 */
	public PRDLCDSJVMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 47;
		fileid = "1000802211902";
		recordid = "4032B6AA0A017";
		message = new byte[getByteLength()];
		formatname = "PRDLCDSJV";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "PRDUSR";
		tagnames[0] = "PRDUSR";
		fields[0] = fieldPRDUSR = new CharacterField(message, HEADERSIZE + 0,
				10, "PRDUSR");
		fieldnames[1] = "PRDKEY";
		tagnames[1] = "PRDKEY";
		fields[1] = fieldPRDKEY = new CharacterField(message, HEADERSIZE + 10,
				9, "PRDKEY");
		fieldnames[2] = "PRDATY";
		tagnames[2] = "PRDATY";
		fields[2] = fieldPRDATY = new CharacterField(message, HEADERSIZE + 19,
				3, "PRDATY");
		fieldnames[3] = "PRDPRD";
		tagnames[3] = "PRDPRD";
		fields[3] = fieldPRDPRD = new CharacterField(message, HEADERSIZE + 22,
				4, "PRDPRD");
		fieldnames[4] = "PRDSNM";
		tagnames[4] = "PRDSNM";
		fields[4] = fieldPRDSNM = new CharacterField(message, HEADERSIZE + 26,
				15, "PRDSNM");
		fieldnames[5] = "PRDTYP";
		tagnames[5] = "PRDTYP";
		fields[5] = fieldPRDTYP = new CharacterField(message, HEADERSIZE + 41,
				1, "PRDTYP");
		fieldnames[6] = "PRDAOB";
		tagnames[6] = "PRDAOB";
		fields[6] = fieldPRDAOB = new CharacterField(message, HEADERSIZE + 42,
				1, "PRDAOB");
		fieldnames[7] = "PRDTRN";
		tagnames[7] = "PRDTRN";
		fields[7] = fieldPRDTRN = new CharacterField(message, HEADERSIZE + 43,
				1, "PRDTRN");
		fieldnames[8] = "PRDCNF";
		tagnames[8] = "PRDCNF";
		fields[8] = fieldPRDCNF = new CharacterField(message, HEADERSIZE + 44,
				1, "PRDCNF");
		fieldnames[9] = "PRDPSH";
		tagnames[9] = "PRDPSH";
		fields[9] = fieldPRDPSH = new CharacterField(message, HEADERSIZE + 45,
				1, "PRDPSH");
		fieldnames[10] = "PRDTSH";
		tagnames[10] = "PRDTSH";
		fields[10] = fieldPRDTSH = new CharacterField(message, HEADERSIZE + 46,
				1, "PRDTSH");
	}

	/**
	 * Get value of field PRDAOB as a String.
	 */
	public String getPRDAOB() {
		return fieldPRDAOB.getString();
	}

	/**
	 * Get value of field PRDATY as a String.
	 */
	public String getPRDATY() {
		return fieldPRDATY.getString();
	}

	/**
	 * Get value of field PRDCNF as a String.
	 */
	public String getPRDCNF() {
		return fieldPRDCNF.getString();
	}

	/**
	 * Get value of field PRDKEY as a String.
	 */
	public String getPRDKEY() {
		return fieldPRDKEY.getString();
	}

	/**
	 * Get value of field PRDPRD as a String.
	 */
	public String getPRDPRD() {
		return fieldPRDPRD.getString();
	}

	/**
	 * Get value of field PRDPSH as a String.
	 */
	public String getPRDPSH() {
		return fieldPRDPSH.getString();
	}

	/**
	 * Get value of field PRDSNM as a String.
	 */
	public String getPRDSNM() {
		return fieldPRDSNM.getString();
	}

	/**
	 * Get value of field PRDTRN as a String.
	 */
	public String getPRDTRN() {
		return fieldPRDTRN.getString();
	}

	/**
	 * Get value of field PRDTSH as a String.
	 */
	public String getPRDTSH() {
		return fieldPRDTSH.getString();
	}

	/**
	 * Get value of field PRDTYP as a String.
	 */
	public String getPRDTYP() {
		return fieldPRDTYP.getString();
	}

	/**
	 * Get value of field PRDUSR as a String.
	 */
	public String getPRDUSR() {
		return fieldPRDUSR.getString();
	}

	/**
	 * Set field PRDAOB using a String value.
	 */
	public void setPRDAOB(String newvalue) {
		fieldPRDAOB.setString(newvalue);
	}

	/**
	 * Set field PRDATY using a String value.
	 */
	public void setPRDATY(String newvalue) {
		fieldPRDATY.setString(newvalue);
	}

	/**
	 * Set field PRDCNF using a String value.
	 */
	public void setPRDCNF(String newvalue) {
		fieldPRDCNF.setString(newvalue);
	}

	/**
	 * Set field PRDKEY using a String value.
	 */
	public void setPRDKEY(String newvalue) {
		fieldPRDKEY.setString(newvalue);
	}

	/**
	 * Set field PRDPRD using a String value.
	 */
	public void setPRDPRD(String newvalue) {
		fieldPRDPRD.setString(newvalue);
	}

	/**
	 * Set field PRDPSH using a String value.
	 */
	public void setPRDPSH(String newvalue) {
		fieldPRDPSH.setString(newvalue);
	}

	/**
	 * Set field PRDSNM using a String value.
	 */
	public void setPRDSNM(String newvalue) {
		fieldPRDSNM.setString(newvalue);
	}

	/**
	 * Set field PRDTRN using a String value.
	 */
	public void setPRDTRN(String newvalue) {
		fieldPRDTRN.setString(newvalue);
	}

	/**
	 * Set field PRDTSH using a String value.
	 */
	public void setPRDTSH(String newvalue) {
		fieldPRDTSH.setString(newvalue);
	}

	/**
	 * Set field PRDTYP using a String value.
	 */
	public void setPRDTYP(String newvalue) {
		fieldPRDTYP.setString(newvalue);
	}

	/**
	 * Set field PRDUSR using a String value.
	 */
	public void setPRDUSR(String newvalue) {
		fieldPRDUSR.setString(newvalue);
	}
}