package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from PHREGISTER physical file
 * definition.
 * 
 * File level identifier is 1000922165745. Record format level identifier is
 * 25F359930FE58.
 */

public class PHREGISTERMessage extends MessageRecord {
	final int FIELDCOUNT = 3;
	private CharacterField fieldREGUSR = null;
	private DecimalField fieldREGACC = null;
	private DecimalField fieldREGPIN = null;

	/**
	 * Constructor for PHREGISTERMessage.
	 */
	public PHREGISTERMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */

	protected void createFields() {
		recordsize = 30;
		fileid = "1000922165745";
		recordid = "25F359930FE58";
		message = new byte[getByteLength()];
		formatname = "PHREGISTER";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "REGUSR";
		tagnames[0] = "REGUSR";
		fields[0] = fieldREGUSR = new CharacterField(message, HEADERSIZE + 0,
				10, "REGUSR");
		fieldnames[1] = "REGACC";
		tagnames[1] = "REGACC";
		fields[1] = fieldREGACC = new DecimalField(message, HEADERSIZE + 10,
				13, 0, "REGACC");
		fieldnames[2] = "REGPIN";
		tagnames[2] = "REGPIN";
		fields[2] = fieldREGPIN = new DecimalField(message, HEADERSIZE + 23, 7,
				0, "REGPIN");
	}

	/**
	 * Return value of numeric field REGACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGACC() {
		return fieldREGACC.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGPIN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGPIN() {
		return fieldREGPIN.getBigDecimal();
	}

	/**
	 * Get value of field REGACC as a String.
	 */
	public String getREGACC() {
		return fieldREGACC.getString();
	}

	/**
	 * Get value of field REGPIN as a String.
	 */
	public String getREGPIN() {
		return fieldREGPIN.getString();
	}

	/**
	 * Get value of field REGUSR as a String.
	 */
	public String getREGUSR() {
		return fieldREGUSR.getString();
	}

	/**
	 * Set field REGACC using a String value.
	 */
	public void setREGACC(String newvalue) {
		fieldREGACC.setString(newvalue);
	}

	/**
	 * Set numeric field REGACC using a BigDecimal value.
	 */
	public void setREGACC(BigDecimal newvalue) {
		fieldREGACC.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGPIN using a String value.
	 */
	public void setREGPIN(String newvalue) {
		fieldREGPIN.setString(newvalue);
	}

	/**
	 * Set numeric field REGPIN using a BigDecimal value.
	 */
	public void setREGPIN(BigDecimal newvalue) {
		fieldREGPIN.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGUSR using a String value.
	 */
	public void setREGUSR(String newvalue) {
		fieldREGUSR.setString(newvalue);
	}
}