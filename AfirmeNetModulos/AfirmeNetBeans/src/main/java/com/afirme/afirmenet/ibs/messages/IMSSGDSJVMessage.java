package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from IMSSGDSJV physical file
 * definition.
 * 
 * File level identifier is 1000802211812. Record format level identifier is
 * 399AD3A53A3D3.
 */

public class IMSSGDSJVMessage extends MessageRecord {
	final int FIELDCOUNT = 11;
	private CharacterField fieldDSJIMSUSR = null;
	private DecimalField fieldDSJNUM = null;
	private CharacterField fieldDSJIMSPRD = null;
	private DecimalField fieldDSJIMSCUN = null;
	private DecimalField fieldDSJIMSSDTE = null;
	private DecimalField fieldDSJIMSSTIM = null;
	private CharacterField fieldDSJIMSTXT = null;
	private CharacterField fieldDSJIMSLNKT = null;
	private CharacterField fieldDSJIMSKEY = null;
	private CharacterField fieldDSJIMSNME = null;
	private CharacterField fieldDSJIMSFIN = null;

	/**
	 * Constructor for IMSSGDSJVMessage.
	 */
	public IMSSGDSJVMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 207;
		fileid = "1000802211812";
		recordid = "399AD3A53A3D3";
		message = new byte[getByteLength()];
		formatname = "IMSSGDSJV";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "DSJIMSUSR";
		tagnames[0] = "DSJIMSUSR";
		fields[0] = fieldDSJIMSUSR = new CharacterField(message,
				HEADERSIZE + 0, 10, "DSJIMSUSR");
		fieldnames[1] = "DSJNUM";
		tagnames[1] = "DSJNUM";
		fields[1] = fieldDSJNUM = new DecimalField(message, HEADERSIZE + 10, 7,
				0, "DSJNUM");
		fieldnames[2] = "DSJIMSPRD";
		tagnames[2] = "DSJIMSPRD";
		fields[2] = fieldDSJIMSPRD = new CharacterField(message,
				HEADERSIZE + 17, 4, "DSJIMSPRD");
		fieldnames[3] = "DSJIMSCUN";
		tagnames[3] = "DSJIMSCUN";
		fields[3] = fieldDSJIMSCUN = new DecimalField(message, HEADERSIZE + 21,
				10, 0, "DSJIMSCUN");
		fieldnames[4] = "DSJIMSSDTE";
		tagnames[4] = "DSJIMSSDTE";
		fields[4] = fieldDSJIMSSDTE = new DecimalField(message,
				HEADERSIZE + 31, 9, 0, "DSJIMSSDTE");
		fieldnames[5] = "DSJIMSSTIM";
		tagnames[5] = "DSJIMSSTIM";
		fields[5] = fieldDSJIMSSTIM = new DecimalField(message,
				HEADERSIZE + 40, 7, 0, "DSJIMSSTIM");
		fieldnames[6] = "DSJIMSTXT";
		tagnames[6] = "DSJIMSTXT";
		fields[6] = fieldDSJIMSTXT = new CharacterField(message,
				HEADERSIZE + 47, 80, "DSJIMSTXT");
		fieldnames[7] = "DSJIMSLNKT";
		tagnames[7] = "DSJIMSLNKT";
		fields[7] = fieldDSJIMSLNKT = new CharacterField(message,
				HEADERSIZE + 127, 2, "DSJIMSLNKT");
		fieldnames[8] = "DSJIMSKEY";
		tagnames[8] = "DSJIMSKEY";
		fields[8] = fieldDSJIMSKEY = new CharacterField(message,
				HEADERSIZE + 129, 32, "DSJIMSKEY");
		fieldnames[9] = "DSJIMSNME";
		tagnames[9] = "DSJIMSNME";
		fields[9] = fieldDSJIMSNME = new CharacterField(message,
				HEADERSIZE + 161, 45, "DSJIMSNME");
		fieldnames[10] = "DSJIMSFIN";
		tagnames[10] = "DSJIMSFIN";
		fields[10] = fieldDSJIMSFIN = new CharacterField(message,
				HEADERSIZE + 206, 1, "DSJIMSFIN");
	}

	/**
	 * Return value of numeric field DSJIMSCUN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJIMSCUN() {
		return fieldDSJIMSCUN.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJIMSSDTE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJIMSSDTE() {
		return fieldDSJIMSSDTE.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJIMSSTIM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJIMSSTIM() {
		return fieldDSJIMSSTIM.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJNUM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJNUM() {
		return fieldDSJNUM.getBigDecimal();
	}

	/**
	 * Get value of field DSJIMSCUN as a String.
	 */
	public String getDSJIMSCUN() {
		return fieldDSJIMSCUN.getString();
	}

	/**
	 * Get value of field DSJIMSFIN as a String.
	 */
	public String getDSJIMSFIN() {
		return fieldDSJIMSFIN.getString();
	}

	/**
	 * Get value of field DSJIMSKEY as a String.
	 */
	public String getDSJIMSKEY() {
		return fieldDSJIMSKEY.getString();
	}

	/**
	 * Get value of field DSJIMSLNKT as a String.
	 */
	public String getDSJIMSLNKT() {
		return fieldDSJIMSLNKT.getString();
	}

	/**
	 * Get value of field DSJIMSNME as a String.
	 */
	public String getDSJIMSNME() {
		return fieldDSJIMSNME.getString();
	}

	/**
	 * Get value of field DSJIMSPRD as a String.
	 */
	public String getDSJIMSPRD() {
		return fieldDSJIMSPRD.getString();
	}

	/**
	 * Get value of field DSJIMSSDTE as a String.
	 */
	public String getDSJIMSSDTE() {
		return fieldDSJIMSSDTE.getString();
	}

	/**
	 * Get value of field DSJIMSSTIM as a String.
	 */
	public String getDSJIMSSTIM() {
		return fieldDSJIMSSTIM.getString();
	}

	/**
	 * Get value of field DSJIMSTXT as a String.
	 */
	public String getDSJIMSTXT() {
		return fieldDSJIMSTXT.getString();
	}

	/**
	 * Get value of field DSJIMSUSR as a String.
	 */
	public String getDSJIMSUSR() {
		return fieldDSJIMSUSR.getString();
	}

	/**
	 * Get value of field DSJNUM as a String.
	 */
	public String getDSJNUM() {
		return fieldDSJNUM.getString();
	}

	/**
	 * Set field DSJIMSCUN using a String value.
	 */
	public void setDSJIMSCUN(String newvalue) {
		fieldDSJIMSCUN.setString(newvalue);
	}

	/**
	 * Set numeric field DSJIMSCUN using a BigDecimal value.
	 */
	public void setDSJIMSCUN(BigDecimal newvalue) {
		fieldDSJIMSCUN.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJIMSFIN using a String value.
	 */
	public void setDSJIMSFIN(String newvalue) {
		fieldDSJIMSFIN.setString(newvalue);
	}

	/**
	 * Set field DSJIMSKEY using a String value.
	 */
	public void setDSJIMSKEY(String newvalue) {
		fieldDSJIMSKEY.setString(newvalue);
	}

	/**
	 * Set field DSJIMSLNKT using a String value.
	 */
	public void setDSJIMSLNKT(String newvalue) {
		fieldDSJIMSLNKT.setString(newvalue);
	}

	/**
	 * Set field DSJIMSNME using a String value.
	 */
	public void setDSJIMSNME(String newvalue) {
		fieldDSJIMSNME.setString(newvalue);
	}

	/**
	 * Set field DSJIMSPRD using a String value.
	 */
	public void setDSJIMSPRD(String newvalue) {
		fieldDSJIMSPRD.setString(newvalue);
	}

	/**
	 * Set field DSJIMSSDTE using a String value.
	 */
	public void setDSJIMSSDTE(String newvalue) {
		fieldDSJIMSSDTE.setString(newvalue);
	}

	/**
	 * Set numeric field DSJIMSSDTE using a BigDecimal value.
	 */
	public void setDSJIMSSDTE(BigDecimal newvalue) {
		fieldDSJIMSSDTE.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJIMSSTIM using a String value.
	 */
	public void setDSJIMSSTIM(String newvalue) {
		fieldDSJIMSSTIM.setString(newvalue);
	}

	/**
	 * Set numeric field DSJIMSSTIM using a BigDecimal value.
	 */
	public void setDSJIMSSTIM(BigDecimal newvalue) {
		fieldDSJIMSSTIM.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJIMSTXT using a String value.
	 */
	public void setDSJIMSTXT(String newvalue) {
		fieldDSJIMSTXT.setString(newvalue);
	}

	/**
	 * Set field DSJIMSUSR using a String value.
	 */
	public void setDSJIMSUSR(String newvalue) {
		fieldDSJIMSUSR.setString(newvalue);
	}

	/**
	 * Set field DSJNUM using a String value.
	 */
	public void setDSJNUM(String newvalue) {
		fieldDSJNUM.setString(newvalue);
	}

	/**
	 * Set numeric field DSJNUM using a BigDecimal value.
	 */
	public void setDSJNUM(BigDecimal newvalue) {
		fieldDSJNUM.setBigDecimal(newvalue);
	}
}