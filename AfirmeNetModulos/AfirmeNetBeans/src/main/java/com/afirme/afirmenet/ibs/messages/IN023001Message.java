package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from IN023001 physical file
 * definition.
 * 
 * File level identifier is 1040430194451. Record format level identifier is
 * 60F7ECFB6816C.
 */
@SuppressWarnings("rawtypes")
public class IN023001Message extends MessageRecord {
	final static String fldnames[] = { "IN230USR", "IN230RFN", "IN230FLG",
			"IN230TSC", "IN230TSA", "IN230TSP", "IN230AMT", "IN230CCY",
			"IN230IVA", "IN230COM", "IN230IVC", "IN230RFC", "IN230RCVBK",
			"IN230RCVBR", "IN230BNF", "IN230REF", "IN230DSC", "IN230DRATY",
			"IN230CRATY", "IN230DRBNK", "IN230DRBRN", "IN230DRCCY",
			"IN230DRGLN", "IN230DRACC", "IN230CRBNK", "IN230CRBRN",
			"IN230CRCCY", "IN230CRGLN", "IN230CRACC", "IN230US1", "IN230US2",
			"IN230US3" };
	final static String tnames[] = { "IN230USR", "IN230RFN", "IN230FLG",
			"IN230TSC", "IN230TSA", "IN230TSP", "IN230AMT", "IN230CCY",
			"IN230IVA", "IN230COM", "IN230IVC", "IN230RFC", "IN230RCVBK",
			"IN230RCVBR", "IN230BNF", "IN230REF", "IN230DSC", "IN230DRATY",
			"IN230CRATY", "IN230DRBNK", "IN230DRBRN", "IN230DRCCY",
			"IN230DRGLN", "IN230DRACC", "IN230CRBNK", "IN230CRBRN",
			"IN230CRCCY", "IN230CRGLN", "IN230CRACC", "IN230US1", "IN230US2",
			"IN230US3" };
	final static String fid = "1040430194451";
	final static String rid = "60F7ECFB6816C";
	final static String fmtname = "IN023001";
	final int FIELDCOUNT = 32;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldIN230USR = null;
	private CharacterField fieldIN230RFN = null;
	private CharacterField fieldIN230FLG = null;
	private DecimalField fieldIN230TSC = null;
	private DecimalField fieldIN230TSA = null;
	private DecimalField fieldIN230TSP = null;
	private DecimalField fieldIN230AMT = null;
	private CharacterField fieldIN230CCY = null;
	private DecimalField fieldIN230IVA = null;
	private DecimalField fieldIN230COM = null;
	private DecimalField fieldIN230IVC = null;
	private CharacterField fieldIN230RFC = null;
	private DecimalField fieldIN230RCVBK = null;
	private DecimalField fieldIN230RCVBR = null;
	private CharacterField fieldIN230BNF = null;
	private CharacterField fieldIN230REF = null;
	private CharacterField fieldIN230DSC = null;
	private DecimalField fieldIN230DRATY = null;
	private DecimalField fieldIN230CRATY = null;
	private CharacterField fieldIN230DRBNK = null;
	private DecimalField fieldIN230DRBRN = null;
	private CharacterField fieldIN230DRCCY = null;
	private DecimalField fieldIN230DRGLN = null;
	private DecimalField fieldIN230DRACC = null;
	private CharacterField fieldIN230CRBNK = null;
	private DecimalField fieldIN230CRBRN = null;
	private CharacterField fieldIN230CRCCY = null;
	private DecimalField fieldIN230CRGLN = null;
	private DecimalField fieldIN230CRACC = null;
	private CharacterField fieldIN230US1 = null;
	private CharacterField fieldIN230US2 = null;
	private CharacterField fieldIN230US3 = null;

	/**
	 * Constructor for IN023001Message.
	 */
	public IN023001Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 393;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldIN230USR = new CharacterField(message, HEADERSIZE + 0,
				10, "IN230USR");
		fields[1] = fieldIN230RFN = new CharacterField(message,
				HEADERSIZE + 10, 12, "IN230RFN");
		fields[2] = fieldIN230FLG = new CharacterField(message,
				HEADERSIZE + 22, 1, "IN230FLG");
		fields[3] = fieldIN230TSC = new DecimalField(message, HEADERSIZE + 23,
				13, 0, "IN230TSC");
		fields[4] = fieldIN230TSA = new DecimalField(message, HEADERSIZE + 36,
				13, 0, "IN230TSA");
		fields[5] = fieldIN230TSP = new DecimalField(message, HEADERSIZE + 49,
				13, 0, "IN230TSP");
		fields[6] = fieldIN230AMT = new DecimalField(message, HEADERSIZE + 62,
				15, 2, "IN230AMT");
		fields[7] = fieldIN230CCY = new CharacterField(message,
				HEADERSIZE + 77, 3, "IN230CCY");
		fields[8] = fieldIN230IVA = new DecimalField(message, HEADERSIZE + 80,
				15, 2, "IN230IVA");
		fields[9] = fieldIN230COM = new DecimalField(message, HEADERSIZE + 95,
				15, 2, "IN230COM");
		fields[10] = fieldIN230IVC = new DecimalField(message,
				HEADERSIZE + 110, 15, 2, "IN230IVC");
		fields[11] = fieldIN230RFC = new CharacterField(message,
				HEADERSIZE + 125, 18, "IN230RFC");
		fields[12] = fieldIN230RCVBK = new DecimalField(message,
				HEADERSIZE + 143, 5, 0, "IN230RCVBK");
		fields[13] = fieldIN230RCVBR = new DecimalField(message,
				HEADERSIZE + 148, 6, 0, "IN230RCVBR");
		fields[14] = fieldIN230BNF = new CharacterField(message,
				HEADERSIZE + 154, 40, "IN230BNF");
		fields[15] = fieldIN230REF = new CharacterField(message,
				HEADERSIZE + 194, 40, "IN230REF");
		fields[16] = fieldIN230DSC = new CharacterField(message,
				HEADERSIZE + 234, 45, "IN230DSC");
		fields[17] = fieldIN230DRATY = new DecimalField(message,
				HEADERSIZE + 279, 3, 0, "IN230DRATY");
		fields[18] = fieldIN230CRATY = new DecimalField(message,
				HEADERSIZE + 282, 3, 0, "IN230CRATY");
		fields[19] = fieldIN230DRBNK = new CharacterField(message,
				HEADERSIZE + 285, 2, "IN230DRBNK");
		fields[20] = fieldIN230DRBRN = new DecimalField(message,
				HEADERSIZE + 287, 4, 0, "IN230DRBRN");
		fields[21] = fieldIN230DRCCY = new CharacterField(message,
				HEADERSIZE + 291, 3, "IN230DRCCY");
		fields[22] = fieldIN230DRGLN = new DecimalField(message,
				HEADERSIZE + 294, 17, 0, "IN230DRGLN");
		fields[23] = fieldIN230DRACC = new DecimalField(message,
				HEADERSIZE + 311, 13, 0, "IN230DRACC");
		fields[24] = fieldIN230CRBNK = new CharacterField(message,
				HEADERSIZE + 324, 2, "IN230CRBNK");
		fields[25] = fieldIN230CRBRN = new DecimalField(message,
				HEADERSIZE + 326, 4, 0, "IN230CRBRN");
		fields[26] = fieldIN230CRCCY = new CharacterField(message,
				HEADERSIZE + 330, 3, "IN230CRCCY");
		fields[27] = fieldIN230CRGLN = new DecimalField(message,
				HEADERSIZE + 333, 17, 0, "IN230CRGLN");
		fields[28] = fieldIN230CRACC = new DecimalField(message,
				HEADERSIZE + 350, 13, 0, "IN230CRACC");
		fields[29] = fieldIN230US1 = new CharacterField(message,
				HEADERSIZE + 363, 10, "IN230US1");
		fields[30] = fieldIN230US2 = new CharacterField(message,
				HEADERSIZE + 373, 10, "IN230US2");
		fields[31] = fieldIN230US3 = new CharacterField(message,
				HEADERSIZE + 383, 10, "IN230US3");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field IN230USR using a String value.
	 */
	public void setIN230USR(String newvalue) {
		fieldIN230USR.setString(newvalue);
	}

	/**
	 * Get value of field IN230USR as a String.
	 */
	public String getIN230USR() {
		return fieldIN230USR.getString();
	}

	/**
	 * Set field IN230RFN using a String value.
	 */
	public void setIN230RFN(String newvalue) {
		fieldIN230RFN.setString(newvalue);
	}

	/**
	 * Get value of field IN230RFN as a String.
	 */
	public String getIN230RFN() {
		return fieldIN230RFN.getString();
	}

	/**
	 * Set field IN230FLG using a String value.
	 */
	public void setIN230FLG(String newvalue) {
		fieldIN230FLG.setString(newvalue);
	}

	/**
	 * Get value of field IN230FLG as a String.
	 */
	public String getIN230FLG() {
		return fieldIN230FLG.getString();
	}

	/**
	 * Set field IN230TSC using a String value.
	 */
	public void setIN230TSC(String newvalue) {
		fieldIN230TSC.setString(newvalue);
	}

	/**
	 * Get value of field IN230TSC as a String.
	 */
	public String getIN230TSC() {
		return fieldIN230TSC.getString();
	}

	/**
	 * Set numeric field IN230TSC using a BigDecimal value.
	 */
	public void setIN230TSC(BigDecimal newvalue) {
		fieldIN230TSC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230TSC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230TSC() {
		return fieldIN230TSC.getBigDecimal();
	}

	/**
	 * Set field IN230TSA using a String value.
	 */
	public void setIN230TSA(String newvalue) {
		fieldIN230TSA.setString(newvalue);
	}

	/**
	 * Get value of field IN230TSA as a String.
	 */
	public String getIN230TSA() {
		return fieldIN230TSA.getString();
	}

	/**
	 * Set numeric field IN230TSA using a BigDecimal value.
	 */
	public void setIN230TSA(BigDecimal newvalue) {
		fieldIN230TSA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230TSA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230TSA() {
		return fieldIN230TSA.getBigDecimal();
	}

	/**
	 * Set field IN230TSP using a String value.
	 */
	public void setIN230TSP(String newvalue) {
		fieldIN230TSP.setString(newvalue);
	}

	/**
	 * Get value of field IN230TSP as a String.
	 */
	public String getIN230TSP() {
		return fieldIN230TSP.getString();
	}

	/**
	 * Set numeric field IN230TSP using a BigDecimal value.
	 */
	public void setIN230TSP(BigDecimal newvalue) {
		fieldIN230TSP.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230TSP as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230TSP() {
		return fieldIN230TSP.getBigDecimal();
	}

	/**
	 * Set field IN230AMT using a String value.
	 */
	public void setIN230AMT(String newvalue) {
		fieldIN230AMT.setString(newvalue);
	}

	/**
	 * Get value of field IN230AMT as a String.
	 */
	public String getIN230AMT() {
		return fieldIN230AMT.getString();
	}

	/**
	 * Set numeric field IN230AMT using a BigDecimal value.
	 */
	public void setIN230AMT(BigDecimal newvalue) {
		fieldIN230AMT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230AMT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230AMT() {
		return fieldIN230AMT.getBigDecimal();
	}

	/**
	 * Set field IN230CCY using a String value.
	 */
	public void setIN230CCY(String newvalue) {
		fieldIN230CCY.setString(newvalue);
	}

	/**
	 * Get value of field IN230CCY as a String.
	 */
	public String getIN230CCY() {
		return fieldIN230CCY.getString();
	}

	/**
	 * Set field IN230IVA using a String value.
	 */
	public void setIN230IVA(String newvalue) {
		fieldIN230IVA.setString(newvalue);
	}

	/**
	 * Get value of field IN230IVA as a String.
	 */
	public String getIN230IVA() {
		return fieldIN230IVA.getString();
	}

	/**
	 * Set numeric field IN230IVA using a BigDecimal value.
	 */
	public void setIN230IVA(BigDecimal newvalue) {
		fieldIN230IVA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230IVA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230IVA() {
		return fieldIN230IVA.getBigDecimal();
	}

	/**
	 * Set field IN230COM using a String value.
	 */
	public void setIN230COM(String newvalue) {
		fieldIN230COM.setString(newvalue);
	}

	/**
	 * Get value of field IN230COM as a String.
	 */
	public String getIN230COM() {
		return fieldIN230COM.getString();
	}

	/**
	 * Set numeric field IN230COM using a BigDecimal value.
	 */
	public void setIN230COM(BigDecimal newvalue) {
		fieldIN230COM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230COM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230COM() {
		return fieldIN230COM.getBigDecimal();
	}

	/**
	 * Set field IN230IVC using a String value.
	 */
	public void setIN230IVC(String newvalue) {
		fieldIN230IVC.setString(newvalue);
	}

	/**
	 * Get value of field IN230IVC as a String.
	 */
	public String getIN230IVC() {
		return fieldIN230IVC.getString();
	}

	/**
	 * Set numeric field IN230IVC using a BigDecimal value.
	 */
	public void setIN230IVC(BigDecimal newvalue) {
		fieldIN230IVC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230IVC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230IVC() {
		return fieldIN230IVC.getBigDecimal();
	}

	/**
	 * Set field IN230RFC using a String value.
	 */
	public void setIN230RFC(String newvalue) {
		fieldIN230RFC.setString(newvalue);
	}

	/**
	 * Get value of field IN230RFC as a String.
	 */
	public String getIN230RFC() {
		return fieldIN230RFC.getString();
	}

	/**
	 * Set field IN230RCVBK using a String value.
	 */
	public void setIN230RCVBK(String newvalue) {
		fieldIN230RCVBK.setString(newvalue);
	}

	/**
	 * Get value of field IN230RCVBK as a String.
	 */
	public String getIN230RCVBK() {
		return fieldIN230RCVBK.getString();
	}

	/**
	 * Set numeric field IN230RCVBK using a BigDecimal value.
	 */
	public void setIN230RCVBK(BigDecimal newvalue) {
		fieldIN230RCVBK.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230RCVBK as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230RCVBK() {
		return fieldIN230RCVBK.getBigDecimal();
	}

	/**
	 * Set field IN230RCVBR using a String value.
	 */
	public void setIN230RCVBR(String newvalue) {
		fieldIN230RCVBR.setString(newvalue);
	}

	/**
	 * Get value of field IN230RCVBR as a String.
	 */
	public String getIN230RCVBR() {
		return fieldIN230RCVBR.getString();
	}

	/**
	 * Set numeric field IN230RCVBR using a BigDecimal value.
	 */
	public void setIN230RCVBR(BigDecimal newvalue) {
		fieldIN230RCVBR.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230RCVBR as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230RCVBR() {
		return fieldIN230RCVBR.getBigDecimal();
	}

	/**
	 * Set field IN230BNF using a String value.
	 */
	public void setIN230BNF(String newvalue) {
		fieldIN230BNF.setString(newvalue);
	}

	/**
	 * Get value of field IN230BNF as a String.
	 */
	public String getIN230BNF() {
		return fieldIN230BNF.getString();
	}

	/**
	 * Set field IN230REF using a String value.
	 */
	public void setIN230REF(String newvalue) {
		fieldIN230REF.setString(newvalue);
	}

	/**
	 * Get value of field IN230REF as a String.
	 */
	public String getIN230REF() {
		return fieldIN230REF.getString();
	}

	/**
	 * Set field IN230DSC using a String value.
	 */
	public void setIN230DSC(String newvalue) {
		fieldIN230DSC.setString(newvalue);
	}

	/**
	 * Get value of field IN230DSC as a String.
	 */
	public String getIN230DSC() {
		return fieldIN230DSC.getString();
	}

	/**
	 * Set field IN230DRATY using a String value.
	 */
	public void setIN230DRATY(String newvalue) {
		fieldIN230DRATY.setString(newvalue);
	}

	/**
	 * Get value of field IN230DRATY as a String.
	 */
	public String getIN230DRATY() {
		return fieldIN230DRATY.getString();
	}

	/**
	 * Set numeric field IN230DRATY using a BigDecimal value.
	 */
	public void setIN230DRATY(BigDecimal newvalue) {
		fieldIN230DRATY.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230DRATY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230DRATY() {
		return fieldIN230DRATY.getBigDecimal();
	}

	/**
	 * Set field IN230CRATY using a String value.
	 */
	public void setIN230CRATY(String newvalue) {
		fieldIN230CRATY.setString(newvalue);
	}

	/**
	 * Get value of field IN230CRATY as a String.
	 */
	public String getIN230CRATY() {
		return fieldIN230CRATY.getString();
	}

	/**
	 * Set numeric field IN230CRATY using a BigDecimal value.
	 */
	public void setIN230CRATY(BigDecimal newvalue) {
		fieldIN230CRATY.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230CRATY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230CRATY() {
		return fieldIN230CRATY.getBigDecimal();
	}

	/**
	 * Set field IN230DRBNK using a String value.
	 */
	public void setIN230DRBNK(String newvalue) {
		fieldIN230DRBNK.setString(newvalue);
	}

	/**
	 * Get value of field IN230DRBNK as a String.
	 */
	public String getIN230DRBNK() {
		return fieldIN230DRBNK.getString();
	}

	/**
	 * Set field IN230DRBRN using a String value.
	 */
	public void setIN230DRBRN(String newvalue) {
		fieldIN230DRBRN.setString(newvalue);
	}

	/**
	 * Get value of field IN230DRBRN as a String.
	 */
	public String getIN230DRBRN() {
		return fieldIN230DRBRN.getString();
	}

	/**
	 * Set numeric field IN230DRBRN using a BigDecimal value.
	 */
	public void setIN230DRBRN(BigDecimal newvalue) {
		fieldIN230DRBRN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230DRBRN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230DRBRN() {
		return fieldIN230DRBRN.getBigDecimal();
	}

	/**
	 * Set field IN230DRCCY using a String value.
	 */
	public void setIN230DRCCY(String newvalue) {
		fieldIN230DRCCY.setString(newvalue);
	}

	/**
	 * Get value of field IN230DRCCY as a String.
	 */
	public String getIN230DRCCY() {
		return fieldIN230DRCCY.getString();
	}

	/**
	 * Set field IN230DRGLN using a String value.
	 */
	public void setIN230DRGLN(String newvalue) {
		fieldIN230DRGLN.setString(newvalue);
	}

	/**
	 * Get value of field IN230DRGLN as a String.
	 */
	public String getIN230DRGLN() {
		return fieldIN230DRGLN.getString();
	}

	/**
	 * Set numeric field IN230DRGLN using a BigDecimal value.
	 */
	public void setIN230DRGLN(BigDecimal newvalue) {
		fieldIN230DRGLN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230DRGLN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230DRGLN() {
		return fieldIN230DRGLN.getBigDecimal();
	}

	/**
	 * Set field IN230DRACC using a String value.
	 */
	public void setIN230DRACC(String newvalue) {
		fieldIN230DRACC.setString(newvalue);
	}

	/**
	 * Get value of field IN230DRACC as a String.
	 */
	public String getIN230DRACC() {
		return fieldIN230DRACC.getString();
	}

	/**
	 * Set numeric field IN230DRACC using a BigDecimal value.
	 */
	public void setIN230DRACC(BigDecimal newvalue) {
		fieldIN230DRACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230DRACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230DRACC() {
		return fieldIN230DRACC.getBigDecimal();
	}

	/**
	 * Set field IN230CRBNK using a String value.
	 */
	public void setIN230CRBNK(String newvalue) {
		fieldIN230CRBNK.setString(newvalue);
	}

	/**
	 * Get value of field IN230CRBNK as a String.
	 */
	public String getIN230CRBNK() {
		return fieldIN230CRBNK.getString();
	}

	/**
	 * Set field IN230CRBRN using a String value.
	 */
	public void setIN230CRBRN(String newvalue) {
		fieldIN230CRBRN.setString(newvalue);
	}

	/**
	 * Get value of field IN230CRBRN as a String.
	 */
	public String getIN230CRBRN() {
		return fieldIN230CRBRN.getString();
	}

	/**
	 * Set numeric field IN230CRBRN using a BigDecimal value.
	 */
	public void setIN230CRBRN(BigDecimal newvalue) {
		fieldIN230CRBRN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230CRBRN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230CRBRN() {
		return fieldIN230CRBRN.getBigDecimal();
	}

	/**
	 * Set field IN230CRCCY using a String value.
	 */
	public void setIN230CRCCY(String newvalue) {
		fieldIN230CRCCY.setString(newvalue);
	}

	/**
	 * Get value of field IN230CRCCY as a String.
	 */
	public String getIN230CRCCY() {
		return fieldIN230CRCCY.getString();
	}

	/**
	 * Set field IN230CRGLN using a String value.
	 */
	public void setIN230CRGLN(String newvalue) {
		fieldIN230CRGLN.setString(newvalue);
	}

	/**
	 * Get value of field IN230CRGLN as a String.
	 */
	public String getIN230CRGLN() {
		return fieldIN230CRGLN.getString();
	}

	/**
	 * Set numeric field IN230CRGLN using a BigDecimal value.
	 */
	public void setIN230CRGLN(BigDecimal newvalue) {
		fieldIN230CRGLN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230CRGLN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230CRGLN() {
		return fieldIN230CRGLN.getBigDecimal();
	}

	/**
	 * Set field IN230CRACC using a String value.
	 */
	public void setIN230CRACC(String newvalue) {
		fieldIN230CRACC.setString(newvalue);
	}

	/**
	 * Get value of field IN230CRACC as a String.
	 */
	public String getIN230CRACC() {
		return fieldIN230CRACC.getString();
	}

	/**
	 * Set numeric field IN230CRACC using a BigDecimal value.
	 */
	public void setIN230CRACC(BigDecimal newvalue) {
		fieldIN230CRACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN230CRACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN230CRACC() {
		return fieldIN230CRACC.getBigDecimal();
	}

	/**
	 * Set field IN230US1 using a String value.
	 */
	public void setIN230US1(String newvalue) {
		fieldIN230US1.setString(newvalue);
	}

	/**
	 * Get value of field IN230US1 as a String.
	 */
	public String getIN230US1() {
		return fieldIN230US1.getString();
	}

	/**
	 * Set field IN230US2 using a String value.
	 */
	public void setIN230US2(String newvalue) {
		fieldIN230US2.setString(newvalue);
	}

	/**
	 * Get value of field IN230US2 as a String.
	 */
	public String getIN230US2() {
		return fieldIN230US2.getString();
	}

	/**
	 * Set field IN230US3 using a String value.
	 */
	public void setIN230US3(String newvalue) {
		fieldIN230US3.setString(newvalue);
	}

	/**
	 * Get value of field IN230US3 as a String.
	 */
	public String getIN230US3() {
		return fieldIN230US3.getString();
	}

}
