package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from INBAJAS01 physical file
 * definition.
 * 
 * File level identifier is 1090716165632. Record format level identifier is
 * 3F8D0DC5CDD78.
 */
@SuppressWarnings("rawtypes")
public class INBAJAS01Message extends MessageRecord {
	final static String fldnames[] = { "INCOPE", "INCUSR", "INCREF",
			"INCXPMTV", "INCFECHA", "INCHORA", "INCCUENTA", "INCTARJ",
			"INCNOMBRE", "INCCLIENTE", "INCCTEREL", "INCNOMBEMP", "INCTIN",
			"INCTIF", "INCSTS", "INCFRC", "INCREC", "INCFREG", "INCHREG",
			"INCFPROC", "INCFAPLI", "INCHAPLI", "INCUSUAPLI", "INCFAPRB",
			"INCHAPRB", "INCUSUAPRB", "INCFCANC", "INCHCANC", "INCUSUCANC" };
	final static String tnames[] = { "INCOPE", "INCUSR", "INCREF", "INCXPMTV",
			"INCFECHA", "INCHORA", "INCCUENTA", "INCTARJ", "INCNOMBRE",
			"INCCLIENTE", "INCCTEREL", "INCNOMBEMP", "INCTIN", "INCTIF",
			"INCSTS", "INCFRC", "INCREC", "INCFREG", "INCHREG", "INCFPROC",
			"INCFAPLI", "INCHAPLI", "INCUSUAPLI", "INCFAPRB", "INCHAPRB",
			"INCUSUAPRB", "INCFCANC", "INCHCANC", "INCUSUCANC" };
	final static String fid = "1090716165632";
	final static String rid = "3F8D0DC5CDD78";
	final static String fmtname = "INBAJAS01";
	final int FIELDCOUNT = 29;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldINCOPE = null;
	private CharacterField fieldINCUSR = null;
	private CharacterField fieldINCREF = null;
	private CharacterField fieldINCXPMTV = null;
	private DecimalField fieldINCFECHA = null;
	private DecimalField fieldINCHORA = null;
	private DecimalField fieldINCCUENTA = null;
	private DecimalField fieldINCTARJ = null;
	private CharacterField fieldINCNOMBRE = null;
	private DecimalField fieldINCCLIENTE = null;
	private DecimalField fieldINCCTEREL = null;
	private CharacterField fieldINCNOMBEMP = null;
	private DecimalField fieldINCTIN = null;
	private DecimalField fieldINCTIF = null;
	private CharacterField fieldINCSTS = null;
	private DecimalField fieldINCFRC = null;
	private DecimalField fieldINCREC = null;
	private DecimalField fieldINCFREG = null;
	private DecimalField fieldINCHREG = null;
	private DecimalField fieldINCFPROC = null;
	private DecimalField fieldINCFAPLI = null;
	private DecimalField fieldINCHAPLI = null;
	private CharacterField fieldINCUSUAPLI = null;
	private DecimalField fieldINCFAPRB = null;
	private DecimalField fieldINCHAPRB = null;
	private CharacterField fieldINCUSUAPRB = null;
	private DecimalField fieldINCFCANC = null;
	private DecimalField fieldINCHCANC = null;
	private CharacterField fieldINCUSUCANC = null;

	/**
	 * Constructor for INBAJAS01Message.
	 */
	public INBAJAS01Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 350;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldINCOPE = new CharacterField(message, HEADERSIZE + 0,
				1, "INCOPE");
		fields[1] = fieldINCUSR = new CharacterField(message, HEADERSIZE + 1,
				10, "INCUSR");
		fields[2] = fieldINCREF = new CharacterField(message, HEADERSIZE + 11,
				12, "INCREF");
		fields[3] = fieldINCXPMTV = new CharacterField(message,
				HEADERSIZE + 23, 2, "INCXPMTV");
		fields[4] = fieldINCFECHA = new DecimalField(message, HEADERSIZE + 25,
				9, 0, "INCFECHA");
		fields[5] = fieldINCHORA = new DecimalField(message, HEADERSIZE + 34,
				7, 0, "INCHORA");
		fields[6] = fieldINCCUENTA = new DecimalField(message, HEADERSIZE + 41,
				13, 0, "INCCUENTA");
		fields[7] = fieldINCTARJ = new DecimalField(message, HEADERSIZE + 54,
				17, 0, "INCTARJ");
		fields[8] = fieldINCNOMBRE = new CharacterField(message,
				HEADERSIZE + 71, 45, "INCNOMBRE");
		fields[9] = fieldINCCLIENTE = new DecimalField(message,
				HEADERSIZE + 116, 10, 0, "INCCLIENTE");
		fields[10] = fieldINCCTEREL = new DecimalField(message,
				HEADERSIZE + 126, 10, 0, "INCCTEREL");
		fields[11] = fieldINCNOMBEMP = new CharacterField(message,
				HEADERSIZE + 136, 80, "INCNOMBEMP");
		fields[12] = fieldINCTIN = new DecimalField(message, HEADERSIZE + 216,
				7, 0, "INCTIN");
		fields[13] = fieldINCTIF = new DecimalField(message, HEADERSIZE + 223,
				7, 0, "INCTIF");
		fields[14] = fieldINCSTS = new CharacterField(message,
				HEADERSIZE + 230, 1, "INCSTS");
		fields[15] = fieldINCFRC = new DecimalField(message, HEADERSIZE + 231,
				8, 0, "INCFRC");
		fields[16] = fieldINCREC = new DecimalField(message, HEADERSIZE + 239,
				8, 0, "INCREC");
		fields[17] = fieldINCFREG = new DecimalField(message, HEADERSIZE + 247,
				9, 0, "INCFREG");
		fields[18] = fieldINCHREG = new DecimalField(message, HEADERSIZE + 256,
				7, 0, "INCHREG");
		fields[19] = fieldINCFPROC = new DecimalField(message,
				HEADERSIZE + 263, 9, 0, "INCFPROC");
		fields[20] = fieldINCFAPLI = new DecimalField(message,
				HEADERSIZE + 272, 9, 0, "INCFAPLI");
		fields[21] = fieldINCHAPLI = new DecimalField(message,
				HEADERSIZE + 281, 7, 0, "INCHAPLI");
		fields[22] = fieldINCUSUAPLI = new CharacterField(message,
				HEADERSIZE + 288, 10, "INCUSUAPLI");
		fields[23] = fieldINCFAPRB = new DecimalField(message,
				HEADERSIZE + 298, 9, 0, "INCFAPRB");
		fields[24] = fieldINCHAPRB = new DecimalField(message,
				HEADERSIZE + 307, 7, 0, "INCHAPRB");
		fields[25] = fieldINCUSUAPRB = new CharacterField(message,
				HEADERSIZE + 314, 10, "INCUSUAPRB");
		fields[26] = fieldINCFCANC = new DecimalField(message,
				HEADERSIZE + 324, 9, 0, "INCFCANC");
		fields[27] = fieldINCHCANC = new DecimalField(message,
				HEADERSIZE + 333, 7, 0, "INCHCANC");
		fields[28] = fieldINCUSUCANC = new CharacterField(message,
				HEADERSIZE + 340, 10, "INCUSUCANC");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field INCOPE using a String value.
	 */
	public void setINCOPE(String newvalue) {
		fieldINCOPE.setString(newvalue);
	}

	/**
	 * Get value of field INCOPE as a String.
	 */
	public String getINCOPE() {
		return fieldINCOPE.getString();
	}

	/**
	 * Set field INCUSR using a String value.
	 */
	public void setINCUSR(String newvalue) {
		fieldINCUSR.setString(newvalue);
	}

	/**
	 * Get value of field INCUSR as a String.
	 */
	public String getINCUSR() {
		return fieldINCUSR.getString();
	}

	/**
	 * Set field INCREF using a String value.
	 */
	public void setINCREF(String newvalue) {
		fieldINCREF.setString(newvalue);
	}

	/**
	 * Get value of field INCREF as a String.
	 */
	public String getINCREF() {
		return fieldINCREF.getString();
	}

	/**
	 * Set field INCXPMTV using a String value.
	 */
	public void setINCXPMTV(String newvalue) {
		fieldINCXPMTV.setString(newvalue);
	}

	/**
	 * Get value of field INCXPMTV as a String.
	 */
	public String getINCXPMTV() {
		return fieldINCXPMTV.getString();
	}

	/**
	 * Set field INCFECHA using a String value.
	 */
	public void setINCFECHA(String newvalue) {
		fieldINCFECHA.setString(newvalue);
	}

	/**
	 * Get value of field INCFECHA as a String.
	 */
	public String getINCFECHA() {
		return fieldINCFECHA.getString();
	}

	/**
	 * Set numeric field INCFECHA using a BigDecimal value.
	 */
	public void setINCFECHA(BigDecimal newvalue) {
		fieldINCFECHA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFECHA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFECHA() {
		return fieldINCFECHA.getBigDecimal();
	}

	/**
	 * Set field INCHORA using a String value.
	 */
	public void setINCHORA(String newvalue) {
		fieldINCHORA.setString(newvalue);
	}

	/**
	 * Get value of field INCHORA as a String.
	 */
	public String getINCHORA() {
		return fieldINCHORA.getString();
	}

	/**
	 * Set numeric field INCHORA using a BigDecimal value.
	 */
	public void setINCHORA(BigDecimal newvalue) {
		fieldINCHORA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHORA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHORA() {
		return fieldINCHORA.getBigDecimal();
	}

	/**
	 * Set field INCCUENTA using a String value.
	 */
	public void setINCCUENTA(String newvalue) {
		fieldINCCUENTA.setString(newvalue);
	}

	/**
	 * Get value of field INCCUENTA as a String.
	 */
	public String getINCCUENTA() {
		return fieldINCCUENTA.getString();
	}

	/**
	 * Set numeric field INCCUENTA using a BigDecimal value.
	 */
	public void setINCCUENTA(BigDecimal newvalue) {
		fieldINCCUENTA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCCUENTA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCCUENTA() {
		return fieldINCCUENTA.getBigDecimal();
	}

	/**
	 * Set field INCTARJ using a String value.
	 */
	public void setINCTARJ(String newvalue) {
		fieldINCTARJ.setString(newvalue);
	}

	/**
	 * Get value of field INCTARJ as a String.
	 */
	public String getINCTARJ() {
		return fieldINCTARJ.getString();
	}

	/**
	 * Set numeric field INCTARJ using a BigDecimal value.
	 */
	public void setINCTARJ(BigDecimal newvalue) {
		fieldINCTARJ.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCTARJ as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCTARJ() {
		return fieldINCTARJ.getBigDecimal();
	}

	/**
	 * Set field INCNOMBRE using a String value.
	 */
	public void setINCNOMBRE(String newvalue) {
		fieldINCNOMBRE.setString(newvalue);
	}

	/**
	 * Get value of field INCNOMBRE as a String.
	 */
	public String getINCNOMBRE() {
		return fieldINCNOMBRE.getString();
	}

	/**
	 * Set field INCCLIENTE using a String value.
	 */
	public void setINCCLIENTE(String newvalue) {
		fieldINCCLIENTE.setString(newvalue);
	}

	/**
	 * Get value of field INCCLIENTE as a String.
	 */
	public String getINCCLIENTE() {
		return fieldINCCLIENTE.getString();
	}

	/**
	 * Set numeric field INCCLIENTE using a BigDecimal value.
	 */
	public void setINCCLIENTE(BigDecimal newvalue) {
		fieldINCCLIENTE.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCCLIENTE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCCLIENTE() {
		return fieldINCCLIENTE.getBigDecimal();
	}

	/**
	 * Set field INCCTEREL using a String value.
	 */
	public void setINCCTEREL(String newvalue) {
		fieldINCCTEREL.setString(newvalue);
	}

	/**
	 * Get value of field INCCTEREL as a String.
	 */
	public String getINCCTEREL() {
		return fieldINCCTEREL.getString();
	}

	/**
	 * Set numeric field INCCTEREL using a BigDecimal value.
	 */
	public void setINCCTEREL(BigDecimal newvalue) {
		fieldINCCTEREL.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCCTEREL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCCTEREL() {
		return fieldINCCTEREL.getBigDecimal();
	}

	/**
	 * Set field INCNOMBEMP using a String value.
	 */
	public void setINCNOMBEMP(String newvalue) {
		fieldINCNOMBEMP.setString(newvalue);
	}

	/**
	 * Get value of field INCNOMBEMP as a String.
	 */
	public String getINCNOMBEMP() {
		return fieldINCNOMBEMP.getString();
	}

	/**
	 * Set field INCTIN using a String value.
	 */
	public void setINCTIN(String newvalue) {
		fieldINCTIN.setString(newvalue);
	}

	/**
	 * Get value of field INCTIN as a String.
	 */
	public String getINCTIN() {
		return fieldINCTIN.getString();
	}

	/**
	 * Set numeric field INCTIN using a BigDecimal value.
	 */
	public void setINCTIN(BigDecimal newvalue) {
		fieldINCTIN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCTIN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCTIN() {
		return fieldINCTIN.getBigDecimal();
	}

	/**
	 * Set field INCTIF using a String value.
	 */
	public void setINCTIF(String newvalue) {
		fieldINCTIF.setString(newvalue);
	}

	/**
	 * Get value of field INCTIF as a String.
	 */
	public String getINCTIF() {
		return fieldINCTIF.getString();
	}

	/**
	 * Set numeric field INCTIF using a BigDecimal value.
	 */
	public void setINCTIF(BigDecimal newvalue) {
		fieldINCTIF.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCTIF as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCTIF() {
		return fieldINCTIF.getBigDecimal();
	}

	/**
	 * Set field INCSTS using a String value.
	 */
	public void setINCSTS(String newvalue) {
		fieldINCSTS.setString(newvalue);
	}

	/**
	 * Get value of field INCSTS as a String.
	 */
	public String getINCSTS() {
		return fieldINCSTS.getString();
	}

	/**
	 * Set field INCFRC using a String value.
	 */
	public void setINCFRC(String newvalue) {
		fieldINCFRC.setString(newvalue);
	}

	/**
	 * Get value of field INCFRC as a String.
	 */
	public String getINCFRC() {
		return fieldINCFRC.getString();
	}

	/**
	 * Set numeric field INCFRC using a BigDecimal value.
	 */
	public void setINCFRC(BigDecimal newvalue) {
		fieldINCFRC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFRC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFRC() {
		return fieldINCFRC.getBigDecimal();
	}

	/**
	 * Set field INCREC using a String value.
	 */
	public void setINCREC(String newvalue) {
		fieldINCREC.setString(newvalue);
	}

	/**
	 * Get value of field INCREC as a String.
	 */
	public String getINCREC() {
		return fieldINCREC.getString();
	}

	/**
	 * Set numeric field INCREC using a BigDecimal value.
	 */
	public void setINCREC(BigDecimal newvalue) {
		fieldINCREC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCREC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCREC() {
		return fieldINCREC.getBigDecimal();
	}

	/**
	 * Set field INCFREG using a String value.
	 */
	public void setINCFREG(String newvalue) {
		fieldINCFREG.setString(newvalue);
	}

	/**
	 * Get value of field INCFREG as a String.
	 */
	public String getINCFREG() {
		return fieldINCFREG.getString();
	}

	/**
	 * Set numeric field INCFREG using a BigDecimal value.
	 */
	public void setINCFREG(BigDecimal newvalue) {
		fieldINCFREG.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFREG as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFREG() {
		return fieldINCFREG.getBigDecimal();
	}

	/**
	 * Set field INCHREG using a String value.
	 */
	public void setINCHREG(String newvalue) {
		fieldINCHREG.setString(newvalue);
	}

	/**
	 * Get value of field INCHREG as a String.
	 */
	public String getINCHREG() {
		return fieldINCHREG.getString();
	}

	/**
	 * Set numeric field INCHREG using a BigDecimal value.
	 */
	public void setINCHREG(BigDecimal newvalue) {
		fieldINCHREG.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHREG as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHREG() {
		return fieldINCHREG.getBigDecimal();
	}

	/**
	 * Set field INCFPROC using a String value.
	 */
	public void setINCFPROC(String newvalue) {
		fieldINCFPROC.setString(newvalue);
	}

	/**
	 * Get value of field INCFPROC as a String.
	 */
	public String getINCFPROC() {
		return fieldINCFPROC.getString();
	}

	/**
	 * Set numeric field INCFPROC using a BigDecimal value.
	 */
	public void setINCFPROC(BigDecimal newvalue) {
		fieldINCFPROC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFPROC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFPROC() {
		return fieldINCFPROC.getBigDecimal();
	}

	/**
	 * Set field INCFAPLI using a String value.
	 */
	public void setINCFAPLI(String newvalue) {
		fieldINCFAPLI.setString(newvalue);
	}

	/**
	 * Get value of field INCFAPLI as a String.
	 */
	public String getINCFAPLI() {
		return fieldINCFAPLI.getString();
	}

	/**
	 * Set numeric field INCFAPLI using a BigDecimal value.
	 */
	public void setINCFAPLI(BigDecimal newvalue) {
		fieldINCFAPLI.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFAPLI as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFAPLI() {
		return fieldINCFAPLI.getBigDecimal();
	}

	/**
	 * Set field INCHAPLI using a String value.
	 */
	public void setINCHAPLI(String newvalue) {
		fieldINCHAPLI.setString(newvalue);
	}

	/**
	 * Get value of field INCHAPLI as a String.
	 */
	public String getINCHAPLI() {
		return fieldINCHAPLI.getString();
	}

	/**
	 * Set numeric field INCHAPLI using a BigDecimal value.
	 */
	public void setINCHAPLI(BigDecimal newvalue) {
		fieldINCHAPLI.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHAPLI as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHAPLI() {
		return fieldINCHAPLI.getBigDecimal();
	}

	/**
	 * Set field INCUSUAPLI using a String value.
	 */
	public void setINCUSUAPLI(String newvalue) {
		fieldINCUSUAPLI.setString(newvalue);
	}

	/**
	 * Get value of field INCUSUAPLI as a String.
	 */
	public String getINCUSUAPLI() {
		return fieldINCUSUAPLI.getString();
	}

	/**
	 * Set field INCFAPRB using a String value.
	 */
	public void setINCFAPRB(String newvalue) {
		fieldINCFAPRB.setString(newvalue);
	}

	/**
	 * Get value of field INCFAPRB as a String.
	 */
	public String getINCFAPRB() {
		return fieldINCFAPRB.getString();
	}

	/**
	 * Set numeric field INCFAPRB using a BigDecimal value.
	 */
	public void setINCFAPRB(BigDecimal newvalue) {
		fieldINCFAPRB.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFAPRB as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFAPRB() {
		return fieldINCFAPRB.getBigDecimal();
	}

	/**
	 * Set field INCHAPRB using a String value.
	 */
	public void setINCHAPRB(String newvalue) {
		fieldINCHAPRB.setString(newvalue);
	}

	/**
	 * Get value of field INCHAPRB as a String.
	 */
	public String getINCHAPRB() {
		return fieldINCHAPRB.getString();
	}

	/**
	 * Set numeric field INCHAPRB using a BigDecimal value.
	 */
	public void setINCHAPRB(BigDecimal newvalue) {
		fieldINCHAPRB.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHAPRB as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHAPRB() {
		return fieldINCHAPRB.getBigDecimal();
	}

	/**
	 * Set field INCUSUAPRB using a String value.
	 */
	public void setINCUSUAPRB(String newvalue) {
		fieldINCUSUAPRB.setString(newvalue);
	}

	/**
	 * Get value of field INCUSUAPRB as a String.
	 */
	public String getINCUSUAPRB() {
		return fieldINCUSUAPRB.getString();
	}

	/**
	 * Set field INCFCANC using a String value.
	 */
	public void setINCFCANC(String newvalue) {
		fieldINCFCANC.setString(newvalue);
	}

	/**
	 * Get value of field INCFCANC as a String.
	 */
	public String getINCFCANC() {
		return fieldINCFCANC.getString();
	}

	/**
	 * Set numeric field INCFCANC using a BigDecimal value.
	 */
	public void setINCFCANC(BigDecimal newvalue) {
		fieldINCFCANC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFCANC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFCANC() {
		return fieldINCFCANC.getBigDecimal();
	}

	/**
	 * Set field INCHCANC using a String value.
	 */
	public void setINCHCANC(String newvalue) {
		fieldINCHCANC.setString(newvalue);
	}

	/**
	 * Get value of field INCHCANC as a String.
	 */
	public String getINCHCANC() {
		return fieldINCHCANC.getString();
	}

	/**
	 * Set numeric field INCHCANC using a BigDecimal value.
	 */
	public void setINCHCANC(BigDecimal newvalue) {
		fieldINCHCANC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHCANC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHCANC() {
		return fieldINCHCANC.getBigDecimal();
	}

	/**
	 * Set field INCUSUCANC using a String value.
	 */
	public void setINCUSUCANC(String newvalue) {
		fieldINCUSUCANC.setString(newvalue);
	}

	/**
	 * Get value of field INCUSUCANC as a String.
	 */
	public String getINCUSUCANC() {
		return fieldINCUSUCANC.getString();
	}

}
