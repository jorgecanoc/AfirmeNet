package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
* Class generated by AS/400 CRTCLASS command from CARDSJV physical file definition.
* 
* File level identifier is 1030801165013.
* Record format level identifier is 3D28BFB9B22B6.
*/
@SuppressWarnings("rawtypes")
public class CARDSJVMessage extends MessageRecord
{
  final static String fldnames[] = {
                                     "CCAUSER",
                                     "CCATARJ",
                                     "CCANOMB",
                                     "CCASDAT",
                                     "CCASDPO",
                                     "CCASDVE",
                                     "CCASMAT",
                                     "CCASMPO",
                                     "CCASMVE",
                                     "CCALDAT",
                                     "CCALDPO",
                                     "CCALDVE",
                                     "CCALMAT",
                                     "CCALMPO",
                                     "CCALMVE",
                                     "CCAAAVE",
                                     "CCAMMVE",
                                     "CCADDVE",
                                     "CCAAAEX",
                                     "CCAMMEX",
                                     "CCADDEX",
                                     "CCAAAUD",
                                     "CCAMMUD",
                                     "CCADDUD",
                                     "CCASTAT"
                                   };
  final static String tnames[] = {
                                   "CCAUSER",
                                   "CCATARJ",
                                   "CCANOMB",
                                   "CCASDAT",
                                   "CCASDPO",
                                   "CCASDVE",
                                   "CCASMAT",
                                   "CCASMPO",
                                   "CCASMVE",
                                   "CCALDAT",
                                   "CCALDPO",
                                   "CCALDVE",
                                   "CCALMAT",
                                   "CCALMPO",
                                   "CCALMVE",
                                   "CCAAAVE",
                                   "CCAMMVE",
                                   "CCADDVE",
                                   "CCAAAEX",
                                   "CCAMMEX",
                                   "CCADDEX",
                                   "CCAAAUD",
                                   "CCAMMUD",
                                   "CCADDUD",
                                   "CCASTAT"
                                 };
  final static String fid = "1030801165013";
  final static String rid = "3D28BFB9B22B6";
  final static String fmtname = "CARDSJV";
  final int FIELDCOUNT = 25;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldCCAUSER = null;
  private DecimalField fieldCCATARJ = null;
  private CharacterField fieldCCANOMB = null;
  private DecimalField fieldCCASDAT = null;
  private DecimalField fieldCCASDPO = null;
  private DecimalField fieldCCASDVE = null;
  private DecimalField fieldCCASMAT = null;
  private DecimalField fieldCCASMPO = null;
  private DecimalField fieldCCASMVE = null;
  private DecimalField fieldCCALDAT = null;
  private DecimalField fieldCCALDPO = null;
  private DecimalField fieldCCALDVE = null;
  private DecimalField fieldCCALMAT = null;
  private DecimalField fieldCCALMPO = null;
  private DecimalField fieldCCALMVE = null;
  private DecimalField fieldCCAAAVE = null;
  private DecimalField fieldCCAMMVE = null;
  private DecimalField fieldCCADDVE = null;
  private DecimalField fieldCCAAAEX = null;
  private DecimalField fieldCCAMMEX = null;
  private DecimalField fieldCCADDEX = null;
  private DecimalField fieldCCAAAUD = null;
  private DecimalField fieldCCAMMUD = null;
  private DecimalField fieldCCADDUD = null;
  private CharacterField fieldCCASTAT = null;

  /**
  * Constructor for CARDSJVMessage.
  */
  public CARDSJVMessage()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
@SuppressWarnings("unchecked")    protected void createFields()
  {
    recordsize = 281;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldCCAUSER =
    new CharacterField(message, HEADERSIZE + 0, 10, "CCAUSER");
    fields[1] = fieldCCATARJ =
    new DecimalField(message, HEADERSIZE + 10, 17, 0, "CCATARJ");
    fields[2] = fieldCCANOMB =
    new CharacterField(message, HEADERSIZE + 27, 40, "CCANOMB");
    fields[3] = fieldCCASDAT =
    new DecimalField(message, HEADERSIZE + 67, 15, 2, "CCASDAT");
    fields[4] = fieldCCASDPO =
    new DecimalField(message, HEADERSIZE + 82, 15, 2, "CCASDPO");
    fields[5] = fieldCCASDVE =
    new DecimalField(message, HEADERSIZE + 97, 15, 2, "CCASDVE");
    fields[6] = fieldCCASMAT =
    new DecimalField(message, HEADERSIZE + 112, 15, 2, "CCASMAT");
    fields[7] = fieldCCASMPO =
    new DecimalField(message, HEADERSIZE + 127, 15, 2, "CCASMPO");
    fields[8] = fieldCCASMVE =
    new DecimalField(message, HEADERSIZE + 142, 15, 2, "CCASMVE");
    fields[9] = fieldCCALDAT =
    new DecimalField(message, HEADERSIZE + 157, 15, 2, "CCALDAT");
    fields[10] = fieldCCALDPO =
    new DecimalField(message, HEADERSIZE + 172, 15, 2, "CCALDPO");
    fields[11] = fieldCCALDVE =
    new DecimalField(message, HEADERSIZE + 187, 15, 2, "CCALDVE");
    fields[12] = fieldCCALMAT =
    new DecimalField(message, HEADERSIZE + 202, 15, 2, "CCALMAT");
    fields[13] = fieldCCALMPO =
    new DecimalField(message, HEADERSIZE + 217, 15, 2, "CCALMPO");
    fields[14] = fieldCCALMVE =
    new DecimalField(message, HEADERSIZE + 232, 15, 2, "CCALMVE");
    fields[15] = fieldCCAAAVE =
    new DecimalField(message, HEADERSIZE + 247, 5, 0, "CCAAAVE");
    fields[16] = fieldCCAMMVE =
    new DecimalField(message, HEADERSIZE + 252, 3, 0, "CCAMMVE");
    fields[17] = fieldCCADDVE =
    new DecimalField(message, HEADERSIZE + 255, 3, 0, "CCADDVE");
    fields[18] = fieldCCAAAEX =
    new DecimalField(message, HEADERSIZE + 258, 5, 0, "CCAAAEX");
    fields[19] = fieldCCAMMEX =
    new DecimalField(message, HEADERSIZE + 263, 3, 0, "CCAMMEX");
    fields[20] = fieldCCADDEX =
    new DecimalField(message, HEADERSIZE + 266, 3, 0, "CCADDEX");
    fields[21] = fieldCCAAAUD =
    new DecimalField(message, HEADERSIZE + 269, 5, 0, "CCAAAUD");
    fields[22] = fieldCCAMMUD =
    new DecimalField(message, HEADERSIZE + 274, 3, 0, "CCAMMUD");
    fields[23] = fieldCCADDUD =
    new DecimalField(message, HEADERSIZE + 277, 3, 0, "CCADDUD");
    fields[24] = fieldCCASTAT =
    new CharacterField(message, HEADERSIZE + 280, 1, "CCASTAT");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field CCAUSER using a String value.
  */
  public void setCCAUSER(String newvalue)
  {
    fieldCCAUSER.setString(newvalue);
  }

  /**
  * Get value of field CCAUSER as a String.
  */
  public String getCCAUSER()
  {
    return fieldCCAUSER.getString();
  }

  /**
  * Set field CCATARJ using a String value.
  */
  public void setCCATARJ(String newvalue)
  {
    fieldCCATARJ.setString(newvalue);
  }

  /**
  * Get value of field CCATARJ as a String.
  */
  public String getCCATARJ()
  {
    return fieldCCATARJ.getString();
  }

  /**
  * Set numeric field CCATARJ using a BigDecimal value.
  */
  public void setCCATARJ(BigDecimal newvalue)
  {
    fieldCCATARJ.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCATARJ as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCATARJ()
  {
    return fieldCCATARJ.getBigDecimal();
  }

  /**
  * Set field CCANOMB using a String value.
  */
  public void setCCANOMB(String newvalue)
  {
    fieldCCANOMB.setString(newvalue);
  }

  /**
  * Get value of field CCANOMB as a String.
  */
  public String getCCANOMB()
  {
    return fieldCCANOMB.getString();
  }

  /**
  * Set field CCASDAT using a String value.
  */
  public void setCCASDAT(String newvalue)
  {
    fieldCCASDAT.setString(newvalue);
  }

  /**
  * Get value of field CCASDAT as a String.
  */
  public String getCCASDAT()
  {
    return fieldCCASDAT.getString();
  }

  /**
  * Set numeric field CCASDAT using a BigDecimal value.
  */
  public void setCCASDAT(BigDecimal newvalue)
  {
    fieldCCASDAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCASDAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCASDAT()
  {
    return fieldCCASDAT.getBigDecimal();
  }

  /**
  * Set field CCASDPO using a String value.
  */
  public void setCCASDPO(String newvalue)
  {
    fieldCCASDPO.setString(newvalue);
  }

  /**
  * Get value of field CCASDPO as a String.
  */
  public String getCCASDPO()
  {
    return fieldCCASDPO.getString();
  }

  /**
  * Set numeric field CCASDPO using a BigDecimal value.
  */
  public void setCCASDPO(BigDecimal newvalue)
  {
    fieldCCASDPO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCASDPO as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCASDPO()
  {
    return fieldCCASDPO.getBigDecimal();
  }

  /**
  * Set field CCASDVE using a String value.
  */
  public void setCCASDVE(String newvalue)
  {
    fieldCCASDVE.setString(newvalue);
  }

  /**
  * Get value of field CCASDVE as a String.
  */
  public String getCCASDVE()
  {
    return fieldCCASDVE.getString();
  }

  /**
  * Set numeric field CCASDVE using a BigDecimal value.
  */
  public void setCCASDVE(BigDecimal newvalue)
  {
    fieldCCASDVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCASDVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCASDVE()
  {
    return fieldCCASDVE.getBigDecimal();
  }

  /**
  * Set field CCASMAT using a String value.
  */
  public void setCCASMAT(String newvalue)
  {
    fieldCCASMAT.setString(newvalue);
  }

  /**
  * Get value of field CCASMAT as a String.
  */
  public String getCCASMAT()
  {
    return fieldCCASMAT.getString();
  }

  /**
  * Set numeric field CCASMAT using a BigDecimal value.
  */
  public void setCCASMAT(BigDecimal newvalue)
  {
    fieldCCASMAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCASMAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCASMAT()
  {
    return fieldCCASMAT.getBigDecimal();
  }

  /**
  * Set field CCASMPO using a String value.
  */
  public void setCCASMPO(String newvalue)
  {
    fieldCCASMPO.setString(newvalue);
  }

  /**
  * Get value of field CCASMPO as a String.
  */
  public String getCCASMPO()
  {
    return fieldCCASMPO.getString();
  }

  /**
  * Set numeric field CCASMPO using a BigDecimal value.
  */
  public void setCCASMPO(BigDecimal newvalue)
  {
    fieldCCASMPO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCASMPO as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCASMPO()
  {
    return fieldCCASMPO.getBigDecimal();
  }

  /**
  * Set field CCASMVE using a String value.
  */
  public void setCCASMVE(String newvalue)
  {
    fieldCCASMVE.setString(newvalue);
  }

  /**
  * Get value of field CCASMVE as a String.
  */
  public String getCCASMVE()
  {
    return fieldCCASMVE.getString();
  }

  /**
  * Set numeric field CCASMVE using a BigDecimal value.
  */
  public void setCCASMVE(BigDecimal newvalue)
  {
    fieldCCASMVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCASMVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCASMVE()
  {
    return fieldCCASMVE.getBigDecimal();
  }

  /**
  * Set field CCALDAT using a String value.
  */
  public void setCCALDAT(String newvalue)
  {
    fieldCCALDAT.setString(newvalue);
  }

  /**
  * Get value of field CCALDAT as a String.
  */
  public String getCCALDAT()
  {
    return fieldCCALDAT.getString();
  }

  /**
  * Set numeric field CCALDAT using a BigDecimal value.
  */
  public void setCCALDAT(BigDecimal newvalue)
  {
    fieldCCALDAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCALDAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCALDAT()
  {
    return fieldCCALDAT.getBigDecimal();
  }

  /**
  * Set field CCALDPO using a String value.
  */
  public void setCCALDPO(String newvalue)
  {
    fieldCCALDPO.setString(newvalue);
  }

  /**
  * Get value of field CCALDPO as a String.
  */
  public String getCCALDPO()
  {
    return fieldCCALDPO.getString();
  }

  /**
  * Set numeric field CCALDPO using a BigDecimal value.
  */
  public void setCCALDPO(BigDecimal newvalue)
  {
    fieldCCALDPO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCALDPO as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCALDPO()
  {
    return fieldCCALDPO.getBigDecimal();
  }

  /**
  * Set field CCALDVE using a String value.
  */
  public void setCCALDVE(String newvalue)
  {
    fieldCCALDVE.setString(newvalue);
  }

  /**
  * Get value of field CCALDVE as a String.
  */
  public String getCCALDVE()
  {
    return fieldCCALDVE.getString();
  }

  /**
  * Set numeric field CCALDVE using a BigDecimal value.
  */
  public void setCCALDVE(BigDecimal newvalue)
  {
    fieldCCALDVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCALDVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCALDVE()
  {
    return fieldCCALDVE.getBigDecimal();
  }

  /**
  * Set field CCALMAT using a String value.
  */
  public void setCCALMAT(String newvalue)
  {
    fieldCCALMAT.setString(newvalue);
  }

  /**
  * Get value of field CCALMAT as a String.
  */
  public String getCCALMAT()
  {
    return fieldCCALMAT.getString();
  }

  /**
  * Set numeric field CCALMAT using a BigDecimal value.
  */
  public void setCCALMAT(BigDecimal newvalue)
  {
    fieldCCALMAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCALMAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCALMAT()
  {
    return fieldCCALMAT.getBigDecimal();
  }

  /**
  * Set field CCALMPO using a String value.
  */
  public void setCCALMPO(String newvalue)
  {
    fieldCCALMPO.setString(newvalue);
  }

  /**
  * Get value of field CCALMPO as a String.
  */
  public String getCCALMPO()
  {
    return fieldCCALMPO.getString();
  }

  /**
  * Set numeric field CCALMPO using a BigDecimal value.
  */
  public void setCCALMPO(BigDecimal newvalue)
  {
    fieldCCALMPO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCALMPO as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCALMPO()
  {
    return fieldCCALMPO.getBigDecimal();
  }

  /**
  * Set field CCALMVE using a String value.
  */
  public void setCCALMVE(String newvalue)
  {
    fieldCCALMVE.setString(newvalue);
  }

  /**
  * Get value of field CCALMVE as a String.
  */
  public String getCCALMVE()
  {
    return fieldCCALMVE.getString();
  }

  /**
  * Set numeric field CCALMVE using a BigDecimal value.
  */
  public void setCCALMVE(BigDecimal newvalue)
  {
    fieldCCALMVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCALMVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCALMVE()
  {
    return fieldCCALMVE.getBigDecimal();
  }

  /**
  * Set field CCAAAVE using a String value.
  */
  public void setCCAAAVE(String newvalue)
  {
    fieldCCAAAVE.setString(newvalue);
  }

  /**
  * Get value of field CCAAAVE as a String.
  */
  public String getCCAAAVE()
  {
    return fieldCCAAAVE.getString();
  }

  /**
  * Set numeric field CCAAAVE using a BigDecimal value.
  */
  public void setCCAAAVE(BigDecimal newvalue)
  {
    fieldCCAAAVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCAAAVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCAAAVE()
  {
    return fieldCCAAAVE.getBigDecimal();
  }

  /**
  * Set field CCAMMVE using a String value.
  */
  public void setCCAMMVE(String newvalue)
  {
    fieldCCAMMVE.setString(newvalue);
  }

  /**
  * Get value of field CCAMMVE as a String.
  */
  public String getCCAMMVE()
  {
    return fieldCCAMMVE.getString();
  }

  /**
  * Set numeric field CCAMMVE using a BigDecimal value.
  */
  public void setCCAMMVE(BigDecimal newvalue)
  {
    fieldCCAMMVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCAMMVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCAMMVE()
  {
    return fieldCCAMMVE.getBigDecimal();
  }

  /**
  * Set field CCADDVE using a String value.
  */
  public void setCCADDVE(String newvalue)
  {
    fieldCCADDVE.setString(newvalue);
  }

  /**
  * Get value of field CCADDVE as a String.
  */
  public String getCCADDVE()
  {
    return fieldCCADDVE.getString();
  }

  /**
  * Set numeric field CCADDVE using a BigDecimal value.
  */
  public void setCCADDVE(BigDecimal newvalue)
  {
    fieldCCADDVE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCADDVE as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCADDVE()
  {
    return fieldCCADDVE.getBigDecimal();
  }

  /**
  * Set field CCAAAEX using a String value.
  */
  public void setCCAAAEX(String newvalue)
  {
    fieldCCAAAEX.setString(newvalue);
  }

  /**
  * Get value of field CCAAAEX as a String.
  */
  public String getCCAAAEX()
  {
    return fieldCCAAAEX.getString();
  }

  /**
  * Set numeric field CCAAAEX using a BigDecimal value.
  */
  public void setCCAAAEX(BigDecimal newvalue)
  {
    fieldCCAAAEX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCAAAEX as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCAAAEX()
  {
    return fieldCCAAAEX.getBigDecimal();
  }

  /**
  * Set field CCAMMEX using a String value.
  */
  public void setCCAMMEX(String newvalue)
  {
    fieldCCAMMEX.setString(newvalue);
  }

  /**
  * Get value of field CCAMMEX as a String.
  */
  public String getCCAMMEX()
  {
    return fieldCCAMMEX.getString();
  }

  /**
  * Set numeric field CCAMMEX using a BigDecimal value.
  */
  public void setCCAMMEX(BigDecimal newvalue)
  {
    fieldCCAMMEX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCAMMEX as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCAMMEX()
  {
    return fieldCCAMMEX.getBigDecimal();
  }

  /**
  * Set field CCADDEX using a String value.
  */
  public void setCCADDEX(String newvalue)
  {
    fieldCCADDEX.setString(newvalue);
  }

  /**
  * Get value of field CCADDEX as a String.
  */
  public String getCCADDEX()
  {
    return fieldCCADDEX.getString();
  }

  /**
  * Set numeric field CCADDEX using a BigDecimal value.
  */
  public void setCCADDEX(BigDecimal newvalue)
  {
    fieldCCADDEX.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCADDEX as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCADDEX()
  {
    return fieldCCADDEX.getBigDecimal();
  }

  /**
  * Set field CCAAAUD using a String value.
  */
  public void setCCAAAUD(String newvalue)
  {
    fieldCCAAAUD.setString(newvalue);
  }

  /**
  * Get value of field CCAAAUD as a String.
  */
  public String getCCAAAUD()
  {
    return fieldCCAAAUD.getString();
  }

  /**
  * Set numeric field CCAAAUD using a BigDecimal value.
  */
  public void setCCAAAUD(BigDecimal newvalue)
  {
    fieldCCAAAUD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCAAAUD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCAAAUD()
  {
    return fieldCCAAAUD.getBigDecimal();
  }

  /**
  * Set field CCAMMUD using a String value.
  */
  public void setCCAMMUD(String newvalue)
  {
    fieldCCAMMUD.setString(newvalue);
  }

  /**
  * Get value of field CCAMMUD as a String.
  */
  public String getCCAMMUD()
  {
    return fieldCCAMMUD.getString();
  }

  /**
  * Set numeric field CCAMMUD using a BigDecimal value.
  */
  public void setCCAMMUD(BigDecimal newvalue)
  {
    fieldCCAMMUD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCAMMUD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCAMMUD()
  {
    return fieldCCAMMUD.getBigDecimal();
  }

  /**
  * Set field CCADDUD using a String value.
  */
  public void setCCADDUD(String newvalue)
  {
    fieldCCADDUD.setString(newvalue);
  }

  /**
  * Get value of field CCADDUD as a String.
  */
  public String getCCADDUD()
  {
    return fieldCCADDUD.getString();
  }

  /**
  * Set numeric field CCADDUD using a BigDecimal value.
  */
  public void setCCADDUD(BigDecimal newvalue)
  {
    fieldCCADDUD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field CCADDUD as a BigDecimal.
  */
  public BigDecimal getBigDecimalCCADDUD()
  {
    return fieldCCADDUD.getBigDecimal();
  }

  /**
  * Set field CCASTAT using a String value.
  */
  public void setCCASTAT(String newvalue)
  {
    fieldCCASTAT.setString(newvalue);
  }

  /**
  * Get value of field CCASTAT as a String.
  */
  public String getCCASTAT()
  {
    return fieldCCASTAT.getString();
  }

}
