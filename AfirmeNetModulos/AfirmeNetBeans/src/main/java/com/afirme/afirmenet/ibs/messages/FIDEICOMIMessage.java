/**
 *  This Class was created By Luis Velando
 *  Copyright Datapro Inc. 1999
 **/

package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from FIDEICOMI physical file
 * definition.
 * 
 * File level identifier is 1010723174610. Record format level identifier is
 * 51C52040E1EE4.
 */

public class FIDEICOMIMessage extends MessageRecord {
	final int FIELDCOUNT = 8;
	private CharacterField fieldFIDEUSER = null;
	private DecimalField fieldFIDACC = null;
	private CharacterField fieldFIDCCY = null;
	private DecimalField fieldFIDBALANC = null;
	private DecimalField fieldFIDPROFIT = null;
	private DecimalField fieldFIDAMOUNT = null;
	private DecimalField fieldFIDRATE = null;
	private CharacterField fieldFIDNNM = null;

	/**
	 * Constructor for FIDEICOMIMessage.
	 */
	public FIDEICOMIMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */

	protected void createFields() {
		recordsize = 118;
		fileid = "1010723174610";
		recordid = "51C52040E1EE4";
		message = new byte[getByteLength()];
		formatname = "FIDEICOMI";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "FIDEUSER";
		tagnames[0] = "FIDEUSER";
		fields[0] = fieldFIDEUSER = new CharacterField(message, HEADERSIZE + 0,
				10, "FIDEUSER");
		fieldnames[1] = "FIDACC";
		tagnames[1] = "FIDACC";
		fields[1] = fieldFIDACC = new DecimalField(message, HEADERSIZE + 10,
				13, 0, "FIDACC");
		fieldnames[2] = "FIDCCY";
		tagnames[2] = "FIDCCY";
		fields[2] = fieldFIDCCY = new CharacterField(message, HEADERSIZE + 23,
				3, "FIDCCY");
		fieldnames[3] = "FIDBALANC";
		tagnames[3] = "FIDBALANC";
		fields[3] = fieldFIDBALANC = new DecimalField(message, HEADERSIZE + 26,
				17, 2, "FIDBALANC");
		fieldnames[4] = "FIDPROFIT";
		tagnames[4] = "FIDPROFIT";
		fields[4] = fieldFIDPROFIT = new DecimalField(message, HEADERSIZE + 43,
				17, 2, "FIDPROFIT");
		fieldnames[5] = "FIDAMOUNT";
		tagnames[5] = "FIDAMOUNT";
		fields[5] = fieldFIDAMOUNT = new DecimalField(message, HEADERSIZE + 60,
				17, 2, "FIDAMOUNT");
		fieldnames[6] = "FIDRATE";
		tagnames[6] = "FIDRATE";
		fields[6] = fieldFIDRATE = new DecimalField(message, HEADERSIZE + 77,
				11, 6, "FIDRATE");
		fieldnames[7] = "FIDNNM";
		tagnames[7] = "FIDNNM";
		fields[7] = fieldFIDNNM = new CharacterField(message, HEADERSIZE + 88,
				30, "FIDNNM");
	}

	/**
	 * Set field FIDEUSER using a String value.
	 */
	public void setFIDEUSER(String newvalue) {
		fieldFIDEUSER.setString(newvalue);
	}

	/**
	 * Get value of field FIDEUSER as a String.
	 */
	public String getFIDEUSER() {
		return fieldFIDEUSER.getString();
	}

	/**
	 * Set field FIDACC using a String value.
	 */
	public void setFIDACC(String newvalue) {
		fieldFIDACC.setString(newvalue);
	}

	/**
	 * Get value of field FIDACC as a String.
	 */
	public String getFIDACC() {
		return fieldFIDACC.getString();
	}

	/**
	 * Set numeric field FIDACC using a BigDecimal value.
	 */
	public void setFIDACC(BigDecimal newvalue) {
		fieldFIDACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field FIDACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalFIDACC() {
		return fieldFIDACC.getBigDecimal();
	}

	/**
	 * Set field FIDCCY using a String value.
	 */
	public void setFIDCCY(String newvalue) {
		fieldFIDCCY.setString(newvalue);
	}

	/**
	 * Get value of field FIDCCY as a String.
	 */
	public String getFIDCCY() {
		return fieldFIDCCY.getString();
	}

	/**
	 * Set field FIDBALANC using a String value.
	 */
	public void setFIDBALANC(String newvalue) {
		fieldFIDBALANC.setString(newvalue);
	}

	/**
	 * Get value of field FIDBALANC as a String.
	 */
	public String getFIDBALANC() {
		return fieldFIDBALANC.getString();
	}

	/**
	 * Set numeric field FIDBALANC using a BigDecimal value.
	 */
	public void setFIDBALANC(BigDecimal newvalue) {
		fieldFIDBALANC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field FIDBALANC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalFIDBALANC() {
		return fieldFIDBALANC.getBigDecimal();
	}

	/**
	 * Set field FIDPROFIT using a String value.
	 */
	public void setFIDPROFIT(String newvalue) {
		fieldFIDPROFIT.setString(newvalue);
	}

	/**
	 * Get value of field FIDPROFIT as a String.
	 */
	public String getFIDPROFIT() {
		return fieldFIDPROFIT.getString();
	}

	/**
	 * Set numeric field FIDPROFIT using a BigDecimal value.
	 */
	public void setFIDPROFIT(BigDecimal newvalue) {
		fieldFIDPROFIT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field FIDPROFIT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalFIDPROFIT() {
		return fieldFIDPROFIT.getBigDecimal();
	}

	/**
	 * Set field FIDAMOUNT using a String value.
	 */
	public void setFIDAMOUNT(String newvalue) {
		fieldFIDAMOUNT.setString(newvalue);
	}

	/**
	 * Get value of field FIDAMOUNT as a String.
	 */
	public String getFIDAMOUNT() {
		return fieldFIDAMOUNT.getString();
	}

	/**
	 * Set numeric field FIDAMOUNT using a BigDecimal value.
	 */
	public void setFIDAMOUNT(BigDecimal newvalue) {
		fieldFIDAMOUNT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field FIDAMOUNT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalFIDAMOUNT() {
		return fieldFIDAMOUNT.getBigDecimal();
	}

	/**
	 * Set field FIDRATE using a String value.
	 */
	public void setFIDRATE(String newvalue) {
		fieldFIDRATE.setString(newvalue);
	}

	/**
	 * Get value of field FIDRATE as a String.
	 */
	public String getFIDRATE() {
		return fieldFIDRATE.getString();
	}

	/**
	 * Set numeric field FIDRATE using a BigDecimal value.
	 */
	public void setFIDRATE(BigDecimal newvalue) {
		fieldFIDRATE.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field FIDRATE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalFIDRATE() {
		return fieldFIDRATE.getBigDecimal();
	}

	/**
	 * Set field FIDNNM using a String value.
	 */
	public void setFIDNNM(String newvalue) {
		fieldFIDNNM.setString(newvalue);
	}

	/**
	 * Get value of field FIDNNM as a String.
	 */
	public String getFIDNNM() {
		return fieldFIDNNM.getString();
	}

}