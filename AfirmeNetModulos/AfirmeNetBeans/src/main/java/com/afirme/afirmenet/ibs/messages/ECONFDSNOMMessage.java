package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from ECONFDSNOM physical file
 * definition.
 * 
 * File level identifier is 1110405145334. Record format level identifier is
 * 3ED88FC9CD593.
 */

public class ECONFDSNOMMessage extends MessageRecord {
	final static String fldnames[] = { "ECNFUSER", "ECNFREF", "ECCTACGO",
			"ECFECPROC", "ECREGS", "ECABONOS", "ECREGSOK", "ECABONOSOK",
			"ECREGSER", "ECABONOSER" };
	final static String tnames[] = { "ECNFUSER", "ECNFREF", "ECCTACGO",
			"ECFECPROC", "ECREGS", "ECABONOS", "ECREGSOK", "ECABONOSOK",
			"ECREGSER", "ECABONOSER" };
	final static String fid = "1110405145334";
	final static String rid = "3ED88FC9CD593";
	final static String fmtname = "ECONFDSNOM";
	final int FIELDCOUNT = 10;
	private static Hashtable<String, Object> tlookup = new Hashtable<String, Object>();
	private CharacterField fieldECNFUSER = null;
	private CharacterField fieldECNFREF = null;
	private DecimalField fieldECCTACGO = null;
	private DecimalField fieldECFECPROC = null;
	private DecimalField fieldECREGS = null;
	private DecimalField fieldECABONOS = null;
	private DecimalField fieldECREGSOK = null;
	private DecimalField fieldECABONOSOK = null;
	private DecimalField fieldECREGSER = null;
	private DecimalField fieldECABONOSER = null;

	/**
	 * Constructor for ECONFDSNOMMessage.
	 */
	public ECONFDSNOMMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 118;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldECNFUSER = new CharacterField(message, HEADERSIZE + 0,
				10, "ECNFUSER");
		fields[1] = fieldECNFREF = new CharacterField(message, HEADERSIZE + 10,
				16, "ECNFREF");
		fields[2] = fieldECCTACGO = new DecimalField(message, HEADERSIZE + 26,
				17, 0, "ECCTACGO");
		fields[3] = fieldECFECPROC = new DecimalField(message, HEADERSIZE + 43,
				9, 0, "ECFECPROC");
		fields[4] = fieldECREGS = new DecimalField(message, HEADERSIZE + 52, 7,
				0, "ECREGS");
		fields[5] = fieldECABONOS = new DecimalField(message, HEADERSIZE + 59,
				15, 2, "ECABONOS");
		fields[6] = fieldECREGSOK = new DecimalField(message, HEADERSIZE + 74,
				7, 0, "ECREGSOK");
		fields[7] = fieldECABONOSOK = new DecimalField(message,
				HEADERSIZE + 81, 15, 2, "ECABONOSOK");
		fields[8] = fieldECREGSER = new DecimalField(message, HEADERSIZE + 96,
				7, 0, "ECREGSER");
		fields[9] = fieldECABONOSER = new DecimalField(message,
				HEADERSIZE + 103, 15, 2, "ECABONOSER");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field ECNFUSER using a String value.
	 */
	public void setECNFUSER(String newvalue) {
		fieldECNFUSER.setString(newvalue);
	}

	/**
	 * Get value of field ECNFUSER as a String.
	 */
	public String getECNFUSER() {
		return fieldECNFUSER.getString();
	}

	/**
	 * Set field ECNFREF using a String value.
	 */
	public void setECNFREF(String newvalue) {
		fieldECNFREF.setString(newvalue);
	}

	/**
	 * Get value of field ECNFREF as a String.
	 */
	public String getECNFREF() {
		return fieldECNFREF.getString();
	}

	/**
	 * Set field ECCTACGO using a String value.
	 */
	public void setECCTACGO(String newvalue) {
		fieldECCTACGO.setString(newvalue);
	}

	/**
	 * Get value of field ECCTACGO as a String.
	 */
	public String getECCTACGO() {
		return fieldECCTACGO.getString();
	}

	/**
	 * Set numeric field ECCTACGO using a BigDecimal value.
	 */
	public void setECCTACGO(BigDecimal newvalue) {
		fieldECCTACGO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field ECCTACGO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalECCTACGO() {
		return fieldECCTACGO.getBigDecimal();
	}

	/**
	 * Set field ECFECPROC using a String value.
	 */
	public void setECFECPROC(String newvalue) {
		fieldECFECPROC.setString(newvalue);
	}

	/**
	 * Get value of field ECFECPROC as a String.
	 */
	public String getECFECPROC() {
		return fieldECFECPROC.getString();
	}

	/**
	 * Set numeric field ECFECPROC using a BigDecimal value.
	 */
	public void setECFECPROC(BigDecimal newvalue) {
		fieldECFECPROC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field ECFECPROC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalECFECPROC() {
		return fieldECFECPROC.getBigDecimal();
	}

	/**
	 * Set field ECREGS using a String value.
	 */
	public void setECREGS(String newvalue) {
		fieldECREGS.setString(newvalue);
	}

	/**
	 * Get value of field ECREGS as a String.
	 */
	public String getECREGS() {
		return fieldECREGS.getString();
	}

	/**
	 * Set numeric field ECREGS using a BigDecimal value.
	 */
	public void setECREGS(BigDecimal newvalue) {
		fieldECREGS.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field ECREGS as a BigDecimal.
	 */
	public BigDecimal getBigDecimalECREGS() {
		return fieldECREGS.getBigDecimal();
	}

	/**
	 * Set field ECABONOS using a String value.
	 */
	public void setECABONOS(String newvalue) {
		fieldECABONOS.setString(newvalue);
	}

	/**
	 * Get value of field ECABONOS as a String.
	 */
	public String getECABONOS() {
		return fieldECABONOS.getString();
	}

	/**
	 * Set numeric field ECABONOS using a BigDecimal value.
	 */
	public void setECABONOS(BigDecimal newvalue) {
		fieldECABONOS.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field ECABONOS as a BigDecimal.
	 */
	public BigDecimal getBigDecimalECABONOS() {
		return fieldECABONOS.getBigDecimal();
	}

	/**
	 * Set field ECREGSOK using a String value.
	 */
	public void setECREGSOK(String newvalue) {
		fieldECREGSOK.setString(newvalue);
	}

	/**
	 * Get value of field ECREGSOK as a String.
	 */
	public String getECREGSOK() {
		return fieldECREGSOK.getString();
	}

	/**
	 * Set numeric field ECREGSOK using a BigDecimal value.
	 */
	public void setECREGSOK(BigDecimal newvalue) {
		fieldECREGSOK.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field ECREGSOK as a BigDecimal.
	 */
	public BigDecimal getBigDecimalECREGSOK() {
		return fieldECREGSOK.getBigDecimal();
	}

	/**
	 * Set field ECABONOSOK using a String value.
	 */
	public void setECABONOSOK(String newvalue) {
		fieldECABONOSOK.setString(newvalue);
	}

	/**
	 * Get value of field ECABONOSOK as a String.
	 */
	public String getECABONOSOK() {
		return fieldECABONOSOK.getString();
	}

	/**
	 * Set numeric field ECABONOSOK using a BigDecimal value.
	 */
	public void setECABONOSOK(BigDecimal newvalue) {
		fieldECABONOSOK.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field ECABONOSOK as a BigDecimal.
	 */
	public BigDecimal getBigDecimalECABONOSOK() {
		return fieldECABONOSOK.getBigDecimal();
	}

	/**
	 * Set field ECREGSER using a String value.
	 */
	public void setECREGSER(String newvalue) {
		fieldECREGSER.setString(newvalue);
	}

	/**
	 * Get value of field ECREGSER as a String.
	 */
	public String getECREGSER() {
		return fieldECREGSER.getString();
	}

	/**
	 * Set numeric field ECREGSER using a BigDecimal value.
	 */
	public void setECREGSER(BigDecimal newvalue) {
		fieldECREGSER.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field ECREGSER as a BigDecimal.
	 */
	public BigDecimal getBigDecimalECREGSER() {
		return fieldECREGSER.getBigDecimal();
	}

	/**
	 * Set field ECABONOSER using a String value.
	 */
	public void setECABONOSER(String newvalue) {
		fieldECABONOSER.setString(newvalue);
	}

	/**
	 * Get value of field ECABONOSER as a String.
	 */
	public String getECABONOSER() {
		return fieldECABONOSER.getString();
	}

	/**
	 * Set numeric field ECABONOSER using a BigDecimal value.
	 */
	public void setECABONOSER(BigDecimal newvalue) {
		fieldECABONOSER.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field ECABONOSER as a BigDecimal.
	 */
	public BigDecimal getBigDecimalECABONOSER() {
		return fieldECABONOSER.getBigDecimal();
	}

}
