package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from REGISTER physical file
 * definition.
 * 
 * File level identifier is 1000802211908. Record format level identifier is
 * 3ED302273C57E.
 */

public class REGISTERMessage extends MessageRecord {
	final int FIELDCOUNT = 13;
	private CharacterField fieldREGUSR = null;
	private DecimalField fieldREGACC = null;
	private DecimalField fieldREGBDT = null;
	private DecimalField fieldREGLDA = null;
	private DecimalField fieldREGLDM = null;
	private DecimalField fieldREGLDD = null;
	private DecimalField fieldREGLDY = null;
	private DecimalField fieldREGDTL = null;
	private DecimalField fieldREGNTL = null;
	private CharacterField fieldREGCON = null;
	private CharacterField fieldREGEML = null;
	private CharacterField fieldREGATY = null;
	private DecimalField fieldREGITL = null;

	/**
	 * Constructor for REGISTERMessage.
	 */
	public REGISTERMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 175;
		fileid = "1000802211908";
		recordid = "3ED302273C57E";
		message = new byte[getByteLength()];
		formatname = "REGISTER";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "REGUSR";
		tagnames[0] = "REGUSR";
		fields[0] = fieldREGUSR = new CharacterField(message, HEADERSIZE + 0,
				10, "REGUSR");
		fieldnames[1] = "REGACC";
		tagnames[1] = "REGACC";
		fields[1] = fieldREGACC = new DecimalField(message, HEADERSIZE + 10,
				13, 0, "REGACC");
		fieldnames[2] = "REGBDT";
		tagnames[2] = "REGBDT";
		fields[2] = fieldREGBDT = new DecimalField(message, HEADERSIZE + 23, 9,
				0, "REGBDT");
		fieldnames[3] = "REGLDA";
		tagnames[3] = "REGLDA";
		fields[3] = fieldREGLDA = new DecimalField(message, HEADERSIZE + 32,
				17, 2, "REGLDA");
		fieldnames[4] = "REGLDM";
		tagnames[4] = "REGLDM";
		fields[4] = fieldREGLDM = new DecimalField(message, HEADERSIZE + 49, 3,
				0, "REGLDM");
		fieldnames[5] = "REGLDD";
		tagnames[5] = "REGLDD";
		fields[5] = fieldREGLDD = new DecimalField(message, HEADERSIZE + 52, 3,
				0, "REGLDD");
		fieldnames[6] = "REGLDY";
		tagnames[6] = "REGLDY";
		fields[6] = fieldREGLDY = new DecimalField(message, HEADERSIZE + 55, 3,
				0, "REGLDY");
		fieldnames[7] = "REGDTL";
		tagnames[7] = "REGDTL";
		fields[7] = fieldREGDTL = new DecimalField(message, HEADERSIZE + 58,
				12, 0, "REGDTL");
		fieldnames[8] = "REGNTL";
		tagnames[8] = "REGNTL";
		fields[8] = fieldREGNTL = new DecimalField(message, HEADERSIZE + 70,
				12, 0, "REGNTL");
		fieldnames[9] = "REGCON";
		tagnames[9] = "REGCON";
		fields[9] = fieldREGCON = new CharacterField(message, HEADERSIZE + 82,
				35, "REGCON");
		fieldnames[10] = "REGEML";
		tagnames[10] = "REGEML";
		fields[10] = fieldREGEML = new CharacterField(message,
				HEADERSIZE + 117, 40, "REGEML");
		fieldnames[11] = "REGATY";
		tagnames[11] = "REGATY";
		fields[11] = fieldREGATY = new CharacterField(message,
				HEADERSIZE + 157, 1, "REGATY");
		fieldnames[12] = "REGITL";
		tagnames[12] = "REGITL";
		fields[12] = fieldREGITL = new DecimalField(message, HEADERSIZE + 158,
				17, 2, "REGITL");
	}

	/**
	 * Return value of numeric field REGACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGACC() {
		return fieldREGACC.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGBDT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGBDT() {
		return fieldREGBDT.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGDTL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGDTL() {
		return fieldREGDTL.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGITL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGITL() {
		return fieldREGITL.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGLDA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGLDA() {
		return fieldREGLDA.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGLDD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGLDD() {
		return fieldREGLDD.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGLDM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGLDM() {
		return fieldREGLDM.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGLDY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGLDY() {
		return fieldREGLDY.getBigDecimal();
	}

	/**
	 * Return value of numeric field REGNTL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalREGNTL() {
		return fieldREGNTL.getBigDecimal();
	}

	/**
	 * Get value of field REGACC as a String.
	 */
	public String getREGACC() {
		return fieldREGACC.getString();
	}

	/**
	 * Get value of field REGATY as a String.
	 */
	public String getREGATY() {
		return fieldREGATY.getString();
	}

	/**
	 * Get value of field REGBDT as a String.
	 */
	public String getREGBDT() {
		return fieldREGBDT.getString();
	}

	/**
	 * Get value of field REGCON as a String.
	 */
	public String getREGCON() {
		return fieldREGCON.getString();
	}

	/**
	 * Get value of field REGDTL as a String.
	 */
	public String getREGDTL() {
		return fieldREGDTL.getString();
	}

	/**
	 * Get value of field REGEML as a String.
	 */
	public String getREGEML() {
		return fieldREGEML.getString();
	}

	/**
	 * Get value of field REGITL as a String.
	 */
	public String getREGITL() {
		return fieldREGITL.getString();
	}

	/**
	 * Get value of field REGLDA as a String.
	 */
	public String getREGLDA() {
		return fieldREGLDA.getString();
	}

	/**
	 * Get value of field REGLDD as a String.
	 */
	public String getREGLDD() {
		return fieldREGLDD.getString();
	}

	/**
	 * Get value of field REGLDM as a String.
	 */
	public String getREGLDM() {
		return fieldREGLDM.getString();
	}

	/**
	 * Get value of field REGLDY as a String.
	 */
	public String getREGLDY() {
		return fieldREGLDY.getString();
	}

	/**
	 * Get value of field REGNTL as a String.
	 */
	public String getREGNTL() {
		return fieldREGNTL.getString();
	}

	/**
	 * Get value of field REGUSR as a String.
	 */
	public String getREGUSR() {
		return fieldREGUSR.getString();
	}

	/**
	 * Set field REGACC using a String value.
	 */
	public void setREGACC(String newvalue) {
		fieldREGACC.setString(newvalue);
	}

	/**
	 * Set numeric field REGACC using a BigDecimal value.
	 */
	public void setREGACC(BigDecimal newvalue) {
		fieldREGACC.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGATY using a String value.
	 */
	public void setREGATY(String newvalue) {
		fieldREGATY.setString(newvalue);
	}

	/**
	 * Set field REGBDT using a String value.
	 */
	public void setREGBDT(String newvalue) {
		fieldREGBDT.setString(newvalue);
	}

	/**
	 * Set numeric field REGBDT using a BigDecimal value.
	 */
	public void setREGBDT(BigDecimal newvalue) {
		fieldREGBDT.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGCON using a String value.
	 */
	public void setREGCON(String newvalue) {
		fieldREGCON.setString(newvalue);
	}

	/**
	 * Set field REGDTL using a String value.
	 */
	public void setREGDTL(String newvalue) {
		fieldREGDTL.setString(newvalue);
	}

	/**
	 * Set numeric field REGDTL using a BigDecimal value.
	 */
	public void setREGDTL(BigDecimal newvalue) {
		fieldREGDTL.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGEML using a String value.
	 */
	public void setREGEML(String newvalue) {
		fieldREGEML.setString(newvalue);
	}

	/**
	 * Set field REGITL using a String value.
	 */
	public void setREGITL(String newvalue) {
		fieldREGITL.setString(newvalue);
	}

	/**
	 * Set numeric field REGITL using a BigDecimal value.
	 */
	public void setREGITL(BigDecimal newvalue) {
		fieldREGITL.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGLDA using a String value.
	 */
	public void setREGLDA(String newvalue) {
		fieldREGLDA.setString(newvalue);
	}

	/**
	 * Set numeric field REGLDA using a BigDecimal value.
	 */
	public void setREGLDA(BigDecimal newvalue) {
		fieldREGLDA.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGLDD using a String value.
	 */
	public void setREGLDD(String newvalue) {
		fieldREGLDD.setString(newvalue);
	}

	/**
	 * Set numeric field REGLDD using a BigDecimal value.
	 */
	public void setREGLDD(BigDecimal newvalue) {
		fieldREGLDD.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGLDM using a String value.
	 */
	public void setREGLDM(String newvalue) {
		fieldREGLDM.setString(newvalue);
	}

	/**
	 * Set numeric field REGLDM using a BigDecimal value.
	 */
	public void setREGLDM(BigDecimal newvalue) {
		fieldREGLDM.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGLDY using a String value.
	 */
	public void setREGLDY(String newvalue) {
		fieldREGLDY.setString(newvalue);
	}

	/**
	 * Set numeric field REGLDY using a BigDecimal value.
	 */
	public void setREGLDY(BigDecimal newvalue) {
		fieldREGLDY.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGNTL using a String value.
	 */
	public void setREGNTL(String newvalue) {
		fieldREGNTL.setString(newvalue);
	}

	/**
	 * Set numeric field REGNTL using a BigDecimal value.
	 */
	public void setREGNTL(BigDecimal newvalue) {
		fieldREGNTL.setBigDecimal(newvalue);
	}

	/**
	 * Set field REGUSR using a String value.
	 */
	public void setREGUSR(String newvalue) {
		fieldREGUSR.setString(newvalue);
	}
}