package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from POSCVALDS physical file
 * definition.
 * 
 * File level identifier is 1000510143609. Record format level identifier is
 * 46163E04A48DD.
 */

public class POSCVALDSMessage extends MessageRecord {
	final int FIELDCOUNT = 13;
	private CharacterField fieldPRMBNK = null;
	private DecimalField fieldPRMBRN = null;
	private CharacterField fieldPRMCCY = null;
	private DecimalField fieldPRMAMT = null;
	private CharacterField fieldPRMDCC = null;
	private DecimalField fieldPRMEXR = null;
	private CharacterField fieldPRMTYP = null;
	private CharacterField fieldPRMPRO = null;
	private CharacterField fieldPRMFIL = null;
	private CharacterField fieldPRMOBK = null;
	private DecimalField fieldPRMOBR = null;
	private DecimalField fieldPRMKBT = null;
	private DecimalField fieldPRMKSQ = null;

	/**
	 * Constructor for POSCVALDSMessage.
	 */
	public POSCVALDSMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 60;
		fileid = "1000510143609";
		recordid = "46163E04A48DD";
		message = new byte[getByteLength()];
		formatname = "POSCVALDS";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "PRMBNK";
		tagnames[0] = "PRMBNK";
		fields[0] = fieldPRMBNK = new CharacterField(message, HEADERSIZE + 0,
				2, "PRMBNK");
		fieldnames[1] = "PRMBRN";
		tagnames[1] = "PRMBRN";
		fields[1] = fieldPRMBRN = new DecimalField(message, HEADERSIZE + 2, 4,
				0, "PRMBRN");
		fieldnames[2] = "PRMCCY";
		tagnames[2] = "PRMCCY";
		fields[2] = fieldPRMCCY = new CharacterField(message, HEADERSIZE + 6,
				3, "PRMCCY");
		fieldnames[3] = "PRMAMT";
		tagnames[3] = "PRMAMT";
		fields[3] = fieldPRMAMT = new DecimalField(message, HEADERSIZE + 9, 17,
				2, "PRMAMT");
		fieldnames[4] = "PRMDCC";
		tagnames[4] = "PRMDCC";
		fields[4] = fieldPRMDCC = new CharacterField(message, HEADERSIZE + 26,
				1, "PRMDCC");
		fieldnames[5] = "PRMEXR";
		tagnames[5] = "PRMEXR";
		fields[5] = fieldPRMEXR = new DecimalField(message, HEADERSIZE + 27,
				13, 6, "PRMEXR");
		fieldnames[6] = "PRMTYP";
		tagnames[6] = "PRMTYP";
		fields[6] = fieldPRMTYP = new CharacterField(message, HEADERSIZE + 40,
				1, "PRMTYP");
		fieldnames[7] = "PRMPRO";
		tagnames[7] = "PRMPRO";
		fields[7] = fieldPRMPRO = new CharacterField(message, HEADERSIZE + 41,
				1, "PRMPRO");
		fieldnames[8] = "PRMFIL";
		tagnames[8] = "PRMFIL";
		fields[8] = fieldPRMFIL = new CharacterField(message, HEADERSIZE + 42,
				1, "PRMFIL");
		fieldnames[9] = "PRMOBK";
		tagnames[9] = "PRMOBK";
		fields[9] = fieldPRMOBK = new CharacterField(message, HEADERSIZE + 43,
				2, "PRMOBK");
		fieldnames[10] = "PRMOBR";
		tagnames[10] = "PRMOBR";
		fields[10] = fieldPRMOBR = new DecimalField(message, HEADERSIZE + 45,
				4, 0, "PRMOBR");
		fieldnames[11] = "PRMKBT";
		tagnames[11] = "PRMKBT";
		fields[11] = fieldPRMKBT = new DecimalField(message, HEADERSIZE + 49,
				5, 0, "PRMKBT");
		fieldnames[12] = "PRMKSQ";
		tagnames[12] = "PRMKSQ";
		fields[12] = fieldPRMKSQ = new DecimalField(message, HEADERSIZE + 54,
				6, 0, "PRMKSQ");
	}

	/**
	 * Return value of numeric field PRMAMT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalPRMAMT() {
		return fieldPRMAMT.getBigDecimal();
	}

	/**
	 * Return value of numeric field PRMBRN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalPRMBRN() {
		return fieldPRMBRN.getBigDecimal();
	}

	/**
	 * Return value of numeric field PRMEXR as a BigDecimal.
	 */
	public BigDecimal getBigDecimalPRMEXR() {
		return fieldPRMEXR.getBigDecimal();
	}

	/**
	 * Return value of numeric field PRMKBT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalPRMKBT() {
		return fieldPRMKBT.getBigDecimal();
	}

	/**
	 * Return value of numeric field PRMKSQ as a BigDecimal.
	 */
	public BigDecimal getBigDecimalPRMKSQ() {
		return fieldPRMKSQ.getBigDecimal();
	}

	/**
	 * Return value of numeric field PRMOBR as a BigDecimal.
	 */
	public BigDecimal getBigDecimalPRMOBR() {
		return fieldPRMOBR.getBigDecimal();
	}

	/**
	 * Get value of field PRMAMT as a String.
	 */
	public String getPRMAMT() {
		return fieldPRMAMT.getString();
	}

	/**
	 * Get value of field PRMBNK as a String.
	 */
	public String getPRMBNK() {
		return fieldPRMBNK.getString();
	}

	/**
	 * Get value of field PRMBRN as a String.
	 */
	public String getPRMBRN() {
		return fieldPRMBRN.getString();
	}

	/**
	 * Get value of field PRMCCY as a String.
	 */
	public String getPRMCCY() {
		return fieldPRMCCY.getString();
	}

	/**
	 * Get value of field PRMDCC as a String.
	 */
	public String getPRMDCC() {
		return fieldPRMDCC.getString();
	}

	/**
	 * Get value of field PRMEXR as a String.
	 */
	public String getPRMEXR() {
		return fieldPRMEXR.getString();
	}

	/**
	 * Get value of field PRMFIL as a String.
	 */
	public String getPRMFIL() {
		return fieldPRMFIL.getString();
	}

	/**
	 * Get value of field PRMKBT as a String.
	 */
	public String getPRMKBT() {
		return fieldPRMKBT.getString();
	}

	/**
	 * Get value of field PRMKSQ as a String.
	 */
	public String getPRMKSQ() {
		return fieldPRMKSQ.getString();
	}

	/**
	 * Get value of field PRMOBK as a String.
	 */
	public String getPRMOBK() {
		return fieldPRMOBK.getString();
	}

	/**
	 * Get value of field PRMOBR as a String.
	 */
	public String getPRMOBR() {
		return fieldPRMOBR.getString();
	}

	/**
	 * Get value of field PRMPRO as a String.
	 */
	public String getPRMPRO() {
		return fieldPRMPRO.getString();
	}

	/**
	 * Get value of field PRMTYP as a String.
	 */
	public String getPRMTYP() {
		return fieldPRMTYP.getString();
	}

	/**
	 * Set field PRMAMT using a String value.
	 */
	public void setPRMAMT(String newvalue) {
		fieldPRMAMT.setString(newvalue);
	}

	/**
	 * Set numeric field PRMAMT using a BigDecimal value.
	 */
	public void setPRMAMT(BigDecimal newvalue) {
		fieldPRMAMT.setBigDecimal(newvalue);
	}

	/**
	 * Set field PRMBNK using a String value.
	 */
	public void setPRMBNK(String newvalue) {
		fieldPRMBNK.setString(newvalue);
	}

	/**
	 * Set field PRMBRN using a String value.
	 */
	public void setPRMBRN(String newvalue) {
		fieldPRMBRN.setString(newvalue);
	}

	/**
	 * Set numeric field PRMBRN using a BigDecimal value.
	 */
	public void setPRMBRN(BigDecimal newvalue) {
		fieldPRMBRN.setBigDecimal(newvalue);
	}

	/**
	 * Set field PRMCCY using a String value.
	 */
	public void setPRMCCY(String newvalue) {
		fieldPRMCCY.setString(newvalue);
	}

	/**
	 * Set field PRMDCC using a String value.
	 */
	public void setPRMDCC(String newvalue) {
		fieldPRMDCC.setString(newvalue);
	}

	/**
	 * Set field PRMEXR using a String value.
	 */
	public void setPRMEXR(String newvalue) {
		fieldPRMEXR.setString(newvalue);
	}

	/**
	 * Set numeric field PRMEXR using a BigDecimal value.
	 */
	public void setPRMEXR(BigDecimal newvalue) {
		fieldPRMEXR.setBigDecimal(newvalue);
	}

	/**
	 * Set field PRMFIL using a String value.
	 */
	public void setPRMFIL(String newvalue) {
		fieldPRMFIL.setString(newvalue);
	}

	/**
	 * Set field PRMKBT using a String value.
	 */
	public void setPRMKBT(String newvalue) {
		fieldPRMKBT.setString(newvalue);
	}

	/**
	 * Set numeric field PRMKBT using a BigDecimal value.
	 */
	public void setPRMKBT(BigDecimal newvalue) {
		fieldPRMKBT.setBigDecimal(newvalue);
	}

	/**
	 * Set field PRMKSQ using a String value.
	 */
	public void setPRMKSQ(String newvalue) {
		fieldPRMKSQ.setString(newvalue);
	}

	/**
	 * Set numeric field PRMKSQ using a BigDecimal value.
	 */
	public void setPRMKSQ(BigDecimal newvalue) {
		fieldPRMKSQ.setBigDecimal(newvalue);
	}

	/**
	 * Set field PRMOBK using a String value.
	 */
	public void setPRMOBK(String newvalue) {
		fieldPRMOBK.setString(newvalue);
	}

	/**
	 * Set field PRMOBR using a String value.
	 */
	public void setPRMOBR(String newvalue) {
		fieldPRMOBR.setString(newvalue);
	}

	/**
	 * Set numeric field PRMOBR using a BigDecimal value.
	 */
	public void setPRMOBR(BigDecimal newvalue) {
		fieldPRMOBR.setBigDecimal(newvalue);
	}

	/**
	 * Set field PRMPRO using a String value.
	 */
	public void setPRMPRO(String newvalue) {
		fieldPRMPRO.setString(newvalue);
	}

	/**
	 * Set field PRMTYP using a String value.
	 */
	public void setPRMTYP(String newvalue) {
		fieldPRMTYP.setString(newvalue);
	}
}