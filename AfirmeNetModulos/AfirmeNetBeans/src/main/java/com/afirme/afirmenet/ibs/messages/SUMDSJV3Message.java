package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from SUMDSJV physical file
 * definition.
 * 
 * File level identifier is 1120801163018. Record format level identifier is
 * 5B9A51F87A44E.
 */

@SuppressWarnings("rawtypes")
public class SUMDSJV3Message extends MessageRecord {
	final static String fldnames[] = { "SUMUSR", "SUMFLG", "SUMTYP", "SUMDSC",
			"SUMACN", "SUMBAL", "SUMAVB", "SUMCCY", "SUMNNM", "SUMFIR",
			"SUMCLA", "SUMODD", "SUMODM", "SUMODY", "SUMMAD", "SUMMAM",
			"SUMMAY", "SUMFCP", "SUMCMC", "SUMCMN", "SUMPRD", "SUMACD" };
	final static String tnames[] = { "SUMUSR", "SUMFLG", "SUMTYP", "SUMDSC",
			"SUMACN", "SUMBAL", "SUMAVB", "SUMCCY", "SUMNNM", "SUMFIR",
			"SUMCLA", "SUMODD", "SUMODM", "SUMODY", "SUMMAD", "SUMMAM",
			"SUMMAY", "SUMFCP", "SUMCMC", "SUMCMN", "SUMPRD", "SUMACD" };
	final static String fid = "1131002100228";
	final static String rid = "459718D1C1407";
	final static String fmtname = "SUMDSJV3";
	final int FIELDCOUNT = 22;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldSUMUSR = null;
	private DecimalField fieldSUMFLG = null;
	private CharacterField fieldSUMTYP = null;
	private CharacterField fieldSUMDSC = null;
	private DecimalField fieldSUMACN = null;
	private DecimalField fieldSUMBAL = null;
	private DecimalField fieldSUMAVB = null;
	private CharacterField fieldSUMCCY = null;
	private CharacterField fieldSUMNNM = null;
	private CharacterField fieldSUMFIR = null;
	private CharacterField fieldSUMCLA = null;
	private DecimalField fieldSUMODD = null;
	private DecimalField fieldSUMODM = null;
	private DecimalField fieldSUMODY = null;
	private DecimalField fieldSUMMAD = null;
	private DecimalField fieldSUMMAM = null;
	private DecimalField fieldSUMMAY = null;
	private DecimalField fieldSUMFCP = null;
	private DecimalField fieldSUMCMC = null;
	private DecimalField fieldSUMCMN = null;
	private CharacterField fieldSUMPRD = null;
	private CharacterField fieldSUMACD = null;

	/**
	 * Constructor for SUMDSJV3Message.
	 */
	public SUMDSJV3Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 197;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldSUMUSR = new CharacterField(message, HEADERSIZE + 0,
				10, "SUMUSR");
		fields[1] = fieldSUMFLG = new DecimalField(message, HEADERSIZE + 10, 3,
				0, "SUMFLG");
		fields[2] = fieldSUMTYP = new CharacterField(message, HEADERSIZE + 13,
				4, "SUMTYP");
		fields[3] = fieldSUMDSC = new CharacterField(message, HEADERSIZE + 17,
				30, "SUMDSC");
		fields[4] = fieldSUMACN = new DecimalField(message, HEADERSIZE + 47,
				17, 0, "SUMACN");
		fields[5] = fieldSUMBAL = new DecimalField(message, HEADERSIZE + 64,
				17, 2, "SUMBAL");
		fields[6] = fieldSUMAVB = new DecimalField(message, HEADERSIZE + 81,
				17, 2, "SUMAVB");
		fields[7] = fieldSUMCCY = new CharacterField(message, HEADERSIZE + 98,
				3, "SUMCCY");
		fields[8] = fieldSUMNNM = new CharacterField(message, HEADERSIZE + 101,
				30, "SUMNNM");
		fields[9] = fieldSUMFIR = new CharacterField(message, HEADERSIZE + 131,
				1, "SUMFIR");
		fields[10] = fieldSUMCLA = new CharacterField(message,
				HEADERSIZE + 132, 18, "SUMCLA");
		fields[11] = fieldSUMODD = new DecimalField(message, HEADERSIZE + 150,
				3, 0, "SUMODD");
		fields[12] = fieldSUMODM = new DecimalField(message, HEADERSIZE + 153,
				3, 0, "SUMODM");
		fields[13] = fieldSUMODY = new DecimalField(message, HEADERSIZE + 156,
				3, 0, "SUMODY");
		fields[14] = fieldSUMMAD = new DecimalField(message, HEADERSIZE + 159,
				3, 0, "SUMMAD");
		fields[15] = fieldSUMMAM = new DecimalField(message, HEADERSIZE + 162,
				3, 0, "SUMMAM");
		fields[16] = fieldSUMMAY = new DecimalField(message, HEADERSIZE + 165,
				3, 0, "SUMMAY");
		fields[17] = fieldSUMFCP = new DecimalField(message, HEADERSIZE + 168,
				8, 4, "SUMFCP");
		fields[18] = fieldSUMCMC = new DecimalField(message, HEADERSIZE + 176,
				10, 0, "SUMCMC");
		fields[19] = fieldSUMCMN = new DecimalField(message, HEADERSIZE + 186,
				5, 0, "SUMCMN");
		fields[20] = fieldSUMPRD = new CharacterField(message,
				HEADERSIZE + 191, 4, "SUMPRD");
		fields[21] = fieldSUMACD = new CharacterField(message,
				HEADERSIZE + 195, 2, "SUMACD");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field SUMUSR using a String value.
	 */
	public void setSUMUSR(String newvalue) {
		fieldSUMUSR.setString(newvalue);
	}

	/**
	 * Get value of field SUMUSR as a String.
	 */
	public String getSUMUSR() {
		return fieldSUMUSR.getString();
	}

	/**
	 * Set field SUMFLG using a String value.
	 */
	public void setSUMFLG(String newvalue) {
		fieldSUMFLG.setString(newvalue);
	}

	/**
	 * Get value of field SUMFLG as a String.
	 */
	public String getSUMFLG() {
		return fieldSUMFLG.getString();
	}

	/**
	 * Set numeric field SUMFLG using a BigDecimal value.
	 */
	public void setSUMFLG(BigDecimal newvalue) {
		fieldSUMFLG.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMFLG as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMFLG() {
		return fieldSUMFLG.getBigDecimal();
	}

	/**
	 * Set field SUMTYP using a String value.
	 */
	public void setSUMTYP(String newvalue) {
		fieldSUMTYP.setString(newvalue);
	}

	/**
	 * Get value of field SUMTYP as a String.
	 */
	public String getSUMTYP() {
		return fieldSUMTYP.getString();
	}

	/**
	 * Set field SUMDSC using a String value.
	 */
	public void setSUMDSC(String newvalue) {
		fieldSUMDSC.setString(newvalue);
	}

	/**
	 * Get value of field SUMDSC as a String.
	 */
	public String getSUMDSC() {
		return fieldSUMDSC.getString();
	}

	/**
	 * Set field SUMACN using a String value.
	 */
	public void setSUMACN(String newvalue) {
		fieldSUMACN.setString(newvalue);
	}

	/**
	 * Get value of field SUMACN as a String.
	 */
	public String getSUMACN() {
		return fieldSUMACN.getString();
	}

	/**
	 * Set numeric field SUMACN using a BigDecimal value.
	 */
	public void setSUMACN(BigDecimal newvalue) {
		fieldSUMACN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMACN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMACN() {
		return fieldSUMACN.getBigDecimal();
	}

	/**
	 * Set field SUMBAL using a String value.
	 */
	public void setSUMBAL(String newvalue) {
		fieldSUMBAL.setString(newvalue);
	}

	/**
	 * Get value of field SUMBAL as a String.
	 */
	public String getSUMBAL() {
		return fieldSUMBAL.getString();
	}

	/**
	 * Set numeric field SUMBAL using a BigDecimal value.
	 */
	public void setSUMBAL(BigDecimal newvalue) {
		fieldSUMBAL.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMBAL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMBAL() {
		return fieldSUMBAL.getBigDecimal();
	}

	/**
	 * Set field SUMAVB using a String value.
	 */
	public void setSUMAVB(String newvalue) {
		fieldSUMAVB.setString(newvalue);
	}

	/**
	 * Get value of field SUMAVB as a String.
	 */
	public String getSUMAVB() {
		return fieldSUMAVB.getString();
	}

	/**
	 * Set numeric field SUMAVB using a BigDecimal value.
	 */
	public void setSUMAVB(BigDecimal newvalue) {
		fieldSUMAVB.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMAVB as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMAVB() {
		return fieldSUMAVB.getBigDecimal();
	}

	/**
	 * Set field SUMCCY using a String value.
	 */
	public void setSUMCCY(String newvalue) {
		fieldSUMCCY.setString(newvalue);
	}

	/**
	 * Get value of field SUMCCY as a String.
	 */
	public String getSUMCCY() {
		return fieldSUMCCY.getString();
	}

	/**
	 * Set field SUMNNM using a String value.
	 */
	public void setSUMNNM(String newvalue) {
		fieldSUMNNM.setString(newvalue);
	}

	/**
	 * Get value of field SUMNNM as a String.
	 */
	public String getSUMNNM() {
		return fieldSUMNNM.getString();
	}

	/**
	 * Set field SUMFIR using a String value.
	 */
	public void setSUMFIR(String newvalue) {
		fieldSUMFIR.setString(newvalue);
	}

	/**
	 * Get value of field SUMFIR as a String.
	 */
	public String getSUMFIR() {
		return fieldSUMFIR.getString();
	}

	/**
	 * Set field SUMCLA using a String value.
	 */
	public void setSUMCLA(String newvalue) {
		fieldSUMCLA.setString(newvalue);
	}

	/**
	 * Get value of field SUMCLA as a String.
	 */
	public String getSUMCLA() {
		return fieldSUMCLA.getString();
	}

	/**
	 * Set field SUMODD using a String value.
	 */
	public void setSUMODD(String newvalue) {
		fieldSUMODD.setString(newvalue);
	}

	/**
	 * Get value of field SUMODD as a String.
	 */
	public String getSUMODD() {
		return fieldSUMODD.getString();
	}

	/**
	 * Set numeric field SUMODD using a BigDecimal value.
	 */
	public void setSUMODD(BigDecimal newvalue) {
		fieldSUMODD.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMODD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMODD() {
		return fieldSUMODD.getBigDecimal();
	}

	/**
	 * Set field SUMODM using a String value.
	 */
	public void setSUMODM(String newvalue) {
		fieldSUMODM.setString(newvalue);
	}

	/**
	 * Get value of field SUMODM as a String.
	 */
	public String getSUMODM() {
		return fieldSUMODM.getString();
	}

	/**
	 * Set numeric field SUMODM using a BigDecimal value.
	 */
	public void setSUMODM(BigDecimal newvalue) {
		fieldSUMODM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMODM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMODM() {
		return fieldSUMODM.getBigDecimal();
	}

	/**
	 * Set field SUMODY using a String value.
	 */
	public void setSUMODY(String newvalue) {
		fieldSUMODY.setString(newvalue);
	}

	/**
	 * Get value of field SUMODY as a String.
	 */
	public String getSUMODY() {
		return fieldSUMODY.getString();
	}

	/**
	 * Set numeric field SUMODY using a BigDecimal value.
	 */
	public void setSUMODY(BigDecimal newvalue) {
		fieldSUMODY.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMODY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMODY() {
		return fieldSUMODY.getBigDecimal();
	}

	/**
	 * Set field SUMMAD using a String value.
	 */
	public void setSUMMAD(String newvalue) {
		fieldSUMMAD.setString(newvalue);
	}

	/**
	 * Get value of field SUMMAD as a String.
	 */
	public String getSUMMAD() {
		return fieldSUMMAD.getString();
	}

	/**
	 * Set numeric field SUMMAD using a BigDecimal value.
	 */
	public void setSUMMAD(BigDecimal newvalue) {
		fieldSUMMAD.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMMAD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMMAD() {
		return fieldSUMMAD.getBigDecimal();
	}

	/**
	 * Set field SUMMAM using a String value.
	 */
	public void setSUMMAM(String newvalue) {
		fieldSUMMAM.setString(newvalue);
	}

	/**
	 * Get value of field SUMMAM as a String.
	 */
	public String getSUMMAM() {
		return fieldSUMMAM.getString();
	}

	/**
	 * Set numeric field SUMMAM using a BigDecimal value.
	 */
	public void setSUMMAM(BigDecimal newvalue) {
		fieldSUMMAM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMMAM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMMAM() {
		return fieldSUMMAM.getBigDecimal();
	}

	/**
	 * Set field SUMMAY using a String value.
	 */
	public void setSUMMAY(String newvalue) {
		fieldSUMMAY.setString(newvalue);
	}

	/**
	 * Get value of field SUMMAY as a String.
	 */
	public String getSUMMAY() {
		return fieldSUMMAY.getString();
	}

	/**
	 * Set numeric field SUMMAY using a BigDecimal value.
	 */
	public void setSUMMAY(BigDecimal newvalue) {
		fieldSUMMAY.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMMAY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMMAY() {
		return fieldSUMMAY.getBigDecimal();
	}

	/**
	 * Set field SUMFCP using a String value.
	 */
	public void setSUMFCP(String newvalue) {
		fieldSUMFCP.setString(newvalue);
	}

	/**
	 * Get value of field SUMFCP as a String.
	 */
	public String getSUMFCP() {
		return fieldSUMFCP.getString();
	}

	/**
	 * Set numeric field SUMFCP using a BigDecimal value.
	 */
	public void setSUMFCP(BigDecimal newvalue) {
		fieldSUMFCP.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMFCP as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMFCP() {
		return fieldSUMFCP.getBigDecimal();
	}

	/**
	 * Set field SUMCMC using a String value.
	 */
	public void setSUMCMC(String newvalue) {
		fieldSUMCMC.setString(newvalue);
	}

	/**
	 * Get value of field SUMCMC as a String.
	 */
	public String getSUMCMC() {
		return fieldSUMCMC.getString();
	}

	/**
	 * Set numeric field SUMCMC using a BigDecimal value.
	 */
	public void setSUMCMC(BigDecimal newvalue) {
		fieldSUMCMC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMCMC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMCMC() {
		return fieldSUMCMC.getBigDecimal();
	}

	/**
	 * Set field SUMCMN using a String value.
	 */
	public void setSUMCMN(String newvalue) {
		fieldSUMCMN.setString(newvalue);
	}

	/**
	 * Get value of field SUMCMN as a String.
	 */
	public String getSUMCMN() {
		return fieldSUMCMN.getString();
	}

	/**
	 * Set numeric field SUMCMN using a BigDecimal value.
	 */
	public void setSUMCMN(BigDecimal newvalue) {
		fieldSUMCMN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field SUMCMN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalSUMCMN() {
		return fieldSUMCMN.getBigDecimal();
	}

	/**
	 * Set field SUMPRD using a String value.
	 */
	public void setSUMPRD(String newvalue) {
		fieldSUMPRD.setString(newvalue);
	}

	/**
	 * Get value of field SUMPRD as a String.
	 */
	public String getSUMPRD() {
		return fieldSUMPRD.getString();
	}

	/**
	 * Set field SUMACD using a String value.
	 */
	public void setSUMACD(String newvalue) {
		fieldSUMACD.setString(newvalue);
	}

	/**
	 * Get value of field SUMACD as a String.
	 */
	public String getSUMACD() {
		return fieldSUMACD.getString();
	}

}
