package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
* Class generated by AS/400 CRTCLASS command from CRNNOMI01 physical file definition.
* 
* File level identifier is 1111109171744.
* Record format level identifier is 42278F19D7FE4.
*/
@SuppressWarnings("rawtypes")
public class CRNNOMI01Message extends MessageRecord
{
  final static String fldnames[] = {
                                     "INTOPE",
                                     "INTUSR",
                                     "INTREF",
                                     "INTXPMTV",
                                     "INTFECHA",
                                     "INTHORA",
                                     "INCUENTA",
                                     "INUSUARIO",
                                     "INCLIENTE",
                                     "INLINAUT",
                                     "INCREDOTOR",
                                     "INCREDISP",
                                     "INIMPORTE",
                                     "INTASA",
                                     "INMORA",
                                     "INCOMIS",
                                     "INIVACOM",
                                     "INSEGURO",
                                     "INPLAZO",
                                     "INCAT",
                                     "INCUOTA",
                                     "INFECPAGO",
                                     "INPAGPEND",
                                     "INCREDITO",
                                     "INSALDCAP",
                                     "INSALDANT",
                                     "INFECONT",
                                     "INFEULTPAG",
                                     "INIMULTPAG",
                                     "INSALDTOT",
                                     "INSALDVENC",
                                     "INCOMPTJE",
                                     "INFACSEG",
                                     "INFOLAUD",
                                     "INCORRE"
                                   };
  final static String tnames[] = {
                                   "INTOPE",
                                   "INTUSR",
                                   "INTREF",
                                   "INTXPMTV",
                                   "INTFECHA",
                                   "INTHORA",
                                   "INCUENTA",
                                   "INUSUARIO",
                                   "INCLIENTE",
                                   "INLINAUT",
                                   "INCREDOTOR",
                                   "INCREDISP",
                                   "INIMPORTE",
                                   "INTASA",
                                   "INMORA",
                                   "INCOMIS",
                                   "INIVACOM",
                                   "INSEGURO",
                                   "INPLAZO",
                                   "INCAT",
                                   "INCUOTA",
                                   "INFECPAGO",
                                   "INPAGPEND",
                                   "INCREDITO",
                                   "INSALDCAP",
                                   "INSALDANT",
                                   "INFECONT",
                                   "INFEULTPAG",
                                   "INIMULTPAG",
                                   "INSALDTOT",
                                   "INSALDVENC",
                                   "INCOMPTJE",
                                   "INFACSEG",
                                   "INFOLAUD",
                                   "INCORRE"
                                 };
  final static String fid = "1111109171744";
  final static String rid = "42278F19D7FE4";
  final static String fmtname = "CRNNOMI01";
  final int FIELDCOUNT = 35;
  private static Hashtable tlookup = new Hashtable();
  private CharacterField fieldINTOPE = null;
  private CharacterField fieldINTUSR = null;
  private CharacterField fieldINTREF = null;
  private CharacterField fieldINTXPMTV = null;
  private DecimalField fieldINTFECHA = null;
  private DecimalField fieldINTHORA = null;
  private DecimalField fieldINCUENTA = null;
  private CharacterField fieldINUSUARIO = null;
  private DecimalField fieldINCLIENTE = null;
  private DecimalField fieldINLINAUT = null;
  private DecimalField fieldINCREDOTOR = null;
  private DecimalField fieldINCREDISP = null;
  private DecimalField fieldINIMPORTE = null;
  private DecimalField fieldINTASA = null;
  private DecimalField fieldINMORA = null;
  private DecimalField fieldINCOMIS = null;
  private DecimalField fieldINIVACOM = null;
  private DecimalField fieldINSEGURO = null;
  private DecimalField fieldINPLAZO = null;
  private DecimalField fieldINCAT = null;
  private DecimalField fieldINCUOTA = null;
  private DecimalField fieldINFECPAGO = null;
  private DecimalField fieldINPAGPEND = null;
  private DecimalField fieldINCREDITO = null;
  private DecimalField fieldINSALDCAP = null;
  private DecimalField fieldINSALDANT = null;
  private DecimalField fieldINFECONT = null;
  private DecimalField fieldINFEULTPAG = null;
  private DecimalField fieldINIMULTPAG = null;
  private DecimalField fieldINSALDTOT = null;
  private DecimalField fieldINSALDVENC = null;
  private DecimalField fieldINCOMPTJE = null;
  private DecimalField fieldINFACSEG = null;
  private DecimalField fieldINFOLAUD = null;
  private CharacterField fieldINCORRE = null;

  /**
  * Constructor for CRNNOMI01Message.
  */
  public CRNNOMI01Message()
  {
    createFields();
    initialize();
  }

  /**
  * Create fields for this message.
  * This method implements the abstract method in the MessageRecord superclass.
  */
@SuppressWarnings("unchecked")    protected void createFields()
  {
    recordsize = 454;
    fileid = fid;
    recordid = rid;
    message = new byte[getByteLength()];
    formatname = fmtname;
    fieldnames = fldnames;
    tagnames = tnames;
    fields = new MessageField[FIELDCOUNT];

    fields[0] = fieldINTOPE =
    new CharacterField(message, HEADERSIZE + 0, 1, "INTOPE");
    fields[1] = fieldINTUSR =
    new CharacterField(message, HEADERSIZE + 1, 10, "INTUSR");
    fields[2] = fieldINTREF =
    new CharacterField(message, HEADERSIZE + 11, 12, "INTREF");
    fields[3] = fieldINTXPMTV =
    new CharacterField(message, HEADERSIZE + 23, 2, "INTXPMTV");
    fields[4] = fieldINTFECHA =
    new DecimalField(message, HEADERSIZE + 25, 9, 0, "INTFECHA");
    fields[5] = fieldINTHORA =
    new DecimalField(message, HEADERSIZE + 34, 7, 0, "INTHORA");
    fields[6] = fieldINCUENTA =
    new DecimalField(message, HEADERSIZE + 41, 13, 0, "INCUENTA");
    fields[7] = fieldINUSUARIO =
    new CharacterField(message, HEADERSIZE + 54, 10, "INUSUARIO");
    fields[8] = fieldINCLIENTE =
    new DecimalField(message, HEADERSIZE + 64, 10, 0, "INCLIENTE");
    fields[9] = fieldINLINAUT =
    new DecimalField(message, HEADERSIZE + 74, 17, 2, "INLINAUT");
    fields[10] = fieldINCREDOTOR =
    new DecimalField(message, HEADERSIZE + 91, 17, 2, "INCREDOTOR");
    fields[11] = fieldINCREDISP =
    new DecimalField(message, HEADERSIZE + 108, 17, 2, "INCREDISP");
    fields[12] = fieldINIMPORTE =
    new DecimalField(message, HEADERSIZE + 125, 17, 2, "INIMPORTE");
    fields[13] = fieldINTASA =
    new DecimalField(message, HEADERSIZE + 142, 11, 6, "INTASA");
    fields[14] = fieldINMORA =
    new DecimalField(message, HEADERSIZE + 153, 11, 6, "INMORA");
    fields[15] = fieldINCOMIS =
    new DecimalField(message, HEADERSIZE + 164, 17, 2, "INCOMIS");
    fields[16] = fieldINIVACOM =
    new DecimalField(message, HEADERSIZE + 181, 17, 2, "INIVACOM");
    fields[17] = fieldINSEGURO =
    new DecimalField(message, HEADERSIZE + 198, 17, 2, "INSEGURO");
    fields[18] = fieldINPLAZO =
    new DecimalField(message, HEADERSIZE + 215, 4, 0, "INPLAZO");
    fields[19] = fieldINCAT =
    new DecimalField(message, HEADERSIZE + 219, 12, 6, "INCAT");
    fields[20] = fieldINCUOTA =
    new DecimalField(message, HEADERSIZE + 231, 17, 2, "INCUOTA");
    fields[21] = fieldINFECPAGO =
    new DecimalField(message, HEADERSIZE + 248, 9, 0, "INFECPAGO");
    fields[22] = fieldINPAGPEND =
    new DecimalField(message, HEADERSIZE + 257, 4, 0, "INPAGPEND");
    fields[23] = fieldINCREDITO =
    new DecimalField(message, HEADERSIZE + 261, 13, 0, "INCREDITO");
    fields[24] = fieldINSALDCAP =
    new DecimalField(message, HEADERSIZE + 274, 17, 2, "INSALDCAP");
    fields[25] = fieldINSALDANT =
    new DecimalField(message, HEADERSIZE + 291, 17, 2, "INSALDANT");
    fields[26] = fieldINFECONT =
    new DecimalField(message, HEADERSIZE + 308, 9, 0, "INFECONT");
    fields[27] = fieldINFEULTPAG =
    new DecimalField(message, HEADERSIZE + 317, 9, 0, "INFEULTPAG");
    fields[28] = fieldINIMULTPAG =
    new DecimalField(message, HEADERSIZE + 326, 17, 2, "INIMULTPAG");
    fields[29] = fieldINSALDTOT =
    new DecimalField(message, HEADERSIZE + 343, 17, 2, "INSALDTOT");
    fields[30] = fieldINSALDVENC =
    new DecimalField(message, HEADERSIZE + 360, 17, 2, "INSALDVENC");
    fields[31] = fieldINCOMPTJE =
    new DecimalField(message, HEADERSIZE + 377, 11, 6, "INCOMPTJE");
    fields[32] = fieldINFACSEG =
    new DecimalField(message, HEADERSIZE + 388, 11, 6, "INFACSEG");
    fields[33] = fieldINFOLAUD =
    new DecimalField(message, HEADERSIZE + 399, 10, 0, "INFOLAUD");
    fields[34] = fieldINCORRE =
    new CharacterField(message, HEADERSIZE + 409, 45, "INCORRE");

    synchronized (tlookup)
    {
      if (tlookup.isEmpty())
      {
        for (int i = 0; i < tnames.length; i++)
          tlookup.put(tnames[i], new Integer(i));
      }
    }

    taglookup = tlookup;
  }

  /**
  * Set field INTOPE using a String value.
  */
  public void setINTOPE(String newvalue)
  {
    fieldINTOPE.setString(newvalue);
  }

  /**
  * Get value of field INTOPE as a String.
  */
  public String getINTOPE()
  {
    return fieldINTOPE.getString();
  }

  /**
  * Set field INTUSR using a String value.
  */
  public void setINTUSR(String newvalue)
  {
    fieldINTUSR.setString(newvalue);
  }

  /**
  * Get value of field INTUSR as a String.
  */
  public String getINTUSR()
  {
    return fieldINTUSR.getString();
  }

  /**
  * Set field INTREF using a String value.
  */
  public void setINTREF(String newvalue)
  {
    fieldINTREF.setString(newvalue);
  }

  /**
  * Get value of field INTREF as a String.
  */
  public String getINTREF()
  {
    return fieldINTREF.getString();
  }

  /**
  * Set field INTXPMTV using a String value.
  */
  public void setINTXPMTV(String newvalue)
  {
    fieldINTXPMTV.setString(newvalue);
  }

  /**
  * Get value of field INTXPMTV as a String.
  */
  public String getINTXPMTV()
  {
    return fieldINTXPMTV.getString();
  }

  /**
  * Set field INTFECHA using a String value.
  */
  public void setINTFECHA(String newvalue)
  {
    fieldINTFECHA.setString(newvalue);
  }

  /**
  * Get value of field INTFECHA as a String.
  */
  public String getINTFECHA()
  {
    return fieldINTFECHA.getString();
  }

  /**
  * Set numeric field INTFECHA using a BigDecimal value.
  */
  public void setINTFECHA(BigDecimal newvalue)
  {
    fieldINTFECHA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTFECHA as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTFECHA()
  {
    return fieldINTFECHA.getBigDecimal();
  }

  /**
  * Set field INTHORA using a String value.
  */
  public void setINTHORA(String newvalue)
  {
    fieldINTHORA.setString(newvalue);
  }

  /**
  * Get value of field INTHORA as a String.
  */
  public String getINTHORA()
  {
    return fieldINTHORA.getString();
  }

  /**
  * Set numeric field INTHORA using a BigDecimal value.
  */
  public void setINTHORA(BigDecimal newvalue)
  {
    fieldINTHORA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTHORA as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTHORA()
  {
    return fieldINTHORA.getBigDecimal();
  }

  /**
  * Set field INCUENTA using a String value.
  */
  public void setINCUENTA(String newvalue)
  {
    fieldINCUENTA.setString(newvalue);
  }

  /**
  * Get value of field INCUENTA as a String.
  */
  public String getINCUENTA()
  {
    return fieldINCUENTA.getString();
  }

  /**
  * Set numeric field INCUENTA using a BigDecimal value.
  */
  public void setINCUENTA(BigDecimal newvalue)
  {
    fieldINCUENTA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCUENTA as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCUENTA()
  {
    return fieldINCUENTA.getBigDecimal();
  }

  /**
  * Set field INUSUARIO using a String value.
  */
  public void setINUSUARIO(String newvalue)
  {
    fieldINUSUARIO.setString(newvalue);
  }

  /**
  * Get value of field INUSUARIO as a String.
  */
  public String getINUSUARIO()
  {
    return fieldINUSUARIO.getString();
  }

  /**
  * Set field INCLIENTE using a String value.
  */
  public void setINCLIENTE(String newvalue)
  {
    fieldINCLIENTE.setString(newvalue);
  }

  /**
  * Get value of field INCLIENTE as a String.
  */
  public String getINCLIENTE()
  {
    return fieldINCLIENTE.getString();
  }

  /**
  * Set numeric field INCLIENTE using a BigDecimal value.
  */
  public void setINCLIENTE(BigDecimal newvalue)
  {
    fieldINCLIENTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCLIENTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCLIENTE()
  {
    return fieldINCLIENTE.getBigDecimal();
  }

  /**
  * Set field INLINAUT using a String value.
  */
  public void setINLINAUT(String newvalue)
  {
    fieldINLINAUT.setString(newvalue);
  }

  /**
  * Get value of field INLINAUT as a String.
  */
  public String getINLINAUT()
  {
    return fieldINLINAUT.getString();
  }

  /**
  * Set numeric field INLINAUT using a BigDecimal value.
  */
  public void setINLINAUT(BigDecimal newvalue)
  {
    fieldINLINAUT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INLINAUT as a BigDecimal.
  */
  public BigDecimal getBigDecimalINLINAUT()
  {
    return fieldINLINAUT.getBigDecimal();
  }

  /**
  * Set field INCREDOTOR using a String value.
  */
  public void setINCREDOTOR(String newvalue)
  {
    fieldINCREDOTOR.setString(newvalue);
  }

  /**
  * Get value of field INCREDOTOR as a String.
  */
  public String getINCREDOTOR()
  {
    return fieldINCREDOTOR.getString();
  }

  /**
  * Set numeric field INCREDOTOR using a BigDecimal value.
  */
  public void setINCREDOTOR(BigDecimal newvalue)
  {
    fieldINCREDOTOR.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCREDOTOR as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCREDOTOR()
  {
    return fieldINCREDOTOR.getBigDecimal();
  }

  /**
  * Set field INCREDISP using a String value.
  */
  public void setINCREDISP(String newvalue)
  {
    fieldINCREDISP.setString(newvalue);
  }

  /**
  * Get value of field INCREDISP as a String.
  */
  public String getINCREDISP()
  {
    return fieldINCREDISP.getString();
  }

  /**
  * Set numeric field INCREDISP using a BigDecimal value.
  */
  public void setINCREDISP(BigDecimal newvalue)
  {
    fieldINCREDISP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCREDISP as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCREDISP()
  {
    return fieldINCREDISP.getBigDecimal();
  }

  /**
  * Set field INIMPORTE using a String value.
  */
  public void setINIMPORTE(String newvalue)
  {
    fieldINIMPORTE.setString(newvalue);
  }

  /**
  * Get value of field INIMPORTE as a String.
  */
  public String getINIMPORTE()
  {
    return fieldINIMPORTE.getString();
  }

  /**
  * Set numeric field INIMPORTE using a BigDecimal value.
  */
  public void setINIMPORTE(BigDecimal newvalue)
  {
    fieldINIMPORTE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INIMPORTE as a BigDecimal.
  */
  public BigDecimal getBigDecimalINIMPORTE()
  {
    return fieldINIMPORTE.getBigDecimal();
  }

  /**
  * Set field INTASA using a String value.
  */
  public void setINTASA(String newvalue)
  {
    fieldINTASA.setString(newvalue);
  }

  /**
  * Get value of field INTASA as a String.
  */
  public String getINTASA()
  {
    return fieldINTASA.getString();
  }

  /**
  * Set numeric field INTASA using a BigDecimal value.
  */
  public void setINTASA(BigDecimal newvalue)
  {
    fieldINTASA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INTASA as a BigDecimal.
  */
  public BigDecimal getBigDecimalINTASA()
  {
    return fieldINTASA.getBigDecimal();
  }

  /**
  * Set field INMORA using a String value.
  */
  public void setINMORA(String newvalue)
  {
    fieldINMORA.setString(newvalue);
  }

  /**
  * Get value of field INMORA as a String.
  */
  public String getINMORA()
  {
    return fieldINMORA.getString();
  }

  /**
  * Set numeric field INMORA using a BigDecimal value.
  */
  public void setINMORA(BigDecimal newvalue)
  {
    fieldINMORA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INMORA as a BigDecimal.
  */
  public BigDecimal getBigDecimalINMORA()
  {
    return fieldINMORA.getBigDecimal();
  }

  /**
  * Set field INCOMIS using a String value.
  */
  public void setINCOMIS(String newvalue)
  {
    fieldINCOMIS.setString(newvalue);
  }

  /**
  * Get value of field INCOMIS as a String.
  */
  public String getINCOMIS()
  {
    return fieldINCOMIS.getString();
  }

  /**
  * Set numeric field INCOMIS using a BigDecimal value.
  */
  public void setINCOMIS(BigDecimal newvalue)
  {
    fieldINCOMIS.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCOMIS as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCOMIS()
  {
    return fieldINCOMIS.getBigDecimal();
  }

  /**
  * Set field INIVACOM using a String value.
  */
  public void setINIVACOM(String newvalue)
  {
    fieldINIVACOM.setString(newvalue);
  }

  /**
  * Get value of field INIVACOM as a String.
  */
  public String getINIVACOM()
  {
    return fieldINIVACOM.getString();
  }

  /**
  * Set numeric field INIVACOM using a BigDecimal value.
  */
  public void setINIVACOM(BigDecimal newvalue)
  {
    fieldINIVACOM.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INIVACOM as a BigDecimal.
  */
  public BigDecimal getBigDecimalINIVACOM()
  {
    return fieldINIVACOM.getBigDecimal();
  }

  /**
  * Set field INSEGURO using a String value.
  */
  public void setINSEGURO(String newvalue)
  {
    fieldINSEGURO.setString(newvalue);
  }

  /**
  * Get value of field INSEGURO as a String.
  */
  public String getINSEGURO()
  {
    return fieldINSEGURO.getString();
  }

  /**
  * Set numeric field INSEGURO using a BigDecimal value.
  */
  public void setINSEGURO(BigDecimal newvalue)
  {
    fieldINSEGURO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INSEGURO as a BigDecimal.
  */
  public BigDecimal getBigDecimalINSEGURO()
  {
    return fieldINSEGURO.getBigDecimal();
  }

  /**
  * Set field INPLAZO using a String value.
  */
  public void setINPLAZO(String newvalue)
  {
    fieldINPLAZO.setString(newvalue);
  }

  /**
  * Get value of field INPLAZO as a String.
  */
  public String getINPLAZO()
  {
    return fieldINPLAZO.getString();
  }

  /**
  * Set numeric field INPLAZO using a BigDecimal value.
  */
  public void setINPLAZO(BigDecimal newvalue)
  {
    fieldINPLAZO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INPLAZO as a BigDecimal.
  */
  public BigDecimal getBigDecimalINPLAZO()
  {
    return fieldINPLAZO.getBigDecimal();
  }

  /**
  * Set field INCAT using a String value.
  */
  public void setINCAT(String newvalue)
  {
    fieldINCAT.setString(newvalue);
  }

  /**
  * Get value of field INCAT as a String.
  */
  public String getINCAT()
  {
    return fieldINCAT.getString();
  }

  /**
  * Set numeric field INCAT using a BigDecimal value.
  */
  public void setINCAT(BigDecimal newvalue)
  {
    fieldINCAT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCAT as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCAT()
  {
    return fieldINCAT.getBigDecimal();
  }

  /**
  * Set field INCUOTA using a String value.
  */
  public void setINCUOTA(String newvalue)
  {
    fieldINCUOTA.setString(newvalue);
  }

  /**
  * Get value of field INCUOTA as a String.
  */
  public String getINCUOTA()
  {
    return fieldINCUOTA.getString();
  }

  /**
  * Set numeric field INCUOTA using a BigDecimal value.
  */
  public void setINCUOTA(BigDecimal newvalue)
  {
    fieldINCUOTA.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCUOTA as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCUOTA()
  {
    return fieldINCUOTA.getBigDecimal();
  }

  /**
  * Set field INFECPAGO using a String value.
  */
  public void setINFECPAGO(String newvalue)
  {
    fieldINFECPAGO.setString(newvalue);
  }

  /**
  * Get value of field INFECPAGO as a String.
  */
  public String getINFECPAGO()
  {
    return fieldINFECPAGO.getString();
  }

  /**
  * Set numeric field INFECPAGO using a BigDecimal value.
  */
  public void setINFECPAGO(BigDecimal newvalue)
  {
    fieldINFECPAGO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INFECPAGO as a BigDecimal.
  */
  public BigDecimal getBigDecimalINFECPAGO()
  {
    return fieldINFECPAGO.getBigDecimal();
  }

  /**
  * Set field INPAGPEND using a String value.
  */
  public void setINPAGPEND(String newvalue)
  {
    fieldINPAGPEND.setString(newvalue);
  }

  /**
  * Get value of field INPAGPEND as a String.
  */
  public String getINPAGPEND()
  {
    return fieldINPAGPEND.getString();
  }

  /**
  * Set numeric field INPAGPEND using a BigDecimal value.
  */
  public void setINPAGPEND(BigDecimal newvalue)
  {
    fieldINPAGPEND.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INPAGPEND as a BigDecimal.
  */
  public BigDecimal getBigDecimalINPAGPEND()
  {
    return fieldINPAGPEND.getBigDecimal();
  }

  /**
  * Set field INCREDITO using a String value.
  */
  public void setINCREDITO(String newvalue)
  {
    fieldINCREDITO.setString(newvalue);
  }

  /**
  * Get value of field INCREDITO as a String.
  */
  public String getINCREDITO()
  {
    return fieldINCREDITO.getString();
  }

  /**
  * Set numeric field INCREDITO using a BigDecimal value.
  */
  public void setINCREDITO(BigDecimal newvalue)
  {
    fieldINCREDITO.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCREDITO as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCREDITO()
  {
    return fieldINCREDITO.getBigDecimal();
  }

  /**
  * Set field INSALDCAP using a String value.
  */
  public void setINSALDCAP(String newvalue)
  {
    fieldINSALDCAP.setString(newvalue);
  }

  /**
  * Get value of field INSALDCAP as a String.
  */
  public String getINSALDCAP()
  {
    return fieldINSALDCAP.getString();
  }

  /**
  * Set numeric field INSALDCAP using a BigDecimal value.
  */
  public void setINSALDCAP(BigDecimal newvalue)
  {
    fieldINSALDCAP.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INSALDCAP as a BigDecimal.
  */
  public BigDecimal getBigDecimalINSALDCAP()
  {
    return fieldINSALDCAP.getBigDecimal();
  }

  /**
  * Set field INSALDANT using a String value.
  */
  public void setINSALDANT(String newvalue)
  {
    fieldINSALDANT.setString(newvalue);
  }

  /**
  * Get value of field INSALDANT as a String.
  */
  public String getINSALDANT()
  {
    return fieldINSALDANT.getString();
  }

  /**
  * Set numeric field INSALDANT using a BigDecimal value.
  */
  public void setINSALDANT(BigDecimal newvalue)
  {
    fieldINSALDANT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INSALDANT as a BigDecimal.
  */
  public BigDecimal getBigDecimalINSALDANT()
  {
    return fieldINSALDANT.getBigDecimal();
  }

  /**
  * Set field INFECONT using a String value.
  */
  public void setINFECONT(String newvalue)
  {
    fieldINFECONT.setString(newvalue);
  }

  /**
  * Get value of field INFECONT as a String.
  */
  public String getINFECONT()
  {
    return fieldINFECONT.getString();
  }

  /**
  * Set numeric field INFECONT using a BigDecimal value.
  */
  public void setINFECONT(BigDecimal newvalue)
  {
    fieldINFECONT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INFECONT as a BigDecimal.
  */
  public BigDecimal getBigDecimalINFECONT()
  {
    return fieldINFECONT.getBigDecimal();
  }

  /**
  * Set field INFEULTPAG using a String value.
  */
  public void setINFEULTPAG(String newvalue)
  {
    fieldINFEULTPAG.setString(newvalue);
  }

  /**
  * Get value of field INFEULTPAG as a String.
  */
  public String getINFEULTPAG()
  {
    return fieldINFEULTPAG.getString();
  }

  /**
  * Set numeric field INFEULTPAG using a BigDecimal value.
  */
  public void setINFEULTPAG(BigDecimal newvalue)
  {
    fieldINFEULTPAG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INFEULTPAG as a BigDecimal.
  */
  public BigDecimal getBigDecimalINFEULTPAG()
  {
    return fieldINFEULTPAG.getBigDecimal();
  }

  /**
  * Set field INIMULTPAG using a String value.
  */
  public void setINIMULTPAG(String newvalue)
  {
    fieldINIMULTPAG.setString(newvalue);
  }

  /**
  * Get value of field INIMULTPAG as a String.
  */
  public String getINIMULTPAG()
  {
    return fieldINIMULTPAG.getString();
  }

  /**
  * Set numeric field INIMULTPAG using a BigDecimal value.
  */
  public void setINIMULTPAG(BigDecimal newvalue)
  {
    fieldINIMULTPAG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INIMULTPAG as a BigDecimal.
  */
  public BigDecimal getBigDecimalINIMULTPAG()
  {
    return fieldINIMULTPAG.getBigDecimal();
  }

  /**
  * Set field INSALDTOT using a String value.
  */
  public void setINSALDTOT(String newvalue)
  {
    fieldINSALDTOT.setString(newvalue);
  }

  /**
  * Get value of field INSALDTOT as a String.
  */
  public String getINSALDTOT()
  {
    return fieldINSALDTOT.getString();
  }

  /**
  * Set numeric field INSALDTOT using a BigDecimal value.
  */
  public void setINSALDTOT(BigDecimal newvalue)
  {
    fieldINSALDTOT.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INSALDTOT as a BigDecimal.
  */
  public BigDecimal getBigDecimalINSALDTOT()
  {
    return fieldINSALDTOT.getBigDecimal();
  }

  /**
  * Set field INSALDVENC using a String value.
  */
  public void setINSALDVENC(String newvalue)
  {
    fieldINSALDVENC.setString(newvalue);
  }

  /**
  * Get value of field INSALDVENC as a String.
  */
  public String getINSALDVENC()
  {
    return fieldINSALDVENC.getString();
  }

  /**
  * Set numeric field INSALDVENC using a BigDecimal value.
  */
  public void setINSALDVENC(BigDecimal newvalue)
  {
    fieldINSALDVENC.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INSALDVENC as a BigDecimal.
  */
  public BigDecimal getBigDecimalINSALDVENC()
  {
    return fieldINSALDVENC.getBigDecimal();
  }

  /**
  * Set field INCOMPTJE using a String value.
  */
  public void setINCOMPTJE(String newvalue)
  {
    fieldINCOMPTJE.setString(newvalue);
  }

  /**
  * Get value of field INCOMPTJE as a String.
  */
  public String getINCOMPTJE()
  {
    return fieldINCOMPTJE.getString();
  }

  /**
  * Set numeric field INCOMPTJE using a BigDecimal value.
  */
  public void setINCOMPTJE(BigDecimal newvalue)
  {
    fieldINCOMPTJE.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INCOMPTJE as a BigDecimal.
  */
  public BigDecimal getBigDecimalINCOMPTJE()
  {
    return fieldINCOMPTJE.getBigDecimal();
  }

  /**
  * Set field INFACSEG using a String value.
  */
  public void setINFACSEG(String newvalue)
  {
    fieldINFACSEG.setString(newvalue);
  }

  /**
  * Get value of field INFACSEG as a String.
  */
  public String getINFACSEG()
  {
    return fieldINFACSEG.getString();
  }

  /**
  * Set numeric field INFACSEG using a BigDecimal value.
  */
  public void setINFACSEG(BigDecimal newvalue)
  {
    fieldINFACSEG.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INFACSEG as a BigDecimal.
  */
  public BigDecimal getBigDecimalINFACSEG()
  {
    return fieldINFACSEG.getBigDecimal();
  }

  /**
  * Set field INFOLAUD using a String value.
  */
  public void setINFOLAUD(String newvalue)
  {
    fieldINFOLAUD.setString(newvalue);
  }

  /**
  * Get value of field INFOLAUD as a String.
  */
  public String getINFOLAUD()
  {
    return fieldINFOLAUD.getString();
  }

  /**
  * Set numeric field INFOLAUD using a BigDecimal value.
  */
  public void setINFOLAUD(BigDecimal newvalue)
  {
    fieldINFOLAUD.setBigDecimal(newvalue);
  }

  /**
  * Return value of numeric field INFOLAUD as a BigDecimal.
  */
  public BigDecimal getBigDecimalINFOLAUD()
  {
    return fieldINFOLAUD.getBigDecimal();
  }

  /**
  * Set field INCORRE using a String value.
  */
  public void setINCORRE(String newvalue)
  {
    fieldINCORRE.setString(newvalue);
  }

  /**
  * Get value of field INCORRE as a String.
  */
  public String getINCORRE()
  {
    return fieldINCORRE.getString();
  }

}
