package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from IN098201 physical file
 * definition.
 * 
 * File level identifier is 1040430194112. Record format level identifier is
 * 3C9D0E23958D8.
 */
@SuppressWarnings("rawtypes")
public class IN098201Message extends MessageRecord {
	final static String fldnames[] = { "IN982USR1", "IN982FACC", "IN982TACC",
			"INT982AMT", "INT982DTP", "INT982DTP1", "INT982DTP2", "INTVDT1",
			"INTVDT2", "INTVDT3", "INTTIN", "INTTIF", "INTREF", "INTTRFCCY",
			"INTBNKFRM", "INTBRNFRM", "INTFRMATY", "INTXPMTV", "INTDSC",
			"INTBNKCOD", "INTBRNCOD", "INTBNFACC", "INTACCTYP", "INTBNFAD1",
			"INTCOM", "INTIVC", "INTRFC", "INTTSC", "INTTSA", "INTTSP",
			"INTDRBNK", "INTDRBRN", "INTDRCCY", "INTDRGLN", "INTDRACC",
			"INTCRBNK", "INTCRBRN", "INTCRCCY", "INTCRGLN", "INTCRACC",
			"INTUS1", "INTUS2", "INTUS3" };
	final static String tnames[] = { "IN982USR1", "IN982FACC", "IN982TACC",
			"INT982AMT", "INT982DTP", "INT982DTP1", "INT982DTP2", "INTVDT1",
			"INTVDT2", "INTVDT3", "INTTIN", "INTTIF", "INTREF", "INTTRFCCY",
			"INTBNKFRM", "INTBRNFRM", "INTFRMATY", "INTXPMTV", "INTDSC",
			"INTBNKCOD", "INTBRNCOD", "INTBNFACC", "INTACCTYP", "INTBNFAD1",
			"INTCOM", "INTIVC", "INTRFC", "INTTSC", "INTTSA", "INTTSP",
			"INTDRBNK", "INTDRBRN", "INTDRCCY", "INTDRGLN", "INTDRACC",
			"INTCRBNK", "INTCRBRN", "INTCRCCY", "INTCRGLN", "INTCRACC",
			"INTUS1", "INTUS2", "INTUS3" };
	final static String fid = "1040430194112";
	final static String rid = "3C9D0E23958D8";
	final static String fmtname = "IN098201";
	final int FIELDCOUNT = 43;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldIN982USR1 = null;
	private DecimalField fieldIN982FACC = null;
	private DecimalField fieldIN982TACC = null;
	private DecimalField fieldINT982AMT = null;
	private CharacterField fieldINT982DTP = null;
	private CharacterField fieldINT982DTP1 = null;
	private CharacterField fieldINT982DTP2 = null;
	private DecimalField fieldINTVDT1 = null;
	private DecimalField fieldINTVDT2 = null;
	private DecimalField fieldINTVDT3 = null;
	private DecimalField fieldINTTIN = null;
	private DecimalField fieldINTTIF = null;
	private CharacterField fieldINTREF = null;
	private CharacterField fieldINTTRFCCY = null;
	private DecimalField fieldINTBNKFRM = null;
	private DecimalField fieldINTBRNFRM = null;
	private DecimalField fieldINTFRMATY = null;
	private CharacterField fieldINTXPMTV = null;
	private CharacterField fieldINTDSC = null;
	private DecimalField fieldINTBNKCOD = null;
	private DecimalField fieldINTBRNCOD = null;
	private CharacterField fieldINTBNFACC = null;
	private DecimalField fieldINTACCTYP = null;
	private CharacterField fieldINTBNFAD1 = null;
	private DecimalField fieldINTCOM = null;
	private DecimalField fieldINTIVC = null;
	private CharacterField fieldINTRFC = null;
	private DecimalField fieldINTTSC = null;
	private DecimalField fieldINTTSA = null;
	private DecimalField fieldINTTSP = null;
	private CharacterField fieldINTDRBNK = null;
	private DecimalField fieldINTDRBRN = null;
	private CharacterField fieldINTDRCCY = null;
	private DecimalField fieldINTDRGLN = null;
	private DecimalField fieldINTDRACC = null;
	private CharacterField fieldINTCRBNK = null;
	private DecimalField fieldINTCRBRN = null;
	private CharacterField fieldINTCRCCY = null;
	private DecimalField fieldINTCRGLN = null;
	private DecimalField fieldINTCRACC = null;
	private CharacterField fieldINTUS1 = null;
	private CharacterField fieldINTUS2 = null;
	private CharacterField fieldINTUS3 = null;

	/**
	 * Constructor for IN098201Message.
	 */
	public IN098201Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 509;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldIN982USR1 = new CharacterField(message,
				HEADERSIZE + 0, 10, "IN982USR1");
		fields[1] = fieldIN982FACC = new DecimalField(message, HEADERSIZE + 10,
				13, 0, "IN982FACC");
		fields[2] = fieldIN982TACC = new DecimalField(message, HEADERSIZE + 23,
				13, 0, "IN982TACC");
		fields[3] = fieldINT982AMT = new DecimalField(message, HEADERSIZE + 36,
				15, 2, "INT982AMT");
		fields[4] = fieldINT982DTP = new CharacterField(message,
				HEADERSIZE + 51, 30, "INT982DTP");
		fields[5] = fieldINT982DTP1 = new CharacterField(message,
				HEADERSIZE + 81, 30, "INT982DTP1");
		fields[6] = fieldINT982DTP2 = new CharacterField(message,
				HEADERSIZE + 111, 30, "INT982DTP2");
		fields[7] = fieldINTVDT1 = new DecimalField(message, HEADERSIZE + 141,
				3, 0, "INTVDT1");
		fields[8] = fieldINTVDT2 = new DecimalField(message, HEADERSIZE + 144,
				3, 0, "INTVDT2");
		fields[9] = fieldINTVDT3 = new DecimalField(message, HEADERSIZE + 147,
				3, 0, "INTVDT3");
		fields[10] = fieldINTTIN = new DecimalField(message, HEADERSIZE + 150,
				7, 0, "INTTIN");
		fields[11] = fieldINTTIF = new DecimalField(message, HEADERSIZE + 157,
				7, 0, "INTTIF");
		fields[12] = fieldINTREF = new CharacterField(message,
				HEADERSIZE + 164, 12, "INTREF");
		fields[13] = fieldINTTRFCCY = new CharacterField(message,
				HEADERSIZE + 176, 3, "INTTRFCCY");
		fields[14] = fieldINTBNKFRM = new DecimalField(message,
				HEADERSIZE + 179, 5, 0, "INTBNKFRM");
		fields[15] = fieldINTBRNFRM = new DecimalField(message,
				HEADERSIZE + 184, 6, 0, "INTBRNFRM");
		fields[16] = fieldINTFRMATY = new DecimalField(message,
				HEADERSIZE + 190, 3, 0, "INTFRMATY");
		fields[17] = fieldINTXPMTV = new CharacterField(message,
				HEADERSIZE + 193, 2, "INTXPMTV");
		fields[18] = fieldINTDSC = new CharacterField(message,
				HEADERSIZE + 195, 45, "INTDSC");
		fields[19] = fieldINTBNKCOD = new DecimalField(message,
				HEADERSIZE + 240, 5, 0, "INTBNKCOD");
		fields[20] = fieldINTBRNCOD = new DecimalField(message,
				HEADERSIZE + 245, 6, 0, "INTBRNCOD");
		fields[21] = fieldINTBNFACC = new CharacterField(message,
				HEADERSIZE + 251, 20, "INTBNFACC");
		fields[22] = fieldINTACCTYP = new DecimalField(message,
				HEADERSIZE + 271, 3, 0, "INTACCTYP");
		fields[23] = fieldINTBNFAD1 = new CharacterField(message,
				HEADERSIZE + 274, 40, "INTBNFAD1");
		fields[24] = fieldINTCOM = new DecimalField(message, HEADERSIZE + 314,
				15, 2, "INTCOM");
		fields[25] = fieldINTIVC = new DecimalField(message, HEADERSIZE + 329,
				15, 2, "INTIVC");
		fields[26] = fieldINTRFC = new CharacterField(message,
				HEADERSIZE + 344, 18, "INTRFC");
		fields[27] = fieldINTTSC = new DecimalField(message, HEADERSIZE + 362,
				13, 0, "INTTSC");
		fields[28] = fieldINTTSA = new DecimalField(message, HEADERSIZE + 375,
				13, 0, "INTTSA");
		fields[29] = fieldINTTSP = new DecimalField(message, HEADERSIZE + 388,
				13, 0, "INTTSP");
		fields[30] = fieldINTDRBNK = new CharacterField(message,
				HEADERSIZE + 401, 2, "INTDRBNK");
		fields[31] = fieldINTDRBRN = new DecimalField(message,
				HEADERSIZE + 403, 4, 0, "INTDRBRN");
		fields[32] = fieldINTDRCCY = new CharacterField(message,
				HEADERSIZE + 407, 3, "INTDRCCY");
		fields[33] = fieldINTDRGLN = new DecimalField(message,
				HEADERSIZE + 410, 17, 0, "INTDRGLN");
		fields[34] = fieldINTDRACC = new DecimalField(message,
				HEADERSIZE + 427, 13, 0, "INTDRACC");
		fields[35] = fieldINTCRBNK = new CharacterField(message,
				HEADERSIZE + 440, 2, "INTCRBNK");
		fields[36] = fieldINTCRBRN = new DecimalField(message,
				HEADERSIZE + 442, 4, 0, "INTCRBRN");
		fields[37] = fieldINTCRCCY = new CharacterField(message,
				HEADERSIZE + 446, 3, "INTCRCCY");
		fields[38] = fieldINTCRGLN = new DecimalField(message,
				HEADERSIZE + 449, 17, 0, "INTCRGLN");
		fields[39] = fieldINTCRACC = new DecimalField(message,
				HEADERSIZE + 466, 13, 0, "INTCRACC");
		fields[40] = fieldINTUS1 = new CharacterField(message,
				HEADERSIZE + 479, 10, "INTUS1");
		fields[41] = fieldINTUS2 = new CharacterField(message,
				HEADERSIZE + 489, 10, "INTUS2");
		fields[42] = fieldINTUS3 = new CharacterField(message,
				HEADERSIZE + 499, 10, "INTUS3");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field IN982USR1 using a String value.
	 */
	public void setIN982USR1(String newvalue) {
		fieldIN982USR1.setString(newvalue);
	}

	/**
	 * Get value of field IN982USR1 as a String.
	 */
	public String getIN982USR1() {
		return fieldIN982USR1.getString();
	}

	/**
	 * Set field IN982FACC using a String value.
	 */
	public void setIN982FACC(String newvalue) {
		fieldIN982FACC.setString(newvalue);
	}

	/**
	 * Get value of field IN982FACC as a String.
	 */
	public String getIN982FACC() {
		return fieldIN982FACC.getString();
	}

	/**
	 * Set numeric field IN982FACC using a BigDecimal value.
	 */
	public void setIN982FACC(BigDecimal newvalue) {
		fieldIN982FACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN982FACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN982FACC() {
		return fieldIN982FACC.getBigDecimal();
	}

	/**
	 * Set field IN982TACC using a String value.
	 */
	public void setIN982TACC(String newvalue) {
		fieldIN982TACC.setString(newvalue);
	}

	/**
	 * Get value of field IN982TACC as a String.
	 */
	public String getIN982TACC() {
		return fieldIN982TACC.getString();
	}

	/**
	 * Set numeric field IN982TACC using a BigDecimal value.
	 */
	public void setIN982TACC(BigDecimal newvalue) {
		fieldIN982TACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN982TACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN982TACC() {
		return fieldIN982TACC.getBigDecimal();
	}

	/**
	 * Set field INT982AMT using a String value.
	 */
	public void setINT982AMT(String newvalue) {
		fieldINT982AMT.setString(newvalue);
	}

	/**
	 * Get value of field INT982AMT as a String.
	 */
	public String getINT982AMT() {
		return fieldINT982AMT.getString();
	}

	/**
	 * Set numeric field INT982AMT using a BigDecimal value.
	 */
	public void setINT982AMT(BigDecimal newvalue) {
		fieldINT982AMT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INT982AMT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINT982AMT() {
		return fieldINT982AMT.getBigDecimal();
	}

	/**
	 * Set field INT982DTP using a String value.
	 */
	public void setINT982DTP(String newvalue) {
		fieldINT982DTP.setString(newvalue);
	}

	/**
	 * Get value of field INT982DTP as a String.
	 */
	public String getINT982DTP() {
		return fieldINT982DTP.getString();
	}

	/**
	 * Set field INT982DTP1 using a String value.
	 */
	public void setINT982DTP1(String newvalue) {
		fieldINT982DTP1.setString(newvalue);
	}

	/**
	 * Get value of field INT982DTP1 as a String.
	 */
	public String getINT982DTP1() {
		return fieldINT982DTP1.getString();
	}

	/**
	 * Set field INT982DTP2 using a String value.
	 */
	public void setINT982DTP2(String newvalue) {
		fieldINT982DTP2.setString(newvalue);
	}

	/**
	 * Get value of field INT982DTP2 as a String.
	 */
	public String getINT982DTP2() {
		return fieldINT982DTP2.getString();
	}

	/**
	 * Set field INTVDT1 using a String value.
	 */
	public void setINTVDT1(String newvalue) {
		fieldINTVDT1.setString(newvalue);
	}

	/**
	 * Get value of field INTVDT1 as a String.
	 */
	public String getINTVDT1() {
		return fieldINTVDT1.getString();
	}

	/**
	 * Set numeric field INTVDT1 using a BigDecimal value.
	 */
	public void setINTVDT1(BigDecimal newvalue) {
		fieldINTVDT1.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTVDT1 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTVDT1() {
		return fieldINTVDT1.getBigDecimal();
	}

	/**
	 * Set field INTVDT2 using a String value.
	 */
	public void setINTVDT2(String newvalue) {
		fieldINTVDT2.setString(newvalue);
	}

	/**
	 * Get value of field INTVDT2 as a String.
	 */
	public String getINTVDT2() {
		return fieldINTVDT2.getString();
	}

	/**
	 * Set numeric field INTVDT2 using a BigDecimal value.
	 */
	public void setINTVDT2(BigDecimal newvalue) {
		fieldINTVDT2.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTVDT2 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTVDT2() {
		return fieldINTVDT2.getBigDecimal();
	}

	/**
	 * Set field INTVDT3 using a String value.
	 */
	public void setINTVDT3(String newvalue) {
		fieldINTVDT3.setString(newvalue);
	}

	/**
	 * Get value of field INTVDT3 as a String.
	 */
	public String getINTVDT3() {
		return fieldINTVDT3.getString();
	}

	/**
	 * Set numeric field INTVDT3 using a BigDecimal value.
	 */
	public void setINTVDT3(BigDecimal newvalue) {
		fieldINTVDT3.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTVDT3 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTVDT3() {
		return fieldINTVDT3.getBigDecimal();
	}

	/**
	 * Set field INTTIN using a String value.
	 */
	public void setINTTIN(String newvalue) {
		fieldINTTIN.setString(newvalue);
	}

	/**
	 * Get value of field INTTIN as a String.
	 */
	public String getINTTIN() {
		return fieldINTTIN.getString();
	}

	/**
	 * Set numeric field INTTIN using a BigDecimal value.
	 */
	public void setINTTIN(BigDecimal newvalue) {
		fieldINTTIN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTIN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTIN() {
		return fieldINTTIN.getBigDecimal();
	}

	/**
	 * Set field INTTIF using a String value.
	 */
	public void setINTTIF(String newvalue) {
		fieldINTTIF.setString(newvalue);
	}

	/**
	 * Get value of field INTTIF as a String.
	 */
	public String getINTTIF() {
		return fieldINTTIF.getString();
	}

	/**
	 * Set numeric field INTTIF using a BigDecimal value.
	 */
	public void setINTTIF(BigDecimal newvalue) {
		fieldINTTIF.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTIF as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTIF() {
		return fieldINTTIF.getBigDecimal();
	}

	/**
	 * Set field INTREF using a String value.
	 */
	public void setINTREF(String newvalue) {
		fieldINTREF.setString(newvalue);
	}

	/**
	 * Get value of field INTREF as a String.
	 */
	public String getINTREF() {
		return fieldINTREF.getString();
	}

	/**
	 * Set field INTTRFCCY using a String value.
	 */
	public void setINTTRFCCY(String newvalue) {
		fieldINTTRFCCY.setString(newvalue);
	}

	/**
	 * Get value of field INTTRFCCY as a String.
	 */
	public String getINTTRFCCY() {
		return fieldINTTRFCCY.getString();
	}

	/**
	 * Set field INTBNKFRM using a String value.
	 */
	public void setINTBNKFRM(String newvalue) {
		fieldINTBNKFRM.setString(newvalue);
	}

	/**
	 * Get value of field INTBNKFRM as a String.
	 */
	public String getINTBNKFRM() {
		return fieldINTBNKFRM.getString();
	}

	/**
	 * Set numeric field INTBNKFRM using a BigDecimal value.
	 */
	public void setINTBNKFRM(BigDecimal newvalue) {
		fieldINTBNKFRM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTBNKFRM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTBNKFRM() {
		return fieldINTBNKFRM.getBigDecimal();
	}

	/**
	 * Set field INTBRNFRM using a String value.
	 */
	public void setINTBRNFRM(String newvalue) {
		fieldINTBRNFRM.setString(newvalue);
	}

	/**
	 * Get value of field INTBRNFRM as a String.
	 */
	public String getINTBRNFRM() {
		return fieldINTBRNFRM.getString();
	}

	/**
	 * Set numeric field INTBRNFRM using a BigDecimal value.
	 */
	public void setINTBRNFRM(BigDecimal newvalue) {
		fieldINTBRNFRM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTBRNFRM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTBRNFRM() {
		return fieldINTBRNFRM.getBigDecimal();
	}

	/**
	 * Set field INTFRMATY using a String value.
	 */
	public void setINTFRMATY(String newvalue) {
		fieldINTFRMATY.setString(newvalue);
	}

	/**
	 * Get value of field INTFRMATY as a String.
	 */
	public String getINTFRMATY() {
		return fieldINTFRMATY.getString();
	}

	/**
	 * Set numeric field INTFRMATY using a BigDecimal value.
	 */
	public void setINTFRMATY(BigDecimal newvalue) {
		fieldINTFRMATY.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTFRMATY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTFRMATY() {
		return fieldINTFRMATY.getBigDecimal();
	}

	/**
	 * Set field INTXPMTV using a String value.
	 */
	public void setINTXPMTV(String newvalue) {
		fieldINTXPMTV.setString(newvalue);
	}

	/**
	 * Get value of field INTXPMTV as a String.
	 */
	public String getINTXPMTV() {
		return fieldINTXPMTV.getString();
	}

	/**
	 * Set field INTDSC using a String value.
	 */
	public void setINTDSC(String newvalue) {
		fieldINTDSC.setString(newvalue);
	}

	/**
	 * Get value of field INTDSC as a String.
	 */
	public String getINTDSC() {
		return fieldINTDSC.getString();
	}

	/**
	 * Set field INTBNKCOD using a String value.
	 */
	public void setINTBNKCOD(String newvalue) {
		fieldINTBNKCOD.setString(newvalue);
	}

	/**
	 * Get value of field INTBNKCOD as a String.
	 */
	public String getINTBNKCOD() {
		return fieldINTBNKCOD.getString();
	}

	/**
	 * Set numeric field INTBNKCOD using a BigDecimal value.
	 */
	public void setINTBNKCOD(BigDecimal newvalue) {
		fieldINTBNKCOD.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTBNKCOD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTBNKCOD() {
		return fieldINTBNKCOD.getBigDecimal();
	}

	/**
	 * Set field INTBRNCOD using a String value.
	 */
	public void setINTBRNCOD(String newvalue) {
		fieldINTBRNCOD.setString(newvalue);
	}

	/**
	 * Get value of field INTBRNCOD as a String.
	 */
	public String getINTBRNCOD() {
		return fieldINTBRNCOD.getString();
	}

	/**
	 * Set numeric field INTBRNCOD using a BigDecimal value.
	 */
	public void setINTBRNCOD(BigDecimal newvalue) {
		fieldINTBRNCOD.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTBRNCOD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTBRNCOD() {
		return fieldINTBRNCOD.getBigDecimal();
	}

	/**
	 * Set field INTBNFACC using a String value.
	 */
	public void setINTBNFACC(String newvalue) {
		fieldINTBNFACC.setString(newvalue);
	}

	/**
	 * Get value of field INTBNFACC as a String.
	 */
	public String getINTBNFACC() {
		return fieldINTBNFACC.getString();
	}

	/**
	 * Set field INTACCTYP using a String value.
	 */
	public void setINTACCTYP(String newvalue) {
		fieldINTACCTYP.setString(newvalue);
	}

	/**
	 * Get value of field INTACCTYP as a String.
	 */
	public String getINTACCTYP() {
		return fieldINTACCTYP.getString();
	}

	/**
	 * Set numeric field INTACCTYP using a BigDecimal value.
	 */
	public void setINTACCTYP(BigDecimal newvalue) {
		fieldINTACCTYP.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTACCTYP as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTACCTYP() {
		return fieldINTACCTYP.getBigDecimal();
	}

	/**
	 * Set field INTBNFAD1 using a String value.
	 */
	public void setINTBNFAD1(String newvalue) {
		fieldINTBNFAD1.setString(newvalue);
	}

	/**
	 * Get value of field INTBNFAD1 as a String.
	 */
	public String getINTBNFAD1() {
		return fieldINTBNFAD1.getString();
	}

	/**
	 * Set field INTCOM using a String value.
	 */
	public void setINTCOM(String newvalue) {
		fieldINTCOM.setString(newvalue);
	}

	/**
	 * Get value of field INTCOM as a String.
	 */
	public String getINTCOM() {
		return fieldINTCOM.getString();
	}

	/**
	 * Set numeric field INTCOM using a BigDecimal value.
	 */
	public void setINTCOM(BigDecimal newvalue) {
		fieldINTCOM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTCOM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTCOM() {
		return fieldINTCOM.getBigDecimal();
	}

	/**
	 * Set field INTIVC using a String value.
	 */
	public void setINTIVC(String newvalue) {
		fieldINTIVC.setString(newvalue);
	}

	/**
	 * Get value of field INTIVC as a String.
	 */
	public String getINTIVC() {
		return fieldINTIVC.getString();
	}

	/**
	 * Set numeric field INTIVC using a BigDecimal value.
	 */
	public void setINTIVC(BigDecimal newvalue) {
		fieldINTIVC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTIVC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTIVC() {
		return fieldINTIVC.getBigDecimal();
	}

	/**
	 * Set field INTRFC using a String value.
	 */
	public void setINTRFC(String newvalue) {
		fieldINTRFC.setString(newvalue);
	}

	/**
	 * Get value of field INTRFC as a String.
	 */
	public String getINTRFC() {
		return fieldINTRFC.getString();
	}

	/**
	 * Set field INTTSC using a String value.
	 */
	public void setINTTSC(String newvalue) {
		fieldINTTSC.setString(newvalue);
	}

	/**
	 * Get value of field INTTSC as a String.
	 */
	public String getINTTSC() {
		return fieldINTTSC.getString();
	}

	/**
	 * Set numeric field INTTSC using a BigDecimal value.
	 */
	public void setINTTSC(BigDecimal newvalue) {
		fieldINTTSC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTSC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTSC() {
		return fieldINTTSC.getBigDecimal();
	}

	/**
	 * Set field INTTSA using a String value.
	 */
	public void setINTTSA(String newvalue) {
		fieldINTTSA.setString(newvalue);
	}

	/**
	 * Get value of field INTTSA as a String.
	 */
	public String getINTTSA() {
		return fieldINTTSA.getString();
	}

	/**
	 * Set numeric field INTTSA using a BigDecimal value.
	 */
	public void setINTTSA(BigDecimal newvalue) {
		fieldINTTSA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTSA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTSA() {
		return fieldINTTSA.getBigDecimal();
	}

	/**
	 * Set field INTTSP using a String value.
	 */
	public void setINTTSP(String newvalue) {
		fieldINTTSP.setString(newvalue);
	}

	/**
	 * Get value of field INTTSP as a String.
	 */
	public String getINTTSP() {
		return fieldINTTSP.getString();
	}

	/**
	 * Set numeric field INTTSP using a BigDecimal value.
	 */
	public void setINTTSP(BigDecimal newvalue) {
		fieldINTTSP.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTTSP as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTTSP() {
		return fieldINTTSP.getBigDecimal();
	}

	/**
	 * Set field INTDRBNK using a String value.
	 */
	public void setINTDRBNK(String newvalue) {
		fieldINTDRBNK.setString(newvalue);
	}

	/**
	 * Get value of field INTDRBNK as a String.
	 */
	public String getINTDRBNK() {
		return fieldINTDRBNK.getString();
	}

	/**
	 * Set field INTDRBRN using a String value.
	 */
	public void setINTDRBRN(String newvalue) {
		fieldINTDRBRN.setString(newvalue);
	}

	/**
	 * Get value of field INTDRBRN as a String.
	 */
	public String getINTDRBRN() {
		return fieldINTDRBRN.getString();
	}

	/**
	 * Set numeric field INTDRBRN using a BigDecimal value.
	 */
	public void setINTDRBRN(BigDecimal newvalue) {
		fieldINTDRBRN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTDRBRN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTDRBRN() {
		return fieldINTDRBRN.getBigDecimal();
	}

	/**
	 * Set field INTDRCCY using a String value.
	 */
	public void setINTDRCCY(String newvalue) {
		fieldINTDRCCY.setString(newvalue);
	}

	/**
	 * Get value of field INTDRCCY as a String.
	 */
	public String getINTDRCCY() {
		return fieldINTDRCCY.getString();
	}

	/**
	 * Set field INTDRGLN using a String value.
	 */
	public void setINTDRGLN(String newvalue) {
		fieldINTDRGLN.setString(newvalue);
	}

	/**
	 * Get value of field INTDRGLN as a String.
	 */
	public String getINTDRGLN() {
		return fieldINTDRGLN.getString();
	}

	/**
	 * Set numeric field INTDRGLN using a BigDecimal value.
	 */
	public void setINTDRGLN(BigDecimal newvalue) {
		fieldINTDRGLN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTDRGLN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTDRGLN() {
		return fieldINTDRGLN.getBigDecimal();
	}

	/**
	 * Set field INTDRACC using a String value.
	 */
	public void setINTDRACC(String newvalue) {
		fieldINTDRACC.setString(newvalue);
	}

	/**
	 * Get value of field INTDRACC as a String.
	 */
	public String getINTDRACC() {
		return fieldINTDRACC.getString();
	}

	/**
	 * Set numeric field INTDRACC using a BigDecimal value.
	 */
	public void setINTDRACC(BigDecimal newvalue) {
		fieldINTDRACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTDRACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTDRACC() {
		return fieldINTDRACC.getBigDecimal();
	}

	/**
	 * Set field INTCRBNK using a String value.
	 */
	public void setINTCRBNK(String newvalue) {
		fieldINTCRBNK.setString(newvalue);
	}

	/**
	 * Get value of field INTCRBNK as a String.
	 */
	public String getINTCRBNK() {
		return fieldINTCRBNK.getString();
	}

	/**
	 * Set field INTCRBRN using a String value.
	 */
	public void setINTCRBRN(String newvalue) {
		fieldINTCRBRN.setString(newvalue);
	}

	/**
	 * Get value of field INTCRBRN as a String.
	 */
	public String getINTCRBRN() {
		return fieldINTCRBRN.getString();
	}

	/**
	 * Set numeric field INTCRBRN using a BigDecimal value.
	 */
	public void setINTCRBRN(BigDecimal newvalue) {
		fieldINTCRBRN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTCRBRN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTCRBRN() {
		return fieldINTCRBRN.getBigDecimal();
	}

	/**
	 * Set field INTCRCCY using a String value.
	 */
	public void setINTCRCCY(String newvalue) {
		fieldINTCRCCY.setString(newvalue);
	}

	/**
	 * Get value of field INTCRCCY as a String.
	 */
	public String getINTCRCCY() {
		return fieldINTCRCCY.getString();
	}

	/**
	 * Set field INTCRGLN using a String value.
	 */
	public void setINTCRGLN(String newvalue) {
		fieldINTCRGLN.setString(newvalue);
	}

	/**
	 * Get value of field INTCRGLN as a String.
	 */
	public String getINTCRGLN() {
		return fieldINTCRGLN.getString();
	}

	/**
	 * Set numeric field INTCRGLN using a BigDecimal value.
	 */
	public void setINTCRGLN(BigDecimal newvalue) {
		fieldINTCRGLN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTCRGLN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTCRGLN() {
		return fieldINTCRGLN.getBigDecimal();
	}

	/**
	 * Set field INTCRACC using a String value.
	 */
	public void setINTCRACC(String newvalue) {
		fieldINTCRACC.setString(newvalue);
	}

	/**
	 * Get value of field INTCRACC as a String.
	 */
	public String getINTCRACC() {
		return fieldINTCRACC.getString();
	}

	/**
	 * Set numeric field INTCRACC using a BigDecimal value.
	 */
	public void setINTCRACC(BigDecimal newvalue) {
		fieldINTCRACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTCRACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTCRACC() {
		return fieldINTCRACC.getBigDecimal();
	}

	/**
	 * Set field INTUS1 using a String value.
	 */
	public void setINTUS1(String newvalue) {
		fieldINTUS1.setString(newvalue);
	}

	/**
	 * Get value of field INTUS1 as a String.
	 */
	public String getINTUS1() {
		return fieldINTUS1.getString();
	}

	/**
	 * Set field INTUS2 using a String value.
	 */
	public void setINTUS2(String newvalue) {
		fieldINTUS2.setString(newvalue);
	}

	/**
	 * Get value of field INTUS2 as a String.
	 */
	public String getINTUS2() {
		return fieldINTUS2.getString();
	}

	/**
	 * Set field INTUS3 using a String value.
	 */
	public void setINTUS3(String newvalue) {
		fieldINTUS3.setString(newvalue);
	}

	/**
	 * Get value of field INTUS3 as a String.
	 */
	public String getINTUS3() {
		return fieldINTUS3.getString();
	}

}
