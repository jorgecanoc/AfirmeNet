package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from ANTNOMI01 physical file
 * definition.
 * 
 * File level identifier is 1111011121048. Record format level identifier is
 * 2EE69F1404CFD.
 */
@SuppressWarnings("rawtypes")
public class ANTNOMI01Message extends MessageRecord {
	final static String fldnames[] = { "INTOPE", "INTUSR", "INTREF",
			"INTXPMTV", "INTFECHA", "INTHORA", "INCUENTA", "INUSUARIO",
			"INCLIENTE", "INFREC", "INCODIGO", "INPLAZO", "INIMPORTE",
			"INIMPMIN", "INIMPMAX", "INTASA", "INSEGURO", "INMORA", "INCAT",
			"INCOMIS", "INIVACOM", "INFECPAGO", "INPAGOS", "INCLAVE",
			"INCALIF", "INFOLAUD", "INCORRE" };
	final static String tnames[] = { "INTOPE", "INTUSR", "INTREF", "INTXPMTV",
			"INTFECHA", "INTHORA", "INCUENTA", "INUSUARIO", "INCLIENTE",
			"INFREC", "INCODIGO", "INPLAZO", "INIMPORTE", "INIMPMIN",
			"INIMPMAX", "INTASA", "INSEGURO", "INMORA", "INCAT", "INCOMIS",
			"INIVACOM", "INFECPAGO", "INPAGOS", "INCLAVE", "INCALIF",
			"INFOLAUD", "INCORRE" };
	final static String fid = "1111011121048";
	final static String rid = "2EE69F1404CFD";
	final static String fmtname = "ANTNOMI01";
	final int FIELDCOUNT = 27;

	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldINTOPE = null;
	private CharacterField fieldINTUSR = null;
	private CharacterField fieldINTREF = null;
	private CharacterField fieldINTXPMTV = null;
	private DecimalField fieldINTFECHA = null;
	private DecimalField fieldINTHORA = null;
	private DecimalField fieldINCUENTA = null;
	private CharacterField fieldINUSUARIO = null;
	private DecimalField fieldINCLIENTE = null;
	private CharacterField fieldINFREC = null;
	private CharacterField fieldINCODIGO = null;
	private DecimalField fieldINPLAZO = null;
	private DecimalField fieldINIMPORTE = null;
	private DecimalField fieldINIMPMIN = null;
	private DecimalField fieldINIMPMAX = null;
	private DecimalField fieldINTASA = null;
	private DecimalField fieldINSEGURO = null;
	private DecimalField fieldINMORA = null;
	private DecimalField fieldINCAT = null;
	private DecimalField fieldINCOMIS = null;
	private DecimalField fieldINIVACOM = null;
	private DecimalField fieldINFECPAGO = null;
	private DecimalField fieldINPAGOS = null;
	private CharacterField fieldINCLAVE = null;
	private CharacterField fieldINCALIF = null;
	private DecimalField fieldINFOLAUD = null;
	private CharacterField fieldINCORRE = null;

	/**
	 * Constructor for ANTNOMI01Message.
	 */
	public ANTNOMI01Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 284;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldINTOPE = new CharacterField(message, HEADERSIZE + 0,
				1, "INTOPE");
		fields[1] = fieldINTUSR = new CharacterField(message, HEADERSIZE + 1,
				10, "INTUSR");
		fields[2] = fieldINTREF = new CharacterField(message, HEADERSIZE + 11,
				12, "INTREF");
		fields[3] = fieldINTXPMTV = new CharacterField(message,
				HEADERSIZE + 23, 2, "INTXPMTV");
		fields[4] = fieldINTFECHA = new DecimalField(message, HEADERSIZE + 25,
				9, 0, "INTFECHA");
		fields[5] = fieldINTHORA = new DecimalField(message, HEADERSIZE + 34,
				7, 0, "INTHORA");
		fields[6] = fieldINCUENTA = new DecimalField(message, HEADERSIZE + 41,
				13, 0, "INCUENTA");
		fields[7] = fieldINUSUARIO = new CharacterField(message,
				HEADERSIZE + 54, 10, "INUSUARIO");
		fields[8] = fieldINCLIENTE = new DecimalField(message, HEADERSIZE + 64,
				10, 0, "INCLIENTE");
		fields[9] = fieldINFREC = new CharacterField(message, HEADERSIZE + 74,
				1, "INFREC");
		fields[10] = fieldINCODIGO = new CharacterField(message,
				HEADERSIZE + 75, 1, "INCODIGO");
		fields[11] = fieldINPLAZO = new DecimalField(message, HEADERSIZE + 76,
				4, 0, "INPLAZO");
		fields[12] = fieldINIMPORTE = new DecimalField(message,
				HEADERSIZE + 80, 17, 2, "INIMPORTE");
		fields[13] = fieldINIMPMIN = new DecimalField(message, HEADERSIZE + 97,
				17, 2, "INIMPMIN");
		fields[14] = fieldINIMPMAX = new DecimalField(message,
				HEADERSIZE + 114, 17, 2, "INIMPMAX");
		fields[15] = fieldINTASA = new DecimalField(message, HEADERSIZE + 131,
				11, 6, "INTASA");
		fields[16] = fieldINSEGURO = new DecimalField(message,
				HEADERSIZE + 142, 17, 2, "INSEGURO");
		fields[17] = fieldINMORA = new DecimalField(message, HEADERSIZE + 159,
				11, 6, "INMORA");
		fields[18] = fieldINCAT = new DecimalField(message, HEADERSIZE + 170,
				11, 6, "INCAT");
		fields[19] = fieldINCOMIS = new DecimalField(message, HEADERSIZE + 181,
				17, 2, "INCOMIS");
		fields[20] = fieldINIVACOM = new DecimalField(message,
				HEADERSIZE + 198, 17, 2, "INIVACOM");
		fields[21] = fieldINFECPAGO = new DecimalField(message,
				HEADERSIZE + 215, 9, 0, "INFECPAGO");
		fields[22] = fieldINPAGOS = new DecimalField(message, HEADERSIZE + 224,
				3, 0, "INPAGOS");
		fields[23] = fieldINCLAVE = new CharacterField(message,
				HEADERSIZE + 227, 1, "INCLAVE");
		fields[24] = fieldINCALIF = new CharacterField(message,
				HEADERSIZE + 228, 1, "INCALIF");
		fields[25] = fieldINFOLAUD = new DecimalField(message,
				HEADERSIZE + 229, 10, 0, "INFOLAUD");
		fields[26] = fieldINCORRE = new CharacterField(message,
				HEADERSIZE + 239, 45, "INCORRE");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field INTOPE using a String value.
	 */
	public void setINTOPE(String newvalue) {
		fieldINTOPE.setString(newvalue);
	}

	/**
	 * Get value of field INTOPE as a String.
	 */
	public String getINTOPE() {
		return fieldINTOPE.getString();
	}

	/**
	 * Set field INTUSR using a String value.
	 */
	public void setINTUSR(String newvalue) {
		fieldINTUSR.setString(newvalue);
	}

	/**
	 * Get value of field INTUSR as a String.
	 */
	public String getINTUSR() {
		return fieldINTUSR.getString();
	}

	/**
	 * Set field INTREF using a String value.
	 */
	public void setINTREF(String newvalue) {
		fieldINTREF.setString(newvalue);
	}

	/**
	 * Get value of field INTREF as a String.
	 */
	public String getINTREF() {
		return fieldINTREF.getString();
	}

	/**
	 * Set field INTXPMTV using a String value.
	 */
	public void setINTXPMTV(String newvalue) {
		fieldINTXPMTV.setString(newvalue);
	}

	/**
	 * Get value of field INTXPMTV as a String.
	 */
	public String getINTXPMTV() {
		return fieldINTXPMTV.getString();
	}

	/**
	 * Set field INTFECHA using a String value.
	 */
	public void setINTFECHA(String newvalue) {
		fieldINTFECHA.setString(newvalue);
	}

	/**
	 * Get value of field INTFECHA as a String.
	 */
	public String getINTFECHA() {
		return fieldINTFECHA.getString();
	}

	/**
	 * Set numeric field INTFECHA using a BigDecimal value.
	 */
	public void setINTFECHA(BigDecimal newvalue) {
		fieldINTFECHA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTFECHA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTFECHA() {
		return fieldINTFECHA.getBigDecimal();
	}

	/**
	 * Set field INTHORA using a String value.
	 */
	public void setINTHORA(String newvalue) {
		fieldINTHORA.setString(newvalue);
	}

	/**
	 * Get value of field INTHORA as a String.
	 */
	public String getINTHORA() {
		return fieldINTHORA.getString();
	}

	/**
	 * Set numeric field INTHORA using a BigDecimal value.
	 */
	public void setINTHORA(BigDecimal newvalue) {
		fieldINTHORA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTHORA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTHORA() {
		return fieldINTHORA.getBigDecimal();
	}

	/**
	 * Set field INCUENTA using a String value.
	 */
	public void setINCUENTA(String newvalue) {
		fieldINCUENTA.setString(newvalue);
	}

	/**
	 * Get value of field INCUENTA as a String.
	 */
	public String getINCUENTA() {
		return fieldINCUENTA.getString();
	}

	/**
	 * Set numeric field INCUENTA using a BigDecimal value.
	 */
	public void setINCUENTA(BigDecimal newvalue) {
		fieldINCUENTA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCUENTA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCUENTA() {
		return fieldINCUENTA.getBigDecimal();
	}

	/**
	 * Set field INUSUARIO using a String value.
	 */
	public void setINUSUARIO(String newvalue) {
		fieldINUSUARIO.setString(newvalue);
	}

	/**
	 * Get value of field INUSUARIO as a String.
	 */
	public String getINUSUARIO() {
		return fieldINUSUARIO.getString();
	}

	/**
	 * Set field INCLIENTE using a String value.
	 */
	public void setINCLIENTE(String newvalue) {
		fieldINCLIENTE.setString(newvalue);
	}

	/**
	 * Get value of field INCLIENTE as a String.
	 */
	public String getINCLIENTE() {
		return fieldINCLIENTE.getString();
	}

	/**
	 * Set numeric field INCLIENTE using a BigDecimal value.
	 */
	public void setINCLIENTE(BigDecimal newvalue) {
		fieldINCLIENTE.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCLIENTE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCLIENTE() {
		return fieldINCLIENTE.getBigDecimal();
	}

	/**
	 * Set field INFREC using a String value.
	 */
	public void setINFREC(String newvalue) {
		fieldINFREC.setString(newvalue);
	}

	/**
	 * Get value of field INFREC as a String.
	 */
	public String getINFREC() {
		return fieldINFREC.getString();
	}

	/**
	 * Set field INCODIGO using a String value.
	 */
	public void setINCODIGO(String newvalue) {
		fieldINCODIGO.setString(newvalue);
	}

	/**
	 * Get value of field INCODIGO as a String.
	 */
	public String getINCODIGO() {
		return fieldINCODIGO.getString();
	}

	/**
	 * Set field INPLAZO using a String value.
	 */
	public void setINPLAZO(String newvalue) {
		fieldINPLAZO.setString(newvalue);
	}

	/**
	 * Get value of field INPLAZO as a String.
	 */
	public String getINPLAZO() {
		return fieldINPLAZO.getString();
	}

	/**
	 * Set numeric field INPLAZO using a BigDecimal value.
	 */
	public void setINPLAZO(BigDecimal newvalue) {
		fieldINPLAZO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INPLAZO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINPLAZO() {
		return fieldINPLAZO.getBigDecimal();
	}

	/**
	 * Set field INIMPORTE using a String value.
	 */
	public void setINIMPORTE(String newvalue) {
		fieldINIMPORTE.setString(newvalue);
	}

	/**
	 * Get value of field INIMPORTE as a String.
	 */
	public String getINIMPORTE() {
		return fieldINIMPORTE.getString();
	}

	/**
	 * Set numeric field INIMPORTE using a BigDecimal value.
	 */
	public void setINIMPORTE(BigDecimal newvalue) {
		fieldINIMPORTE.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INIMPORTE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINIMPORTE() {
		return fieldINIMPORTE.getBigDecimal();
	}

	/**
	 * Set field INIMPMIN using a String value.
	 */
	public void setINIMPMIN(String newvalue) {
		fieldINIMPMIN.setString(newvalue);
	}

	/**
	 * Get value of field INIMPMIN as a String.
	 */
	public String getINIMPMIN() {
		return fieldINIMPMIN.getString();
	}

	/**
	 * Set numeric field INIMPMIN using a BigDecimal value.
	 */
	public void setINIMPMIN(BigDecimal newvalue) {
		fieldINIMPMIN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INIMPMIN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINIMPMIN() {
		return fieldINIMPMIN.getBigDecimal();
	}

	/**
	 * Set field INIMPMAX using a String value.
	 */
	public void setINIMPMAX(String newvalue) {
		fieldINIMPMAX.setString(newvalue);
	}

	/**
	 * Get value of field INIMPMAX as a String.
	 */
	public String getINIMPMAX() {
		return fieldINIMPMAX.getString();
	}

	/**
	 * Set numeric field INIMPMAX using a BigDecimal value.
	 */
	public void setINIMPMAX(BigDecimal newvalue) {
		fieldINIMPMAX.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INIMPMAX as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINIMPMAX() {
		return fieldINIMPMAX.getBigDecimal();
	}

	/**
	 * Set field INTASA using a String value.
	 */
	public void setINTASA(String newvalue) {
		fieldINTASA.setString(newvalue);
	}

	/**
	 * Get value of field INTASA as a String.
	 */
	public String getINTASA() {
		return fieldINTASA.getString();
	}

	/**
	 * Set numeric field INTASA using a BigDecimal value.
	 */
	public void setINTASA(BigDecimal newvalue) {
		fieldINTASA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INTASA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINTASA() {
		return fieldINTASA.getBigDecimal();
	}

	/**
	 * Set field INSEGURO using a String value.
	 */
	public void setINSEGURO(String newvalue) {
		fieldINSEGURO.setString(newvalue);
	}

	/**
	 * Get value of field INSEGURO as a String.
	 */
	public String getINSEGURO() {
		return fieldINSEGURO.getString();
	}

	/**
	 * Set numeric field INSEGURO using a BigDecimal value.
	 */
	public void setINSEGURO(BigDecimal newvalue) {
		fieldINSEGURO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INSEGURO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINSEGURO() {
		return fieldINSEGURO.getBigDecimal();
	}

	/**
	 * Set field INMORA using a String value.
	 */
	public void setINMORA(String newvalue) {
		fieldINMORA.setString(newvalue);
	}

	/**
	 * Get value of field INMORA as a String.
	 */
	public String getINMORA() {
		return fieldINMORA.getString();
	}

	/**
	 * Set numeric field INMORA using a BigDecimal value.
	 */
	public void setINMORA(BigDecimal newvalue) {
		fieldINMORA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INMORA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINMORA() {
		return fieldINMORA.getBigDecimal();
	}

	/**
	 * Set field INCAT using a String value.
	 */
	public void setINCAT(String newvalue) {
		fieldINCAT.setString(newvalue);
	}

	/**
	 * Get value of field INCAT as a String.
	 */
	public String getINCAT() {
		return fieldINCAT.getString();
	}

	/**
	 * Set numeric field INCAT using a BigDecimal value.
	 */
	public void setINCAT(BigDecimal newvalue) {
		fieldINCAT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCAT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCAT() {
		return fieldINCAT.getBigDecimal();
	}

	/**
	 * Set field INCOMIS using a String value.
	 */
	public void setINCOMIS(String newvalue) {
		fieldINCOMIS.setString(newvalue);
	}

	/**
	 * Get value of field INCOMIS as a String.
	 */
	public String getINCOMIS() {
		return fieldINCOMIS.getString();
	}

	/**
	 * Set numeric field INCOMIS using a BigDecimal value.
	 */
	public void setINCOMIS(BigDecimal newvalue) {
		fieldINCOMIS.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCOMIS as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCOMIS() {
		return fieldINCOMIS.getBigDecimal();
	}

	/**
	 * Set field INIVACOM using a String value.
	 */
	public void setINIVACOM(String newvalue) {
		fieldINIVACOM.setString(newvalue);
	}

	/**
	 * Get value of field INIVACOM as a String.
	 */
	public String getINIVACOM() {
		return fieldINIVACOM.getString();
	}

	/**
	 * Set numeric field INIVACOM using a BigDecimal value.
	 */
	public void setINIVACOM(BigDecimal newvalue) {
		fieldINIVACOM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INIVACOM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINIVACOM() {
		return fieldINIVACOM.getBigDecimal();
	}

	/**
	 * Set field INFECPAGO using a String value.
	 */
	public void setINFECPAGO(String newvalue) {
		fieldINFECPAGO.setString(newvalue);
	}

	/**
	 * Get value of field INFECPAGO as a String.
	 */
	public String getINFECPAGO() {
		return fieldINFECPAGO.getString();
	}

	/**
	 * Set numeric field INFECPAGO using a BigDecimal value.
	 */
	public void setINFECPAGO(BigDecimal newvalue) {
		fieldINFECPAGO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INFECPAGO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINFECPAGO() {
		return fieldINFECPAGO.getBigDecimal();
	}

	/**
	 * Set field INPAGOS using a String value.
	 */
	public void setINPAGOS(String newvalue) {
		fieldINPAGOS.setString(newvalue);
	}

	/**
	 * Get value of field INPAGOS as a String.
	 */
	public String getINPAGOS() {
		return fieldINPAGOS.getString();
	}

	/**
	 * Set numeric field INPAGOS using a BigDecimal value.
	 */
	public void setINPAGOS(BigDecimal newvalue) {
		fieldINPAGOS.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INPAGOS as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINPAGOS() {
		return fieldINPAGOS.getBigDecimal();
	}

	/**
	 * Set field INCLAVE using a String value.
	 */
	public void setINCLAVE(String newvalue) {
		fieldINCLAVE.setString(newvalue);
	}

	/**
	 * Get value of field INCLAVE as a String.
	 */
	public String getINCLAVE() {
		return fieldINCLAVE.getString();
	}

	/**
	 * Set field INCALIF using a String value.
	 */
	public void setINCALIF(String newvalue) {
		fieldINCALIF.setString(newvalue);
	}

	/**
	 * Get value of field INCALIF as a String.
	 */
	public String getINCALIF() {
		return fieldINCALIF.getString();
	}

	/**
	 * Set field INFOLAUD using a String value.
	 */
	public void setINFOLAUD(String newvalue) {
		fieldINFOLAUD.setString(newvalue);
	}

	/**
	 * Get value of field INFOLAUD as a String.
	 */
	public String getINFOLAUD() {
		return fieldINFOLAUD.getString();
	}

	/**
	 * Set numeric field INFOLAUD using a BigDecimal value.
	 */
	public void setINFOLAUD(BigDecimal newvalue) {
		fieldINFOLAUD.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INFOLAUD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINFOLAUD() {
		return fieldINFOLAUD.getBigDecimal();
	}

	/**
	 * Set field INCORRE using a String value.
	 */
	public void setINCORRE(String newvalue) {
		fieldINCORRE.setString(newvalue);
	}

	/**
	 * Get value of field INCORRE as a String.
	 */
	public String getINCORRE() {
		return fieldINCORRE.getString();
	}

}
