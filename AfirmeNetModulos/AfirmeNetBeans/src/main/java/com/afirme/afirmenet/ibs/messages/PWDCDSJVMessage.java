package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from PWDCDSJV physical file
 * definition.
 * 
 * File level identifier is 1020531175241. Record format level identifier is
 * 439A39549D973.
 */

public class PWDCDSJVMessage extends MessageRecord {
	final int FIELDCOUNT = 18;
	private CharacterField fieldPWDCCMP = null;
	private CharacterField fieldPWDCUSR = null;
	private CharacterField fieldPWDCPWD = null;
	private CharacterField fieldPWDCNPW = null;
	private CharacterField fieldPWDCCPW = null;
	private CharacterField fieldPWDCNCH = null;
	private CharacterField fieldPWDCSTS = null;
	private CharacterField fieldPWDCOPR = null;
	private CharacterField fieldPWDCCFM = null;
	private CharacterField fieldPWDCTRA = null;
	private CharacterField fieldPWDCBPA = null;
	private CharacterField fieldPWDCLCA = null;
	private CharacterField fieldPWDCLNP = null;
	private CharacterField fieldPWDCCCP = null;
	private DecimalField fieldPWDCMAX = null;
	private CharacterField fieldPWDCDTF = null;
	private CharacterField fieldPWDCLGT = null;
	private CharacterField fieldPWDCACL = null;

	/**
	 * Constructor for PWDCDSJVMessage.
	 */
	public PWDCDSJVMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */

	protected void createFields() {
		recordsize = 79;
		fileid = "1020531175241";
		recordid = "439A39549D973";
		message = new byte[getByteLength()];
		formatname = "PWDCDSJV";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "PWDCCMP";
		tagnames[0] = "PWDCCMP";
		fields[0] = fieldPWDCCMP = new CharacterField(message, HEADERSIZE + 0,
				10, "PWDCCMP");
		fieldnames[1] = "PWDCUSR";
		tagnames[1] = "PWDCUSR";
		fields[1] = fieldPWDCUSR = new CharacterField(message, HEADERSIZE + 10,
				10, "PWDCUSR");
		fieldnames[2] = "PWDCPWD";
		tagnames[2] = "PWDCPWD";
		fields[2] = fieldPWDCPWD = new CharacterField(message, HEADERSIZE + 20,
				10, "PWDCPWD");
		fieldnames[3] = "PWDCNPW";
		tagnames[3] = "PWDCNPW";
		fields[3] = fieldPWDCNPW = new CharacterField(message, HEADERSIZE + 30,
				10, "PWDCNPW");
		fieldnames[4] = "PWDCCPW";
		tagnames[4] = "PWDCCPW";
		fields[4] = fieldPWDCCPW = new CharacterField(message, HEADERSIZE + 40,
				10, "PWDCCPW");
		fieldnames[5] = "PWDCNCH";
		tagnames[5] = "PWDCNCH";
		fields[5] = fieldPWDCNCH = new CharacterField(message, HEADERSIZE + 50,
				2, "PWDCNCH");
		fieldnames[6] = "PWDCSTS";
		tagnames[6] = "PWDCSTS";
		fields[6] = fieldPWDCSTS = new CharacterField(message, HEADERSIZE + 52,
				1, "PWDCSTS");
		fieldnames[7] = "PWDCOPR";
		tagnames[7] = "PWDCOPR";
		fields[7] = fieldPWDCOPR = new CharacterField(message, HEADERSIZE + 53,
				1, "PWDCOPR");
		fieldnames[8] = "PWDCCFM";
		tagnames[8] = "PWDCCFM";
		fields[8] = fieldPWDCCFM = new CharacterField(message, HEADERSIZE + 54,
				1, "PWDCCFM");
		fieldnames[9] = "PWDCTRA";
		tagnames[9] = "PWDCTRA";
		fields[9] = fieldPWDCTRA = new CharacterField(message, HEADERSIZE + 55,
				1, "PWDCTRA");
		fieldnames[10] = "PWDCBPA";
		tagnames[10] = "PWDCBPA";
		fields[10] = fieldPWDCBPA = new CharacterField(message,
				HEADERSIZE + 56, 1, "PWDCBPA");
		fieldnames[11] = "PWDCLCA";
		tagnames[11] = "PWDCLCA";
		fields[11] = fieldPWDCLCA = new CharacterField(message,
				HEADERSIZE + 57, 1, "PWDCLCA");
		fieldnames[12] = "PWDCLNP";
		tagnames[12] = "PWDCLNP";
		fields[12] = fieldPWDCLNP = new CharacterField(message,
				HEADERSIZE + 58, 1, "PWDCLNP");
		fieldnames[13] = "PWDCCCP";
		tagnames[13] = "PWDCCCP";
		fields[13] = fieldPWDCCCP = new CharacterField(message,
				HEADERSIZE + 59, 1, "PWDCCCP");
		fieldnames[14] = "PWDCMAX";
		tagnames[14] = "PWDCMAX";
		fields[14] = fieldPWDCMAX = new DecimalField(message, HEADERSIZE + 60,
				15, 2, "PWDCMAX");
		fieldnames[15] = "PWDCDTF";
		tagnames[15] = "PWDCDTF";
		fields[15] = fieldPWDCDTF = new CharacterField(message,
				HEADERSIZE + 75, 1, "PWDCDTF");
		fieldnames[16] = "PWDCLGT";
		tagnames[16] = "PWDCLGT";
		fields[16] = fieldPWDCLGT = new CharacterField(message,
				HEADERSIZE + 76, 1, "PWDCLGT");
		fieldnames[17] = "PWDCACL";
		tagnames[17] = "PWDCACL";
		fields[17] = fieldPWDCACL = new CharacterField(message,
				HEADERSIZE + 77, 2, "PWDCACL");
	}

	/**
	 * Set field PWDCCMP using a String value.
	 */
	public void setPWDCCMP(String newvalue) {
		fieldPWDCCMP.setString(newvalue);
	}

	/**
	 * Get value of field PWDCCMP as a String.
	 */
	public String getPWDCCMP() {
		return fieldPWDCCMP.getString();
	}

	/**
	 * Set field PWDCUSR using a String value.
	 */
	public void setPWDCUSR(String newvalue) {
		fieldPWDCUSR.setString(newvalue);
	}

	/**
	 * Get value of field PWDCUSR as a String.
	 */
	public String getPWDCUSR() {
		return fieldPWDCUSR.getString();
	}

	/**
	 * Set field PWDCPWD using a String value.
	 */
	public void setPWDCPWD(String newvalue) {
		fieldPWDCPWD.setString(newvalue);
	}

	/**
	 * Get value of field PWDCPWD as a String.
	 */
	public String getPWDCPWD() {
		return fieldPWDCPWD.getString();
	}

	/**
	 * Set field PWDCNPW using a String value.
	 */
	public void setPWDCNPW(String newvalue) {
		fieldPWDCNPW.setString(newvalue);
	}

	/**
	 * Get value of field PWDCNPW as a String.
	 */
	public String getPWDCNPW() {
		return fieldPWDCNPW.getString();
	}

	/**
	 * Set field PWDCCPW using a String value.
	 */
	public void setPWDCCPW(String newvalue) {
		fieldPWDCCPW.setString(newvalue);
	}

	/**
	 * Get value of field PWDCCPW as a String.
	 */
	public String getPWDCCPW() {
		return fieldPWDCCPW.getString();
	}

	/**
	 * Set field PWDCNCH using a String value.
	 */
	public void setPWDCNCH(String newvalue) {
		fieldPWDCNCH.setString(newvalue);
	}

	/**
	 * Get value of field PWDCNCH as a String.
	 */
	public String getPWDCNCH() {
		return fieldPWDCNCH.getString();
	}

	/**
	 * Set field PWDCSTS using a String value.
	 */
	public void setPWDCSTS(String newvalue) {
		fieldPWDCSTS.setString(newvalue);
	}

	/**
	 * Get value of field PWDCSTS as a String.
	 */
	public String getPWDCSTS() {
		return fieldPWDCSTS.getString();
	}

	/**
	 * Set field PWDCOPR using a String value.
	 */
	public void setPWDCOPR(String newvalue) {
		fieldPWDCOPR.setString(newvalue);
	}

	/**
	 * Get value of field PWDCOPR as a String.
	 */
	public String getPWDCOPR() {
		return fieldPWDCOPR.getString();
	}

	/**
	 * Set field PWDCCFM using a String value.
	 */
	public void setPWDCCFM(String newvalue) {
		fieldPWDCCFM.setString(newvalue);
	}

	/**
	 * Get value of field PWDCCFM as a String.
	 */
	public String getPWDCCFM() {
		return fieldPWDCCFM.getString();
	}

	/**
	 * Set field PWDCTRA using a String value.
	 */
	public void setPWDCTRA(String newvalue) {
		fieldPWDCTRA.setString(newvalue);
	}

	/**
	 * Get value of field PWDCTRA as a String.
	 */
	public String getPWDCTRA() {
		return fieldPWDCTRA.getString();
	}

	/**
	 * Set field PWDCBPA using a String value.
	 */
	public void setPWDCBPA(String newvalue) {
		fieldPWDCBPA.setString(newvalue);
	}

	/**
	 * Get value of field PWDCBPA as a String.
	 */
	public String getPWDCBPA() {
		return fieldPWDCBPA.getString();
	}

	/**
	 * Set field PWDCLCA using a String value.
	 */
	public void setPWDCLCA(String newvalue) {
		fieldPWDCLCA.setString(newvalue);
	}

	/**
	 * Get value of field PWDCLCA as a String.
	 */
	public String getPWDCLCA() {
		return fieldPWDCLCA.getString();
	}

	/**
	 * Set field PWDCLNP using a String value.
	 */
	public void setPWDCLNP(String newvalue) {
		fieldPWDCLNP.setString(newvalue);
	}

	/**
	 * Get value of field PWDCLNP as a String.
	 */
	public String getPWDCLNP() {
		return fieldPWDCLNP.getString();
	}

	/**
	 * Set field PWDCCCP using a String value.
	 */
	public void setPWDCCCP(String newvalue) {
		fieldPWDCCCP.setString(newvalue);
	}

	/**
	 * Get value of field PWDCCCP as a String.
	 */
	public String getPWDCCCP() {
		return fieldPWDCCCP.getString();
	}

	/**
	 * Set field PWDCMAX using a String value.
	 */
	public void setPWDCMAX(String newvalue) {
		fieldPWDCMAX.setString(newvalue);
	}

	/**
	 * Get value of field PWDCMAX as a String.
	 */
	public String getPWDCMAX() {
		return fieldPWDCMAX.getString();
	}

	/**
	 * Set numeric field PWDCMAX using a BigDecimal value.
	 */
	public void setPWDCMAX(BigDecimal newvalue) {
		fieldPWDCMAX.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field PWDCMAX as a BigDecimal.
	 */
	public BigDecimal getBigDecimalPWDCMAX() {
		return fieldPWDCMAX.getBigDecimal();
	}

	/**
	 * Set field PWDCDTF using a String value.
	 */
	public void setPWDCDTF(String newvalue) {
		fieldPWDCDTF.setString(newvalue);
	}

	/**
	 * Get value of field PWDCDTF as a String.
	 */
	public String getPWDCDTF() {
		return fieldPWDCDTF.getString();
	}

	/**
	 * Set field PWDCLGT using a String value.
	 */
	public void setPWDCLGT(String newvalue) {
		fieldPWDCLGT.setString(newvalue);
	}

	/**
	 * Get value of field PWDCLGT as a String.
	 */
	public String getPWDCLGT() {
		return fieldPWDCLGT.getString();
	}

	/**
	 * Set field PWDCACL using a String value.
	 */
	public void setPWDCACL(String newvalue) {
		fieldPWDCACL.setString(newvalue);
	}

	/**
	 * Get value of field PWDCACL as a String.
	 */
	public String getPWDCACL() {
		return fieldPWDCACL.getString();
	}

}
