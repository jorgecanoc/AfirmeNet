package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from INHDTDSJV physical file
 * definition.
 * 
 * File level identifier is 1001004210209. Record format level identifier is
 * 46FCFCCB90E5B.
 */

public class INHDTDSJVMessage extends MessageRecord {
	final int FIELDCOUNT = 9;
	private CharacterField fieldDSJINDUSR = null;
	private DecimalField fieldDSJINDVNO = null;
	private CharacterField fieldDSJINDNME = null;
	private DecimalField fieldDSJINDPDM = null;
	private DecimalField fieldDSJINDPDD = null;
	private DecimalField fieldDSJINDPDY = null;
	private DecimalField fieldDSJINDIAM = null;
	private CharacterField fieldDSJINDREF = null;
	private CharacterField fieldDSJINDFIM = null;

	/**
	 * Constructor for INHDTDSJVMessage.
	 */
	public INHDTDSJVMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */

	protected void createFields() {
		recordsize = 112;
		fileid = "1001004210209";
		recordid = "46FCFCCB90E5B";
		message = new byte[getByteLength()];
		formatname = "INHDTDSJV";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "DSJINDUSR";
		tagnames[0] = "DSJINDUSR";
		fields[0] = fieldDSJINDUSR = new CharacterField(message,
				HEADERSIZE + 0, 10, "DSJINDUSR");
		fieldnames[1] = "DSJINDVNO";
		tagnames[1] = "DSJINDVNO";
		fields[1] = fieldDSJINDVNO = new DecimalField(message, HEADERSIZE + 10,
				10, 0, "DSJINDVNO");
		fieldnames[2] = "DSJINDNME";
		tagnames[2] = "DSJINDNME";
		fields[2] = fieldDSJINDNME = new CharacterField(message,
				HEADERSIZE + 20, 35, "DSJINDNME");
		fieldnames[3] = "DSJINDPDM";
		tagnames[3] = "DSJINDPDM";
		fields[3] = fieldDSJINDPDM = new DecimalField(message, HEADERSIZE + 55,
				3, 0, "DSJINDPDM");
		fieldnames[4] = "DSJINDPDD";
		tagnames[4] = "DSJINDPDD";
		fields[4] = fieldDSJINDPDD = new DecimalField(message, HEADERSIZE + 58,
				3, 0, "DSJINDPDD");
		fieldnames[5] = "DSJINDPDY";
		tagnames[5] = "DSJINDPDY";
		fields[5] = fieldDSJINDPDY = new DecimalField(message, HEADERSIZE + 61,
				3, 0, "DSJINDPDY");
		fieldnames[6] = "DSJINDIAM";
		tagnames[6] = "DSJINDIAM";
		fields[6] = fieldDSJINDIAM = new DecimalField(message, HEADERSIZE + 64,
				17, 2, "DSJINDIAM");
		fieldnames[7] = "DSJINDREF";
		tagnames[7] = "DSJINDREF";
		fields[7] = fieldDSJINDREF = new CharacterField(message,
				HEADERSIZE + 81, 30, "DSJINDREF");
		fieldnames[8] = "DSJINDFIM";
		tagnames[8] = "DSJINDFIM";
		fields[8] = fieldDSJINDFIM = new CharacterField(message,
				HEADERSIZE + 111, 1, "DSJINDFIM");
	}

	/**
	 * Return value of numeric field DSJINDIAM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINDIAM() {
		return fieldDSJINDIAM.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINDPDD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINDPDD() {
		return fieldDSJINDPDD.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINDPDM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINDPDM() {
		return fieldDSJINDPDM.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINDPDY as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINDPDY() {
		return fieldDSJINDPDY.getBigDecimal();
	}

	/**
	 * Return value of numeric field DSJINDVNO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalDSJINDVNO() {
		return fieldDSJINDVNO.getBigDecimal();
	}

	/**
	 * Get value of field DSJINDFIM as a String.
	 */
	public String getDSJINDFIM() {
		return fieldDSJINDFIM.getString();
	}

	/**
	 * Get value of field DSJINDIAM as a String.
	 */
	public String getDSJINDIAM() {
		return fieldDSJINDIAM.getString();
	}

	/**
	 * Get value of field DSJINDNME as a String.
	 */
	public String getDSJINDNME() {
		return fieldDSJINDNME.getString();
	}

	/**
	 * Get value of field DSJINDPDD as a String.
	 */
	public String getDSJINDPDD() {
		return fieldDSJINDPDD.getString();
	}

	/**
	 * Get value of field DSJINDPDM as a String.
	 */
	public String getDSJINDPDM() {
		return fieldDSJINDPDM.getString();
	}

	/**
	 * Get value of field DSJINDPDY as a String.
	 */
	public String getDSJINDPDY() {
		return fieldDSJINDPDY.getString();
	}

	/**
	 * Get value of field DSJINDREF as a String.
	 */
	public String getDSJINDREF() {
		return fieldDSJINDREF.getString();
	}

	/**
	 * Get value of field DSJINDUSR as a String.
	 */
	public String getDSJINDUSR() {
		return fieldDSJINDUSR.getString();
	}

	/**
	 * Get value of field DSJINDVNO as a String.
	 */
	public String getDSJINDVNO() {
		return fieldDSJINDVNO.getString();
	}

	/**
	 * Set field DSJINDFIM using a String value.
	 */
	public void setDSJINDFIM(String newvalue) {
		fieldDSJINDFIM.setString(newvalue);
	}

	/**
	 * Set field DSJINDIAM using a String value.
	 */
	public void setDSJINDIAM(String newvalue) {
		fieldDSJINDIAM.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINDIAM using a BigDecimal value.
	 */
	public void setDSJINDIAM(BigDecimal newvalue) {
		fieldDSJINDIAM.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINDNME using a String value.
	 */
	public void setDSJINDNME(String newvalue) {
		fieldDSJINDNME.setString(newvalue);
	}

	/**
	 * Set field DSJINDPDD using a String value.
	 */
	public void setDSJINDPDD(String newvalue) {
		fieldDSJINDPDD.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINDPDD using a BigDecimal value.
	 */
	public void setDSJINDPDD(BigDecimal newvalue) {
		fieldDSJINDPDD.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINDPDM using a String value.
	 */
	public void setDSJINDPDM(String newvalue) {
		fieldDSJINDPDM.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINDPDM using a BigDecimal value.
	 */
	public void setDSJINDPDM(BigDecimal newvalue) {
		fieldDSJINDPDM.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINDPDY using a String value.
	 */
	public void setDSJINDPDY(String newvalue) {
		fieldDSJINDPDY.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINDPDY using a BigDecimal value.
	 */
	public void setDSJINDPDY(BigDecimal newvalue) {
		fieldDSJINDPDY.setBigDecimal(newvalue);
	}

	/**
	 * Set field DSJINDREF using a String value.
	 */
	public void setDSJINDREF(String newvalue) {
		fieldDSJINDREF.setString(newvalue);
	}

	/**
	 * Set field DSJINDUSR using a String value.
	 */
	public void setDSJINDUSR(String newvalue) {
		fieldDSJINDUSR.setString(newvalue);
	}

	/**
	 * Set field DSJINDVNO using a String value.
	 */
	public void setDSJINDVNO(String newvalue) {
		fieldDSJINDVNO.setString(newvalue);
	}

	/**
	 * Set numeric field DSJINDVNO using a BigDecimal value.
	 */
	public void setDSJINDVNO(BigDecimal newvalue) {
		fieldDSJINDVNO.setBigDecimal(newvalue);
	}
}