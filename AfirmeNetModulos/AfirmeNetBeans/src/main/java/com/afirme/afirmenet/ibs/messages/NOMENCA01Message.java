package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from NOMENCA01 physical file
 * definition.
 * 
 * File level identifier is 1110322173006. Record format level identifier is
 * 4B662C7BE1F58.
 */

public class NOMENCA01Message extends MessageRecord {
	final static String fldnames[] = { "INEOPE", "INEUSR", "INEREF",
			"INEXPMTV", "INEFECHA", "INEHORA", "INEACC" };
	final static String tnames[] = { "INEOPE", "INEUSR", "INEREF", "INEXPMTV",
			"INEFECHA", "INEHORA", "INEACC" };
	final static String fid = "1110322173006";
	final static String rid = "4B662C7BE1F58";
	final static String fmtname = "NOMENCA01";
	final int FIELDCOUNT = 7;
	private static Hashtable<String, Integer> tlookup = new Hashtable<String, Integer>();
	private CharacterField fieldINEOPE = null;
	private CharacterField fieldINEUSR = null;
	private CharacterField fieldINEREF = null;
	private CharacterField fieldINEXPMTV = null;
	private DecimalField fieldINEFECHA = null;
	private DecimalField fieldINEHORA = null;
	private DecimalField fieldINEACC = null;

	/**
	 * Constructor for NOMENCA01Message.
	 */
	public NOMENCA01Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */

	protected void createFields() {
		recordsize = 62;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldINEOPE = new CharacterField(message, HEADERSIZE + 0,
				1, "INEOPE");
		fields[1] = fieldINEUSR = new CharacterField(message, HEADERSIZE + 1,
				10, "INEUSR");
		fields[2] = fieldINEREF = new CharacterField(message, HEADERSIZE + 11,
				12, "INEREF");
		fields[3] = fieldINEXPMTV = new CharacterField(message,
				HEADERSIZE + 23, 2, "INEXPMTV");
		fields[4] = fieldINEFECHA = new DecimalField(message, HEADERSIZE + 25,
				9, 0, "INEFECHA");
		fields[5] = fieldINEHORA = new DecimalField(message, HEADERSIZE + 34,
				7, 0, "INEHORA");
		fields[6] = fieldINEACC = new DecimalField(message, HEADERSIZE + 41,
				21, 0, "INEACC");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field INEOPE using a String value.
	 * 
	 * @Param OPERATION CODE
	 */
	public void setINEOPE(String newvalue) {
		fieldINEOPE.setString(newvalue);
	}

	/**
	 * Get value of field INEOPE as a String.
	 * 
	 * @return OPERATION CODE
	 */
	public String getINEOPE() {
		return fieldINEOPE.getString();
	}

	/**
	 * Set field INEUSR using a String value.
	 * 
	 * @Param USERID (Contrato de AFIRMENET)
	 */
	public void setINEUSR(String newvalue) {
		fieldINEUSR.setString(newvalue);
	}

	/**
	 * Get value of field INEUSR as a String.
	 * 
	 * @return USER ID (Contrato de AFIRMENET)
	 */
	public String getINEUSR() {
		return fieldINEUSR.getString();
	}

	/**
	 * Set field INEREF using a String value.
	 * 
	 * @Param REFERENCE
	 */
	public void setINEREF(String newvalue) {
		fieldINEREF.setString(newvalue);
	}

	/**
	 * Get value of field INEREF as a String.
	 * 
	 * @return REFERENCE
	 */
	public String getINEREF() {
		return fieldINEREF.getString();
	}

	/**
	 * Set field INEXPMTV using a String value.
	 * 
	 * @Param PAYMENT TYPE
	 */
	public void setINEXPMTV(String newvalue) {
		fieldINEXPMTV.setString(newvalue);
	}

	/**
	 * Get value of field INEXPMTV as a String.
	 * 
	 * @return PAYMENT TYPE
	 */
	public String getINEXPMTV() {
		return fieldINEXPMTV.getString();
	}

	/**
	 * Set field INEFECHA using a String value.
	 * 
	 * @Param Fecha (AAAAMMDD)
	 */
	public void setINEFECHA(String newvalue) {
		fieldINEFECHA.setString(newvalue);
	}

	/**
	 * Get value of field INEFECHA as a String.
	 * 
	 * @return Fecha (AAAAMMDD)
	 */
	public String getINEFECHA() {
		return fieldINEFECHA.getString();
	}

	/**
	 * Set numeric field INEFECHA using a BigDecimal value.
	 * 
	 * @Param Fecha as a BigDecimal
	 */
	public void setINEFECHA(BigDecimal newvalue) {
		fieldINEFECHA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INEFECHA as a BigDecimal.
	 * 
	 * @return Fecha as a BigDecimal
	 */
	public BigDecimal getBigDecimalINEFECHA() {
		return fieldINEFECHA.getBigDecimal();
	}

	/**
	 * Set field INEHORA using a String value.
	 * 
	 * @Param Hora (HHMMSS)
	 */
	public void setINEHORA(String newvalue) {
		fieldINEHORA.setString(newvalue);
	}

	/**
	 * Get value of field INEHORA as a String.
	 * 
	 * @return Hora (HHMMSS)
	 */
	public String getINEHORA() {
		return fieldINEHORA.getString();
	}

	/**
	 * Set numeric field INEHORA using a BigDecimal value.
	 * 
	 * @Param Hora as a BigDecimal
	 */
	public void setINEHORA(BigDecimal newvalue) {
		fieldINEHORA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INEHORA as a BigDecimal.
	 * 
	 * @return Hora as a BigDecimal
	 */
	public BigDecimal getBigDecimalINEHORA() {
		return fieldINEHORA.getBigDecimal();
	}

	/**
	 * Set field INEACC using a String value.
	 * 
	 * @Param Cuenta (Cuenta de Cargo)
	 */
	public void setINEACC(String newvalue) {
		fieldINEACC.setString(newvalue);
	}

	/**
	 * Get value of field INEACC as a String.
	 * 
	 * @return Cuenta (Cuenta de Cargo)
	 */
	public String getINEACC() {
		return fieldINEACC.getString();
	}

	/**
	 * Set numeric field INEACC using a BigDecimal value.
	 * 
	 * @Param Cuenta (Cuenta de Cargo) as a BigDecimal
	 */
	public void setINEACC(BigDecimal newvalue) {
		fieldINEACC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INEACC as a BigDecimal.
	 * 
	 * @return Cuenta (Cuenta de Cargo) as a BigDecimal
	 */
	public BigDecimal getBigDecimalINEACC() {
		return fieldINEACC.getBigDecimal();
	}

}
