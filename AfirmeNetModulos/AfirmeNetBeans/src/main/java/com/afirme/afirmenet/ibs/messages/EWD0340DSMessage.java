/**
 *  This Class was created By Luis Velando
 *  Copyright Datapro Inc. 1999
 **/

package com.afirme.afirmenet.ibs.messages;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from EWD0340DS physical file
 * definition.
 * 
 * File level identifier is 1020320102736. Record format level identifier is
 * 3C28E7F8C7ED3.
 */

public class EWD0340DSMessage extends MessageRecord {
	final int FIELDCOUNT = 5;
	private CharacterField fieldEWDFNM = null;
	private CharacterField fieldEWDMIN = null;
	private CharacterField fieldEWDLNM = null;
	private CharacterField fieldEWDMAD = null;
	private CharacterField fieldEWDOPE = null;

	/**
	 * Constructor for EWD0340DSMessage.
	 */
	public EWD0340DSMessage() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 112;
		fileid = "1020320102736";
		recordid = "3C28E7F8C7ED3";
		message = new byte[getByteLength()];
		formatname = "EWD0340DS";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "EWDFNM";
		tagnames[0] = "EWDFNM";
		fields[0] = fieldEWDFNM = new CharacterField(message, HEADERSIZE + 0,
				25, "EWDFNM");
		fieldnames[1] = "EWDMIN";
		tagnames[1] = "EWDMIN";
		fields[1] = fieldEWDMIN = new CharacterField(message, HEADERSIZE + 25,
				1, "EWDMIN");
		fieldnames[2] = "EWDLNM";
		tagnames[2] = "EWDLNM";
		fields[2] = fieldEWDLNM = new CharacterField(message, HEADERSIZE + 26,
				25, "EWDLNM");
		fieldnames[3] = "EWDMAD";
		tagnames[3] = "EWDMAD";
		fields[3] = fieldEWDMAD = new CharacterField(message, HEADERSIZE + 51,
				60, "EWDMAD");
		fieldnames[4] = "EWDOPE";
		tagnames[4] = "EWDOPE";
		fields[4] = fieldEWDOPE = new CharacterField(message, HEADERSIZE + 111,
				1, "EWDOPE");
	}

	/**
	 * Set field EWDFNM using a String value.
	 */
	public void setEWDFNM(String newvalue) {
		fieldEWDFNM.setString(newvalue);
	}

	/**
	 * Get value of field EWDFNM as a String.
	 */
	public String getEWDFNM() {
		return fieldEWDFNM.getString();
	}

	/**
	 * Set field EWDMIN using a String value.
	 */
	public void setEWDMIN(String newvalue) {
		fieldEWDMIN.setString(newvalue);
	}

	/**
	 * Get value of field EWDMIN as a String.
	 */
	public String getEWDMIN() {
		return fieldEWDMIN.getString();
	}

	/**
	 * Set field EWDLNM using a String value.
	 */
	public void setEWDLNM(String newvalue) {
		fieldEWDLNM.setString(newvalue);
	}

	/**
	 * Get value of field EWDLNM as a String.
	 */
	public String getEWDLNM() {
		return fieldEWDLNM.getString();
	}

	/**
	 * Set field EWDMAD using a String value.
	 */
	public void setEWDMAD(String newvalue) {
		fieldEWDMAD.setString(newvalue);
	}

	/**
	 * Get value of field EWDMAD as a String.
	 */
	public String getEWDMAD() {
		return fieldEWDMAD.getString();
	}

	/**
	 * Set field EWDOPE using a String value.
	 */
	public void setEWDOPE(String newvalue) {
		fieldEWDOPE.setString(newvalue);
	}

	/**
	 * Get value of field EWDOPE as a String.
	 */
	public String getEWDOPE() {
		return fieldEWDOPE.getString();
	}

}
