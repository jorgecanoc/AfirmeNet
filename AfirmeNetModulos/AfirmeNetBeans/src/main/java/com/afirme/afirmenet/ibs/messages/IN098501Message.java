package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from IN098501 physical file
 * definition.
 * 
 * File level identifier is 1020321164447. Record format level identifier is
 * 47B8237D6D176.
 */

public class IN098501Message extends MessageRecord {
	final int FIELDCOUNT = 8;
	private CharacterField fieldIN985USR = null;
	private CharacterField fieldIN985RCT = null;
	private CharacterField fieldIN985REF = null;
	private DecimalField fieldIN985DTE = null;
	private DecimalField fieldIN985DAC = null;
	private DecimalField fieldIN985CAC = null;
	private DecimalField fieldIN985AMT = null;
	private CharacterField fieldIN985END = null;

	/**
	 * Constructor for IN098501Message.
	 */
	public IN098501Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 80;
		fileid = "1020321164447";
		recordid = "47B8237D6D176";
		message = new byte[getByteLength()];
		formatname = "IN098501";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "IN985USR";
		tagnames[0] = "IN985USR";
		fields[0] = fieldIN985USR = new CharacterField(message, HEADERSIZE + 0,
				10, "IN985USR");
		fieldnames[1] = "IN985RCT";
		tagnames[1] = "IN985RCT";
		fields[1] = fieldIN985RCT = new CharacterField(message,
				HEADERSIZE + 10, 1, "IN985RCT");
		fieldnames[2] = "IN985REF";
		tagnames[2] = "IN985REF";
		fields[2] = fieldIN985REF = new CharacterField(message,
				HEADERSIZE + 11, 25, "IN985REF");
		fieldnames[3] = "IN985DTE";
		tagnames[3] = "IN985DTE";
		fields[3] = fieldIN985DTE = new DecimalField(message, HEADERSIZE + 36,
				9, 0, "IN985DTE");
		fieldnames[4] = "IN985DAC";
		tagnames[4] = "IN985DAC";
		fields[4] = fieldIN985DAC = new DecimalField(message, HEADERSIZE + 45,
				10, 0, "IN985DAC");
		fieldnames[5] = "IN985CAC";
		tagnames[5] = "IN985CAC";
		fields[5] = fieldIN985CAC = new DecimalField(message, HEADERSIZE + 55,
				10, 0, "IN985CAC");
		fieldnames[6] = "IN985AMT";
		tagnames[6] = "IN985AMT";
		fields[6] = fieldIN985AMT = new DecimalField(message, HEADERSIZE + 65,
				14, 2, "IN985AMT");
		fieldnames[7] = "IN985END";
		tagnames[7] = "IN985END";
		fields[7] = fieldIN985END = new CharacterField(message,
				HEADERSIZE + 79, 1, "IN985END");
	}

	/**
	 * Set field IN985USR using a String value.
	 */
	public void setIN985USR(String newvalue) {
		fieldIN985USR.setString(newvalue);
	}

	/**
	 * Get value of field IN985USR as a String.
	 */
	public String getIN985USR() {
		return fieldIN985USR.getString();
	}

	/**
	 * Set field IN985RCT using a String value.
	 */
	public void setIN985RCT(String newvalue) {
		fieldIN985RCT.setString(newvalue);
	}

	/**
	 * Get value of field IN985RCT as a String.
	 */
	public String getIN985RCT() {
		return fieldIN985RCT.getString();
	}

	/**
	 * Set field IN985REF using a String value.
	 */
	public void setIN985REF(String newvalue) {
		fieldIN985REF.setString(newvalue);
	}

	/**
	 * Get value of field IN985REF as a String.
	 */
	public String getIN985REF() {
		return fieldIN985REF.getString();
	}

	/**
	 * Set field IN985DTE using a String value.
	 */
	public void setIN985DTE(String newvalue) {
		fieldIN985DTE.setString(newvalue);
	}

	/**
	 * Get value of field IN985DTE as a String.
	 */
	public String getIN985DTE() {
		return fieldIN985DTE.getString();
	}

	/**
	 * Set numeric field IN985DTE using a BigDecimal value.
	 */
	public void setIN985DTE(BigDecimal newvalue) {
		fieldIN985DTE.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN985DTE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN985DTE() {
		return fieldIN985DTE.getBigDecimal();
	}

	/**
	 * Set field IN985DAC using a String value.
	 */
	public void setIN985DAC(String newvalue) {
		fieldIN985DAC.setString(newvalue);
	}

	/**
	 * Get value of field IN985DAC as a String.
	 */
	public String getIN985DAC() {
		return fieldIN985DAC.getString();
	}

	/**
	 * Set numeric field IN985DAC using a BigDecimal value.
	 */
	public void setIN985DAC(BigDecimal newvalue) {
		fieldIN985DAC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN985DAC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN985DAC() {
		return fieldIN985DAC.getBigDecimal();
	}

	/**
	 * Set field IN985CAC using a String value.
	 */
	public void setIN985CAC(String newvalue) {
		fieldIN985CAC.setString(newvalue);
	}

	/**
	 * Get value of field IN985CAC as a String.
	 */
	public String getIN985CAC() {
		return fieldIN985CAC.getString();
	}

	/**
	 * Set numeric field IN985CAC using a BigDecimal value.
	 */
	public void setIN985CAC(BigDecimal newvalue) {
		fieldIN985CAC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN985CAC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN985CAC() {
		return fieldIN985CAC.getBigDecimal();
	}

	/**
	 * Set field IN985AMT using a String value.
	 */
	public void setIN985AMT(String newvalue) {
		fieldIN985AMT.setString(newvalue);
	}

	/**
	 * Get value of field IN985AMT as a String.
	 */
	public String getIN985AMT() {
		return fieldIN985AMT.getString();
	}

	/**
	 * Set numeric field IN985AMT using a BigDecimal value.
	 */
	public void setIN985AMT(BigDecimal newvalue) {
		fieldIN985AMT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field IN985AMT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN985AMT() {
		return fieldIN985AMT.getBigDecimal();
	}

	/**
	 * Set field IN985END using a String value.
	 */
	public void setIN985END(String newvalue) {
		fieldIN985END.setString(newvalue);
	}

	/**
	 * Get value of field IN985END as a String.
	 */
	public String getIN985END() {
		return fieldIN985END.getString();
	}

}
