package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from INPROGRA01 physical file
 * definition.
 * 
 * File level identifier is 1080718184741. Record format level identifier is
 * 36194174BB402.
 */
@SuppressWarnings("rawtypes")
public class INPROGRA01Message extends MessageRecord {
	final static String fldnames[] = { "TCIUSR", "TCREFE", "TCITIP", "TCCLIE",
			"TCTARJ", "TCTPPA", "TCCTAC", "TCFPCA", "TCTSTS", "TCFACT",
			"TCHACT", "TCFCAN", "TCHCAN", "TCMAIL", "TCIMPO", "TCOUSER",
			"TCVUSER", "TCAUSER", "TCODATE", "TCVDATE", "TCADATE" };
	final static String tnames[] = { "TCIUSR", "TCREFE", "TCITIP", "TCCLIE",
			"TCTARJ", "TCTPPA", "TCCTAC", "TCFPCA", "TCTSTS", "TCFACT",
			"TCHACT", "TCFCAN", "TCHCAN", "TCMAIL", "TCIMPO", "TCOUSER",
			"TCVUSER", "TCAUSER", "TCODATE", "TCVDATE", "TCADATE" };
	final static String fid = "1080718184741";
	final static String rid = "36194174BB402";
	final static String fmtname = "INPROGRA01";
	final int FIELDCOUNT = 21;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldTCIUSR = null;
	private CharacterField fieldTCREFE = null;
	private CharacterField fieldTCITIP = null;
	private DecimalField fieldTCCLIE = null;
	private DecimalField fieldTCTARJ = null;
	private CharacterField fieldTCTPPA = null;
	private DecimalField fieldTCCTAC = null;
	private DecimalField fieldTCFPCA = null;
	private CharacterField fieldTCTSTS = null;
	private DecimalField fieldTCFACT = null;
	private DecimalField fieldTCHACT = null;
	private DecimalField fieldTCFCAN = null;
	private DecimalField fieldTCHCAN = null;
	private CharacterField fieldTCMAIL = null;
	private DecimalField fieldTCIMPO = null;
	private CharacterField fieldTCOUSER = null;
	private CharacterField fieldTCVUSER = null;
	private CharacterField fieldTCAUSER = null;
	private CharacterField fieldTCODATE = null;
	private CharacterField fieldTCVDATE = null;
	private CharacterField fieldTCADATE = null;

	/**
	 * Constructor for INPROGRA01Message.
	 */
	public INPROGRA01Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 305;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldTCIUSR = new CharacterField(message, HEADERSIZE + 0,
				10, "TCIUSR");
		fields[1] = fieldTCREFE = new CharacterField(message, HEADERSIZE + 10,
				12, "TCREFE");
		fields[2] = fieldTCITIP = new CharacterField(message, HEADERSIZE + 22,
				1, "TCITIP");
		fields[3] = fieldTCCLIE = new DecimalField(message, HEADERSIZE + 23,
				10, 0, "TCCLIE");
		fields[4] = fieldTCTARJ = new DecimalField(message, HEADERSIZE + 33,
				17, 0, "TCTARJ");
		fields[5] = fieldTCTPPA = new CharacterField(message, HEADERSIZE + 50,
				1, "TCTPPA");
		fields[6] = fieldTCCTAC = new DecimalField(message, HEADERSIZE + 51,
				13, 0, "TCCTAC");
		fields[7] = fieldTCFPCA = new DecimalField(message, HEADERSIZE + 64, 9,
				0, "TCFPCA");
		fields[8] = fieldTCTSTS = new CharacterField(message, HEADERSIZE + 73,
				1, "TCTSTS");
		fields[9] = fieldTCFACT = new DecimalField(message, HEADERSIZE + 74, 9,
				0, "TCFACT");
		fields[10] = fieldTCHACT = new DecimalField(message, HEADERSIZE + 83,
				7, 0, "TCHACT");
		fields[11] = fieldTCFCAN = new DecimalField(message, HEADERSIZE + 90,
				9, 0, "TCFCAN");
		fields[12] = fieldTCHCAN = new DecimalField(message, HEADERSIZE + 99,
				7, 0, "TCHCAN");
		fields[13] = fieldTCMAIL = new CharacterField(message,
				HEADERSIZE + 106, 40, "TCMAIL");
		fields[14] = fieldTCIMPO = new DecimalField(message, HEADERSIZE + 146,
				15, 2, "TCIMPO");
		fields[15] = fieldTCOUSER = new CharacterField(message,
				HEADERSIZE + 161, 40, "TCOUSER");
		fields[16] = fieldTCVUSER = new CharacterField(message,
				HEADERSIZE + 201, 40, "TCVUSER");
		fields[17] = fieldTCAUSER = new CharacterField(message,
				HEADERSIZE + 241, 40, "TCAUSER");
		fields[18] = fieldTCODATE = new CharacterField(message,
				HEADERSIZE + 281, 8, "TCODATE");
		fields[19] = fieldTCVDATE = new CharacterField(message,
				HEADERSIZE + 289, 8, "TCVDATE");
		fields[20] = fieldTCADATE = new CharacterField(message,
				HEADERSIZE + 297, 8, "TCADATE");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field TCIUSR using a String value.
	 */
	public void setTCIUSR(String newvalue) {
		fieldTCIUSR.setString(newvalue);
	}

	/**
	 * Get value of field TCIUSR as a String.
	 */
	public String getTCIUSR() {
		return fieldTCIUSR.getString();
	}

	/**
	 * Set field TCREFE using a String value.
	 */
	public void setTCREFE(String newvalue) {
		fieldTCREFE.setString(newvalue);
	}

	/**
	 * Get value of field TCREFE as a String.
	 */
	public String getTCREFE() {
		return fieldTCREFE.getString();
	}

	/**
	 * Set field TCITIP using a String value.
	 */
	public void setTCITIP(String newvalue) {
		fieldTCITIP.setString(newvalue);
	}

	/**
	 * Get value of field TCITIP as a String.
	 */
	public String getTCITIP() {
		return fieldTCITIP.getString();
	}

	/**
	 * Set field TCCLIE using a String value.
	 */
	public void setTCCLIE(String newvalue) {
		fieldTCCLIE.setString(newvalue);
	}

	/**
	 * Get value of field TCCLIE as a String.
	 */
	public String getTCCLIE() {
		return fieldTCCLIE.getString();
	}

	/**
	 * Set numeric field TCCLIE using a BigDecimal value.
	 */
	public void setTCCLIE(BigDecimal newvalue) {
		fieldTCCLIE.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCCLIE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCCLIE() {
		return fieldTCCLIE.getBigDecimal();
	}

	/**
	 * Set field TCTARJ using a String value.
	 */
	public void setTCTARJ(String newvalue) {
		fieldTCTARJ.setString(newvalue);
	}

	/**
	 * Get value of field TCTARJ as a String.
	 */
	public String getTCTARJ() {
		return fieldTCTARJ.getString();
	}

	/**
	 * Set numeric field TCTARJ using a BigDecimal value.
	 */
	public void setTCTARJ(BigDecimal newvalue) {
		fieldTCTARJ.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCTARJ as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCTARJ() {
		return fieldTCTARJ.getBigDecimal();
	}

	/**
	 * Set field TCTPPA using a String value.
	 */
	public void setTCTPPA(String newvalue) {
		fieldTCTPPA.setString(newvalue);
	}

	/**
	 * Get value of field TCTPPA as a String.
	 */
	public String getTCTPPA() {
		return fieldTCTPPA.getString();
	}

	/**
	 * Set field TCCTAC using a String value.
	 */
	public void setTCCTAC(String newvalue) {
		fieldTCCTAC.setString(newvalue);
	}

	/**
	 * Get value of field TCCTAC as a String.
	 */
	public String getTCCTAC() {
		return fieldTCCTAC.getString();
	}

	/**
	 * Set numeric field TCCTAC using a BigDecimal value.
	 */
	public void setTCCTAC(BigDecimal newvalue) {
		fieldTCCTAC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCCTAC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCCTAC() {
		return fieldTCCTAC.getBigDecimal();
	}

	/**
	 * Set field TCFPCA using a String value.
	 */
	public void setTCFPCA(String newvalue) {
		fieldTCFPCA.setString(newvalue);
	}

	/**
	 * Get value of field TCFPCA as a String.
	 */
	public String getTCFPCA() {
		return fieldTCFPCA.getString();
	}

	/**
	 * Set numeric field TCFPCA using a BigDecimal value.
	 */
	public void setTCFPCA(BigDecimal newvalue) {
		fieldTCFPCA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCFPCA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCFPCA() {
		return fieldTCFPCA.getBigDecimal();
	}

	/**
	 * Set field TCTSTS using a String value.
	 */
	public void setTCTSTS(String newvalue) {
		fieldTCTSTS.setString(newvalue);
	}

	/**
	 * Get value of field TCTSTS as a String.
	 */
	public String getTCTSTS() {
		return fieldTCTSTS.getString();
	}

	/**
	 * Set field TCFACT using a String value.
	 */
	public void setTCFACT(String newvalue) {
		fieldTCFACT.setString(newvalue);
	}

	/**
	 * Get value of field TCFACT as a String.
	 */
	public String getTCFACT() {
		return fieldTCFACT.getString();
	}

	/**
	 * Set numeric field TCFACT using a BigDecimal value.
	 */
	public void setTCFACT(BigDecimal newvalue) {
		fieldTCFACT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCFACT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCFACT() {
		return fieldTCFACT.getBigDecimal();
	}

	/**
	 * Set field TCHACT using a String value.
	 */
	public void setTCHACT(String newvalue) {
		fieldTCHACT.setString(newvalue);
	}

	/**
	 * Get value of field TCHACT as a String.
	 */
	public String getTCHACT() {
		return fieldTCHACT.getString();
	}

	/**
	 * Set numeric field TCHACT using a BigDecimal value.
	 */
	public void setTCHACT(BigDecimal newvalue) {
		fieldTCHACT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCHACT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCHACT() {
		return fieldTCHACT.getBigDecimal();
	}

	/**
	 * Set field TCFCAN using a String value.
	 */
	public void setTCFCAN(String newvalue) {
		fieldTCFCAN.setString(newvalue);
	}

	/**
	 * Get value of field TCFCAN as a String.
	 */
	public String getTCFCAN() {
		return fieldTCFCAN.getString();
	}

	/**
	 * Set numeric field TCFCAN using a BigDecimal value.
	 */
	public void setTCFCAN(BigDecimal newvalue) {
		fieldTCFCAN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCFCAN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCFCAN() {
		return fieldTCFCAN.getBigDecimal();
	}

	/**
	 * Set field TCHCAN using a String value.
	 */
	public void setTCHCAN(String newvalue) {
		fieldTCHCAN.setString(newvalue);
	}

	/**
	 * Get value of field TCHCAN as a String.
	 */
	public String getTCHCAN() {
		return fieldTCHCAN.getString();
	}

	/**
	 * Set numeric field TCHCAN using a BigDecimal value.
	 */
	public void setTCHCAN(BigDecimal newvalue) {
		fieldTCHCAN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCHCAN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCHCAN() {
		return fieldTCHCAN.getBigDecimal();
	}

	/**
	 * Set field TCMAIL using a String value.
	 */
	public void setTCMAIL(String newvalue) {
		fieldTCMAIL.setString(newvalue);
	}

	/**
	 * Get value of field TCMAIL as a String.
	 */
	public String getTCMAIL() {
		return fieldTCMAIL.getString();
	}

	/**
	 * Set field TCIMPO using a String value.
	 */
	public void setTCIMPO(String newvalue) {
		fieldTCIMPO.setString(newvalue);
	}

	/**
	 * Get value of field TCIMPO as a String.
	 */
	public String getTCIMPO() {
		return fieldTCIMPO.getString();
	}

	/**
	 * Set numeric field TCIMPO using a BigDecimal value.
	 */
	public void setTCIMPO(BigDecimal newvalue) {
		fieldTCIMPO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field TCIMPO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalTCIMPO() {
		return fieldTCIMPO.getBigDecimal();
	}

	/**
	 * Set field TCOUSER using a String value.
	 */
	public void setTCOUSER(String newvalue) {
		fieldTCOUSER.setString(newvalue);
	}

	/**
	 * Get value of field TCOUSER as a String.
	 */
	public String getTCOUSER() {
		return fieldTCOUSER.getString();
	}

	/**
	 * Set field TCVUSER using a String value.
	 */
	public void setTCVUSER(String newvalue) {
		fieldTCVUSER.setString(newvalue);
	}

	/**
	 * Get value of field TCVUSER as a String.
	 */
	public String getTCVUSER() {
		return fieldTCVUSER.getString();
	}

	/**
	 * Set field TCAUSER using a String value.
	 */
	public void setTCAUSER(String newvalue) {
		fieldTCAUSER.setString(newvalue);
	}

	/**
	 * Get value of field TCAUSER as a String.
	 */
	public String getTCAUSER() {
		return fieldTCAUSER.getString();
	}

	/**
	 * Set field TCODATE using a String value.
	 */
	public void setTCODATE(String newvalue) {
		fieldTCODATE.setString(newvalue);
	}

	/**
	 * Get value of field TCODATE as a String.
	 */
	public String getTCODATE() {
		return fieldTCODATE.getString();
	}

	/**
	 * Set field TCVDATE using a String value.
	 */
	public void setTCVDATE(String newvalue) {
		fieldTCVDATE.setString(newvalue);
	}

	/**
	 * Get value of field TCVDATE as a String.
	 */
	public String getTCVDATE() {
		return fieldTCVDATE.getString();
	}

	/**
	 * Set field TCADATE using a String value.
	 */
	public void setTCADATE(String newvalue) {
		fieldTCADATE.setString(newvalue);
	}

	/**
	 * Get value of field TCADATE as a String.
	 */
	public String getTCADATE() {
		return fieldTCADATE.getString();
	}

}
