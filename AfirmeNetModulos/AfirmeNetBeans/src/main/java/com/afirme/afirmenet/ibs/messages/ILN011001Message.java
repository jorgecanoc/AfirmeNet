package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from ILN011001 physical file
 * definition.
 * 
 * File level identifier is 1030507170633. Record format level identifier is
 * 49B152B339404.
 */
@SuppressWarnings("rawtypes")
public class ILN011001Message extends MessageRecord {
	final static String fldnames[] = { "LN10USER", "LN10LNECUN", "LN10LNENUM",
			"LN10ACCTYP", "LN10PRDCDE", "LN10CURREN", "LN10ACCNUM",
			"LN10BALANC", "LN10INTAMT", "LN10DESCRI", "LN10LNEMT1",
			"LN10LNEMT2", "LN10LNEMT3", "LN10STATUS", "LN10ENDMSG" };
	final static String tnames[] = { "LN10USER", "LN10LNECUN", "LN10LNENUM",
			"LN10ACCTYP", "LN10PRDCDE", "LN10CURREN", "LN10ACCNUM",
			"LN10BALANC", "LN10INTAMT", "LN10DESCRI", "LN10LNEMT1",
			"LN10LNEMT2", "LN10LNEMT3", "LN10STATUS", "LN10ENDMSG" };
	final static String fid = "1030507170633";
	final static String rid = "49B152B339404";
	final static String fmtname = "ILN011001";
	final int FIELDCOUNT = 15;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldLN10USER = null;
	private DecimalField fieldLN10LNECUN = null;
	private DecimalField fieldLN10LNENUM = null;
	private CharacterField fieldLN10ACCTYP = null;
	private CharacterField fieldLN10PRDCDE = null;
	private CharacterField fieldLN10CURREN = null;
	private DecimalField fieldLN10ACCNUM = null;
	private DecimalField fieldLN10BALANC = null;
	private DecimalField fieldLN10INTAMT = null;
	private CharacterField fieldLN10DESCRI = null;
	private DecimalField fieldLN10LNEMT1 = null;
	private DecimalField fieldLN10LNEMT2 = null;
	private DecimalField fieldLN10LNEMT3 = null;
	private CharacterField fieldLN10STATUS = null;
	private CharacterField fieldLN10ENDMSG = null;

	/**
	 * Constructor for ILN011001Message.
	 */
	public ILN011001Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 124;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldLN10USER = new CharacterField(message, HEADERSIZE + 0,
				10, "LN10USER");
		fields[1] = fieldLN10LNECUN = new DecimalField(message,
				HEADERSIZE + 10, 10, 0, "LN10LNECUN");
		fields[2] = fieldLN10LNENUM = new DecimalField(message,
				HEADERSIZE + 20, 5, 0, "LN10LNENUM");
		fields[3] = fieldLN10ACCTYP = new CharacterField(message,
				HEADERSIZE + 25, 4, "LN10ACCTYP");
		fields[4] = fieldLN10PRDCDE = new CharacterField(message,
				HEADERSIZE + 29, 4, "LN10PRDCDE");
		fields[5] = fieldLN10CURREN = new CharacterField(message,
				HEADERSIZE + 33, 3, "LN10CURREN");
		fields[6] = fieldLN10ACCNUM = new DecimalField(message,
				HEADERSIZE + 36, 13, 0, "LN10ACCNUM");
		fields[7] = fieldLN10BALANC = new DecimalField(message,
				HEADERSIZE + 49, 17, 2, "LN10BALANC");
		fields[8] = fieldLN10INTAMT = new DecimalField(message,
				HEADERSIZE + 66, 17, 2, "LN10INTAMT");
		fields[9] = fieldLN10DESCRI = new CharacterField(message,
				HEADERSIZE + 83, 30, "LN10DESCRI");
		fields[10] = fieldLN10LNEMT1 = new DecimalField(message,
				HEADERSIZE + 113, 3, 0, "LN10LNEMT1");
		fields[11] = fieldLN10LNEMT2 = new DecimalField(message,
				HEADERSIZE + 116, 3, 0, "LN10LNEMT2");
		fields[12] = fieldLN10LNEMT3 = new DecimalField(message,
				HEADERSIZE + 119, 3, 0, "LN10LNEMT3");
		fields[13] = fieldLN10STATUS = new CharacterField(message,
				HEADERSIZE + 122, 1, "LN10STATUS");
		fields[14] = fieldLN10ENDMSG = new CharacterField(message,
				HEADERSIZE + 123, 1, "LN10ENDMSG");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field LN10USER using a String value.
	 */
	public void setLN10USER(String newvalue) {
		fieldLN10USER.setString(newvalue);
	}

	/**
	 * Get value of field LN10USER as a String.
	 */
	public String getLN10USER() {
		return fieldLN10USER.getString();
	}

	/**
	 * Set field LN10LNECUN using a String value.
	 */
	public void setLN10LNECUN(String newvalue) {
		fieldLN10LNECUN.setString(newvalue);
	}

	/**
	 * Get value of field LN10LNECUN as a String.
	 */
	public String getLN10LNECUN() {
		return fieldLN10LNECUN.getString();
	}

	/**
	 * Set numeric field LN10LNECUN using a BigDecimal value.
	 */
	public void setLN10LNECUN(BigDecimal newvalue) {
		fieldLN10LNECUN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field LN10LNECUN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalLN10LNECUN() {
		return fieldLN10LNECUN.getBigDecimal();
	}

	/**
	 * Set field LN10LNENUM using a String value.
	 */
	public void setLN10LNENUM(String newvalue) {
		fieldLN10LNENUM.setString(newvalue);
	}

	/**
	 * Get value of field LN10LNENUM as a String.
	 */
	public String getLN10LNENUM() {
		return fieldLN10LNENUM.getString();
	}

	/**
	 * Set numeric field LN10LNENUM using a BigDecimal value.
	 */
	public void setLN10LNENUM(BigDecimal newvalue) {
		fieldLN10LNENUM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field LN10LNENUM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalLN10LNENUM() {
		return fieldLN10LNENUM.getBigDecimal();
	}

	/**
	 * Set field LN10ACCTYP using a String value.
	 */
	public void setLN10ACCTYP(String newvalue) {
		fieldLN10ACCTYP.setString(newvalue);
	}

	/**
	 * Get value of field LN10ACCTYP as a String.
	 */
	public String getLN10ACCTYP() {
		return fieldLN10ACCTYP.getString();
	}

	/**
	 * Set field LN10PRDCDE using a String value.
	 */
	public void setLN10PRDCDE(String newvalue) {
		fieldLN10PRDCDE.setString(newvalue);
	}

	/**
	 * Get value of field LN10PRDCDE as a String.
	 */
	public String getLN10PRDCDE() {
		return fieldLN10PRDCDE.getString();
	}

	/**
	 * Set field LN10CURREN using a String value.
	 */
	public void setLN10CURREN(String newvalue) {
		fieldLN10CURREN.setString(newvalue);
	}

	/**
	 * Get value of field LN10CURREN as a String.
	 */
	public String getLN10CURREN() {
		return fieldLN10CURREN.getString();
	}

	/**
	 * Set field LN10ACCNUM using a String value.
	 */
	public void setLN10ACCNUM(String newvalue) {
		fieldLN10ACCNUM.setString(newvalue);
	}

	/**
	 * Get value of field LN10ACCNUM as a String.
	 */
	public String getLN10ACCNUM() {
		return fieldLN10ACCNUM.getString();
	}

	/**
	 * Set numeric field LN10ACCNUM using a BigDecimal value.
	 */
	public void setLN10ACCNUM(BigDecimal newvalue) {
		fieldLN10ACCNUM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field LN10ACCNUM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalLN10ACCNUM() {
		return fieldLN10ACCNUM.getBigDecimal();
	}

	/**
	 * Set field LN10BALANC using a String value.
	 */
	public void setLN10BALANC(String newvalue) {
		fieldLN10BALANC.setString(newvalue);
	}

	/**
	 * Get value of field LN10BALANC as a String.
	 */
	public String getLN10BALANC() {
		return fieldLN10BALANC.getString();
	}

	/**
	 * Set numeric field LN10BALANC using a BigDecimal value.
	 */
	public void setLN10BALANC(BigDecimal newvalue) {
		fieldLN10BALANC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field LN10BALANC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalLN10BALANC() {
		return fieldLN10BALANC.getBigDecimal();
	}

	/**
	 * Set field LN10INTAMT using a String value.
	 */
	public void setLN10INTAMT(String newvalue) {
		fieldLN10INTAMT.setString(newvalue);
	}

	/**
	 * Get value of field LN10INTAMT as a String.
	 */
	public String getLN10INTAMT() {
		return fieldLN10INTAMT.getString();
	}

	/**
	 * Set numeric field LN10INTAMT using a BigDecimal value.
	 */
	public void setLN10INTAMT(BigDecimal newvalue) {
		fieldLN10INTAMT.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field LN10INTAMT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalLN10INTAMT() {
		return fieldLN10INTAMT.getBigDecimal();
	}

	/**
	 * Set field LN10DESCRI using a String value.
	 */
	public void setLN10DESCRI(String newvalue) {
		fieldLN10DESCRI.setString(newvalue);
	}

	/**
	 * Get value of field LN10DESCRI as a String.
	 */
	public String getLN10DESCRI() {
		return fieldLN10DESCRI.getString();
	}

	/**
	 * Set field LN10LNEMT1 using a String value.
	 */
	public void setLN10LNEMT1(String newvalue) {
		fieldLN10LNEMT1.setString(newvalue);
	}

	/**
	 * Get value of field LN10LNEMT1 as a String.
	 */
	public String getLN10LNEMT1() {
		return fieldLN10LNEMT1.getString();
	}

	/**
	 * Set numeric field LN10LNEMT1 using a BigDecimal value.
	 */
	public void setLN10LNEMT1(BigDecimal newvalue) {
		fieldLN10LNEMT1.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field LN10LNEMT1 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalLN10LNEMT1() {
		return fieldLN10LNEMT1.getBigDecimal();
	}

	/**
	 * Set field LN10LNEMT2 using a String value.
	 */
	public void setLN10LNEMT2(String newvalue) {
		fieldLN10LNEMT2.setString(newvalue);
	}

	/**
	 * Get value of field LN10LNEMT2 as a String.
	 */
	public String getLN10LNEMT2() {
		return fieldLN10LNEMT2.getString();
	}

	/**
	 * Set numeric field LN10LNEMT2 using a BigDecimal value.
	 */
	public void setLN10LNEMT2(BigDecimal newvalue) {
		fieldLN10LNEMT2.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field LN10LNEMT2 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalLN10LNEMT2() {
		return fieldLN10LNEMT2.getBigDecimal();
	}

	/**
	 * Set field LN10LNEMT3 using a String value.
	 */
	public void setLN10LNEMT3(String newvalue) {
		fieldLN10LNEMT3.setString(newvalue);
	}

	/**
	 * Get value of field LN10LNEMT3 as a String.
	 */
	public String getLN10LNEMT3() {
		return fieldLN10LNEMT3.getString();
	}

	/**
	 * Set numeric field LN10LNEMT3 using a BigDecimal value.
	 */
	public void setLN10LNEMT3(BigDecimal newvalue) {
		fieldLN10LNEMT3.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field LN10LNEMT3 as a BigDecimal.
	 */
	public BigDecimal getBigDecimalLN10LNEMT3() {
		return fieldLN10LNEMT3.getBigDecimal();
	}

	/**
	 * Set field LN10STATUS using a String value.
	 */
	public void setLN10STATUS(String newvalue) {
		fieldLN10STATUS.setString(newvalue);
	}

	/**
	 * Get value of field LN10STATUS as a String.
	 */
	public String getLN10STATUS() {
		return fieldLN10STATUS.getString();
	}

	/**
	 * Set field LN10ENDMSG using a String value.
	 */
	public void setLN10ENDMSG(String newvalue) {
		fieldLN10ENDMSG.setString(newvalue);
	}

	/**
	 * Get value of field LN10ENDMSG as a String.
	 */
	public String getLN10ENDMSG() {
		return fieldLN10ENDMSG.getString();
	}

}
