package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;
import java.util.Hashtable;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from NOMDETA01 physical file
 * definition.
 * 
 * File level identifier is 1110626134503. Record format level identifier is
 * 58FAEA8C4D700.
 */
@SuppressWarnings("rawtypes")
public class NOMDETA01Message extends MessageRecord {
	final static String fldnames[] = { "INCOPE", "INCUSR", "INCREF",
			"INCFECHA", "INCHORA", "INCXPMTV", "INCARCHIVO", "INCNARR",
			"INCBANCORD", "INCCTACGO", "INCTIPCTAO", "INCMONEDA", "INCDIV",
			"INCTIPO", "INCBANCO", "INCCUENTA", "INCTIPOCTA", "INCIMPORTE",
			"INCBENEF", "INCRFN", "INCLEYENDA", "INCRFC", "INCIVA", "INCCOM",
			"INCIVC", "INCFECPROG", "INCHORPROG", "INCTIPNOM", "INCFREC",
			"INCESTATUS", "INCFECREG", "INCHORREG", "INCUSUREG", "INCFECAPR",
			"INCHORAPR", "INCUSUAPR", "INCFECAPL", "INCHORAPL", "INCUSUAPL",
			"INCUS1", "INCUS2", "INCUS3", "INCMAILAD", "INCDATOS", "INCERROR",
			"INCDESC", "INCRENGLON", "INCCVEDUP" };
	final static String tnames[] = { "INCOPE", "INCUSR", "INCREF", "INCFECHA",
			"INCHORA", "INCXPMTV", "INCARCHIVO", "INCNARR", "INCBANCORD",
			"INCCTACGO", "INCTIPCTAO", "INCMONEDA", "INCDIV", "INCTIPO",
			"INCBANCO", "INCCUENTA", "INCTIPOCTA", "INCIMPORTE", "INCBENEF",
			"INCRFN", "INCLEYENDA", "INCRFC", "INCIVA", "INCCOM", "INCIVC",
			"INCFECPROG", "INCHORPROG", "INCTIPNOM", "INCFREC", "INCESTATUS",
			"INCFECREG", "INCHORREG", "INCUSUREG", "INCFECAPR", "INCHORAPR",
			"INCUSUAPR", "INCFECAPL", "INCHORAPL", "INCUSUAPL", "INCUS1",
			"INCUS2", "INCUS3", "INCMAILAD", "INCDATOS", "INCERROR", "INCDESC",
			"INCRENGLON", "INCCVEDUP" };
	final static String fid = "1110626134503";
	final static String rid = "58FAEA8C4D700";
	final static String fmtname = "NOMDETA01";
	final int FIELDCOUNT = 48;
	private static Hashtable tlookup = new Hashtable();
	private CharacterField fieldINCOPE = null;
	private CharacterField fieldINCUSR = null;
	private CharacterField fieldINCREF = null;
	private DecimalField fieldINCFECHA = null;
	private DecimalField fieldINCHORA = null;
	private CharacterField fieldINCXPMTV = null;
	private CharacterField fieldINCARCHIVO = null;
	private CharacterField fieldINCNARR = null;
	private DecimalField fieldINCBANCORD = null;
	private DecimalField fieldINCCTACGO = null;
	private DecimalField fieldINCTIPCTAO = null;
	private CharacterField fieldINCMONEDA = null;
	private CharacterField fieldINCDIV = null;
	private CharacterField fieldINCTIPO = null;
	private DecimalField fieldINCBANCO = null;
	private CharacterField fieldINCCUENTA = null;
	private DecimalField fieldINCTIPOCTA = null;
	private DecimalField fieldINCIMPORTE = null;
	private CharacterField fieldINCBENEF = null;
	private DecimalField fieldINCRFN = null;
	private CharacterField fieldINCLEYENDA = null;
	private CharacterField fieldINCRFC = null;
	private DecimalField fieldINCIVA = null;
	private DecimalField fieldINCCOM = null;
	private DecimalField fieldINCIVC = null;
	private DecimalField fieldINCFECPROG = null;
	private DecimalField fieldINCHORPROG = null;
	private CharacterField fieldINCTIPNOM = null;
	private CharacterField fieldINCFREC = null;
	private CharacterField fieldINCESTATUS = null;
	private DecimalField fieldINCFECREG = null;
	private DecimalField fieldINCHORREG = null;
	private CharacterField fieldINCUSUREG = null;
	private DecimalField fieldINCFECAPR = null;
	private DecimalField fieldINCHORAPR = null;
	private CharacterField fieldINCUSUAPR = null;
	private DecimalField fieldINCFECAPL = null;
	private DecimalField fieldINCHORAPL = null;
	private CharacterField fieldINCUSUAPL = null;
	private CharacterField fieldINCUS1 = null;
	private CharacterField fieldINCUS2 = null;
	private CharacterField fieldINCUS3 = null;
	private CharacterField fieldINCMAILAD = null;
	private CharacterField fieldINCDATOS = null;
	private CharacterField fieldINCERROR = null;
	private CharacterField fieldINCDESC = null;
	private DecimalField fieldINCRENGLON = null;
	private CharacterField fieldINCCVEDUP = null;

	/**
	 * Constructor for NOMDETA01Message.
	 */
	public NOMDETA01Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	@SuppressWarnings("unchecked")
	protected void createFields() {
		recordsize = 868;
		fileid = fid;
		recordid = rid;
		message = new byte[getByteLength()];
		formatname = fmtname;
		fieldnames = fldnames;
		tagnames = tnames;
		fields = new MessageField[FIELDCOUNT];

		fields[0] = fieldINCOPE = new CharacterField(message, HEADERSIZE + 0,
				1, "INCOPE");
		fields[1] = fieldINCUSR = new CharacterField(message, HEADERSIZE + 1,
				10, "INCUSR");
		fields[2] = fieldINCREF = new CharacterField(message, HEADERSIZE + 11,
				12, "INCREF");
		fields[3] = fieldINCFECHA = new DecimalField(message, HEADERSIZE + 23,
				9, 0, "INCFECHA");
		fields[4] = fieldINCHORA = new DecimalField(message, HEADERSIZE + 32,
				7, 0, "INCHORA");
		fields[5] = fieldINCXPMTV = new CharacterField(message,
				HEADERSIZE + 39, 2, "INCXPMTV");
		fields[6] = fieldINCARCHIVO = new CharacterField(message,
				HEADERSIZE + 41, 20, "INCARCHIVO");
		fields[7] = fieldINCNARR = new CharacterField(message, HEADERSIZE + 61,
				40, "INCNARR");
		fields[8] = fieldINCBANCORD = new DecimalField(message,
				HEADERSIZE + 101, 5, 0, "INCBANCORD");
		fields[9] = fieldINCCTACGO = new DecimalField(message,
				HEADERSIZE + 106, 21, 0, "INCCTACGO");
		fields[10] = fieldINCTIPCTAO = new DecimalField(message,
				HEADERSIZE + 127, 3, 0, "INCTIPCTAO");
		fields[11] = fieldINCMONEDA = new CharacterField(message,
				HEADERSIZE + 130, 3, "INCMONEDA");
		fields[12] = fieldINCDIV = new CharacterField(message,
				HEADERSIZE + 133, 2, "INCDIV");
		fields[13] = fieldINCTIPO = new CharacterField(message,
				HEADERSIZE + 135, 2, "INCTIPO");
		fields[14] = fieldINCBANCO = new DecimalField(message,
				HEADERSIZE + 137, 5, 0, "INCBANCO");
		fields[15] = fieldINCCUENTA = new CharacterField(message,
				HEADERSIZE + 142, 20, "INCCUENTA");
		fields[16] = fieldINCTIPOCTA = new DecimalField(message,
				HEADERSIZE + 162, 3, 0, "INCTIPOCTA");
		fields[17] = fieldINCIMPORTE = new DecimalField(message,
				HEADERSIZE + 165, 17, 2, "INCIMPORTE");
		fields[18] = fieldINCBENEF = new CharacterField(message,
				HEADERSIZE + 182, 40, "INCBENEF");
		fields[19] = fieldINCRFN = new DecimalField(message, HEADERSIZE + 222,
				10, 0, "INCRFN");
		fields[20] = fieldINCLEYENDA = new CharacterField(message,
				HEADERSIZE + 232, 40, "INCLEYENDA");
		fields[21] = fieldINCRFC = new CharacterField(message,
				HEADERSIZE + 272, 18, "INCRFC");
		fields[22] = fieldINCIVA = new DecimalField(message, HEADERSIZE + 290,
				15, 2, "INCIVA");
		fields[23] = fieldINCCOM = new DecimalField(message, HEADERSIZE + 305,
				15, 2, "INCCOM");
		fields[24] = fieldINCIVC = new DecimalField(message, HEADERSIZE + 320,
				15, 2, "INCIVC");
		fields[25] = fieldINCFECPROG = new DecimalField(message,
				HEADERSIZE + 335, 9, 0, "INCFECPROG");
		fields[26] = fieldINCHORPROG = new DecimalField(message,
				HEADERSIZE + 344, 7, 0, "INCHORPROG");
		fields[27] = fieldINCTIPNOM = new CharacterField(message,
				HEADERSIZE + 351, 1, "INCTIPNOM");
		fields[28] = fieldINCFREC = new CharacterField(message,
				HEADERSIZE + 352, 1, "INCFREC");
		fields[29] = fieldINCESTATUS = new CharacterField(message,
				HEADERSIZE + 353, 1, "INCESTATUS");
		fields[30] = fieldINCFECREG = new DecimalField(message,
				HEADERSIZE + 354, 9, 0, "INCFECREG");
		fields[31] = fieldINCHORREG = new DecimalField(message,
				HEADERSIZE + 363, 7, 0, "INCHORREG");
		fields[32] = fieldINCUSUREG = new CharacterField(message,
				HEADERSIZE + 370, 10, "INCUSUREG");
		fields[33] = fieldINCFECAPR = new DecimalField(message,
				HEADERSIZE + 380, 9, 0, "INCFECAPR");
		fields[34] = fieldINCHORAPR = new DecimalField(message,
				HEADERSIZE + 389, 7, 0, "INCHORAPR");
		fields[35] = fieldINCUSUAPR = new CharacterField(message,
				HEADERSIZE + 396, 10, "INCUSUAPR");
		fields[36] = fieldINCFECAPL = new DecimalField(message,
				HEADERSIZE + 406, 9, 0, "INCFECAPL");
		fields[37] = fieldINCHORAPL = new DecimalField(message,
				HEADERSIZE + 415, 7, 0, "INCHORAPL");
		fields[38] = fieldINCUSUAPL = new CharacterField(message,
				HEADERSIZE + 422, 10, "INCUSUAPL");
		fields[39] = fieldINCUS1 = new CharacterField(message,
				HEADERSIZE + 432, 10, "INCUS1");
		fields[40] = fieldINCUS2 = new CharacterField(message,
				HEADERSIZE + 442, 10, "INCUS2");
		fields[41] = fieldINCUS3 = new CharacterField(message,
				HEADERSIZE + 452, 10, "INCUS3");
		fields[42] = fieldINCMAILAD = new CharacterField(message,
				HEADERSIZE + 462, 45, "INCMAILAD");
		fields[43] = fieldINCDATOS = new CharacterField(message,
				HEADERSIZE + 507, 300, "INCDATOS");
		fields[44] = fieldINCERROR = new CharacterField(message,
				HEADERSIZE + 807, 2, "INCERROR");
		fields[45] = fieldINCDESC = new CharacterField(message,
				HEADERSIZE + 809, 50, "INCDESC");
		fields[46] = fieldINCRENGLON = new DecimalField(message,
				HEADERSIZE + 859, 8, 0, "INCRENGLON");
		fields[47] = fieldINCCVEDUP = new CharacterField(message,
				HEADERSIZE + 867, 1, "INCCVEDUP");

		synchronized (tlookup) {
			if (tlookup.isEmpty()) {
				for (int i = 0; i < tnames.length; i++)
					tlookup.put(tnames[i], new Integer(i));
			}
		}

		taglookup = tlookup;
	}

	/**
	 * Set field INCOPE using a String value.
	 */
	public void setINCOPE(String newvalue) {
		fieldINCOPE.setString(newvalue);
	}

	/**
	 * Get value of field INCOPE as a String.
	 */
	public String getINCOPE() {
		return fieldINCOPE.getString();
	}

	/**
	 * Set field INCUSR using a String value.
	 */
	public void setINCUSR(String newvalue) {
		fieldINCUSR.setString(newvalue);
	}

	/**
	 * Get value of field INCUSR as a String.
	 */
	public String getINCUSR() {
		return fieldINCUSR.getString();
	}

	/**
	 * Set field INCREF using a String value.
	 */
	public void setINCREF(String newvalue) {
		fieldINCREF.setString(newvalue);
	}

	/**
	 * Get value of field INCREF as a String.
	 */
	public String getINCREF() {
		return fieldINCREF.getString();
	}

	/**
	 * Set field INCFECHA using a String value.
	 */
	public void setINCFECHA(String newvalue) {
		fieldINCFECHA.setString(newvalue);
	}

	/**
	 * Get value of field INCFECHA as a String.
	 */
	public String getINCFECHA() {
		return fieldINCFECHA.getString();
	}

	/**
	 * Set numeric field INCFECHA using a BigDecimal value.
	 */
	public void setINCFECHA(BigDecimal newvalue) {
		fieldINCFECHA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFECHA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFECHA() {
		return fieldINCFECHA.getBigDecimal();
	}

	/**
	 * Set field INCHORA using a String value.
	 */
	public void setINCHORA(String newvalue) {
		fieldINCHORA.setString(newvalue);
	}

	/**
	 * Get value of field INCHORA as a String.
	 */
	public String getINCHORA() {
		return fieldINCHORA.getString();
	}

	/**
	 * Set numeric field INCHORA using a BigDecimal value.
	 */
	public void setINCHORA(BigDecimal newvalue) {
		fieldINCHORA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHORA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHORA() {
		return fieldINCHORA.getBigDecimal();
	}

	/**
	 * Set field INCXPMTV using a String value.
	 */
	public void setINCXPMTV(String newvalue) {
		fieldINCXPMTV.setString(newvalue);
	}

	/**
	 * Get value of field INCXPMTV as a String.
	 */
	public String getINCXPMTV() {
		return fieldINCXPMTV.getString();
	}

	/**
	 * Set field INCARCHIVO using a String value.
	 */
	public void setINCARCHIVO(String newvalue) {
		fieldINCARCHIVO.setString(newvalue);
	}

	/**
	 * Get value of field INCARCHIVO as a String.
	 */
	public String getINCARCHIVO() {
		return fieldINCARCHIVO.getString();
	}

	/**
	 * Set field INCNARR using a String value.
	 */
	public void setINCNARR(String newvalue) {
		fieldINCNARR.setString(newvalue);
	}

	/**
	 * Get value of field INCNARR as a String.
	 */
	public String getINCNARR() {
		return fieldINCNARR.getString();
	}

	/**
	 * Set field INCBANCORD using a String value.
	 */
	public void setINCBANCORD(String newvalue) {
		fieldINCBANCORD.setString(newvalue);
	}

	/**
	 * Get value of field INCBANCORD as a String.
	 */
	public String getINCBANCORD() {
		return fieldINCBANCORD.getString();
	}

	/**
	 * Set numeric field INCBANCORD using a BigDecimal value.
	 */
	public void setINCBANCORD(BigDecimal newvalue) {
		fieldINCBANCORD.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCBANCORD as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCBANCORD() {
		return fieldINCBANCORD.getBigDecimal();
	}

	/**
	 * Set field INCCTACGO using a String value.
	 */
	public void setINCCTACGO(String newvalue) {
		fieldINCCTACGO.setString(newvalue);
	}

	/**
	 * Get value of field INCCTACGO as a String.
	 */
	public String getINCCTACGO() {
		return fieldINCCTACGO.getString();
	}

	/**
	 * Set numeric field INCCTACGO using a BigDecimal value.
	 */
	public void setINCCTACGO(BigDecimal newvalue) {
		fieldINCCTACGO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCCTACGO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCCTACGO() {
		return fieldINCCTACGO.getBigDecimal();
	}

	/**
	 * Set field INCTIPCTAO using a String value.
	 */
	public void setINCTIPCTAO(String newvalue) {
		fieldINCTIPCTAO.setString(newvalue);
	}

	/**
	 * Get value of field INCTIPCTAO as a String.
	 */
	public String getINCTIPCTAO() {
		return fieldINCTIPCTAO.getString();
	}

	/**
	 * Set numeric field INCTIPCTAO using a BigDecimal value.
	 */
	public void setINCTIPCTAO(BigDecimal newvalue) {
		fieldINCTIPCTAO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCTIPCTAO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCTIPCTAO() {
		return fieldINCTIPCTAO.getBigDecimal();
	}

	/**
	 * Set field INCMONEDA using a String value.
	 */
	public void setINCMONEDA(String newvalue) {
		fieldINCMONEDA.setString(newvalue);
	}

	/**
	 * Get value of field INCMONEDA as a String.
	 */
	public String getINCMONEDA() {
		return fieldINCMONEDA.getString();
	}

	/**
	 * Set field INCDIV using a String value.
	 */
	public void setINCDIV(String newvalue) {
		fieldINCDIV.setString(newvalue);
	}

	/**
	 * Get value of field INCDIV as a String.
	 */
	public String getINCDIV() {
		return fieldINCDIV.getString();
	}

	/**
	 * Set field INCTIPO using a String value.
	 */
	public void setINCTIPO(String newvalue) {
		fieldINCTIPO.setString(newvalue);
	}

	/**
	 * Get value of field INCTIPO as a String.
	 */
	public String getINCTIPO() {
		return fieldINCTIPO.getString();
	}

	/**
	 * Set field INCBANCO using a String value.
	 */
	public void setINCBANCO(String newvalue) {
		fieldINCBANCO.setString(newvalue);
	}

	/**
	 * Get value of field INCBANCO as a String.
	 */
	public String getINCBANCO() {
		return fieldINCBANCO.getString();
	}

	/**
	 * Set numeric field INCBANCO using a BigDecimal value.
	 */
	public void setINCBANCO(BigDecimal newvalue) {
		fieldINCBANCO.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCBANCO as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCBANCO() {
		return fieldINCBANCO.getBigDecimal();
	}

	/**
	 * Set field INCCUENTA using a String value.
	 */
	public void setINCCUENTA(String newvalue) {
		fieldINCCUENTA.setString(newvalue);
	}

	/**
	 * Get value of field INCCUENTA as a String.
	 */
	public String getINCCUENTA() {
		return fieldINCCUENTA.getString();
	}

	/**
	 * Set field INCTIPOCTA using a String value.
	 */
	public void setINCTIPOCTA(String newvalue) {
		fieldINCTIPOCTA.setString(newvalue);
	}

	/**
	 * Get value of field INCTIPOCTA as a String.
	 */
	public String getINCTIPOCTA() {
		return fieldINCTIPOCTA.getString();
	}

	/**
	 * Set numeric field INCTIPOCTA using a BigDecimal value.
	 */
	public void setINCTIPOCTA(BigDecimal newvalue) {
		fieldINCTIPOCTA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCTIPOCTA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCTIPOCTA() {
		return fieldINCTIPOCTA.getBigDecimal();
	}

	/**
	 * Set field INCIMPORTE using a String value.
	 */
	public void setINCIMPORTE(String newvalue) {
		fieldINCIMPORTE.setString(newvalue);
	}

	/**
	 * Get value of field INCIMPORTE as a String.
	 */
	public String getINCIMPORTE() {
		return fieldINCIMPORTE.getString();
	}

	/**
	 * Set numeric field INCIMPORTE using a BigDecimal value.
	 */
	public void setINCIMPORTE(BigDecimal newvalue) {
		fieldINCIMPORTE.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCIMPORTE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCIMPORTE() {
		return fieldINCIMPORTE.getBigDecimal();
	}

	/**
	 * Set field INCBENEF using a String value.
	 */
	public void setINCBENEF(String newvalue) {
		fieldINCBENEF.setString(newvalue);
	}

	/**
	 * Get value of field INCBENEF as a String.
	 */
	public String getINCBENEF() {
		return fieldINCBENEF.getString();
	}

	/**
	 * Set field INCRFN using a String value.
	 */
	public void setINCRFN(String newvalue) {
		fieldINCRFN.setString(newvalue);
	}

	/**
	 * Get value of field INCRFN as a String.
	 */
	public String getINCRFN() {
		return fieldINCRFN.getString();
	}

	/**
	 * Set numeric field INCRFN using a BigDecimal value.
	 */
	public void setINCRFN(BigDecimal newvalue) {
		fieldINCRFN.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCRFN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCRFN() {
		return fieldINCRFN.getBigDecimal();
	}

	/**
	 * Set field INCLEYENDA using a String value.
	 */
	public void setINCLEYENDA(String newvalue) {
		fieldINCLEYENDA.setString(newvalue);
	}

	/**
	 * Get value of field INCLEYENDA as a String.
	 */
	public String getINCLEYENDA() {
		return fieldINCLEYENDA.getString();
	}

	/**
	 * Set field INCRFC using a String value.
	 */
	public void setINCRFC(String newvalue) {
		fieldINCRFC.setString(newvalue);
	}

	/**
	 * Get value of field INCRFC as a String.
	 */
	public String getINCRFC() {
		return fieldINCRFC.getString();
	}

	/**
	 * Set field INCIVA using a String value.
	 */
	public void setINCIVA(String newvalue) {
		fieldINCIVA.setString(newvalue);
	}

	/**
	 * Get value of field INCIVA as a String.
	 */
	public String getINCIVA() {
		return fieldINCIVA.getString();
	}

	/**
	 * Set numeric field INCIVA using a BigDecimal value.
	 */
	public void setINCIVA(BigDecimal newvalue) {
		fieldINCIVA.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCIVA as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCIVA() {
		return fieldINCIVA.getBigDecimal();
	}

	/**
	 * Set field INCCOM using a String value.
	 */
	public void setINCCOM(String newvalue) {
		fieldINCCOM.setString(newvalue);
	}

	/**
	 * Get value of field INCCOM as a String.
	 */
	public String getINCCOM() {
		return fieldINCCOM.getString();
	}

	/**
	 * Set numeric field INCCOM using a BigDecimal value.
	 */
	public void setINCCOM(BigDecimal newvalue) {
		fieldINCCOM.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCCOM as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCCOM() {
		return fieldINCCOM.getBigDecimal();
	}

	/**
	 * Set field INCIVC using a String value.
	 */
	public void setINCIVC(String newvalue) {
		fieldINCIVC.setString(newvalue);
	}

	/**
	 * Get value of field INCIVC as a String.
	 */
	public String getINCIVC() {
		return fieldINCIVC.getString();
	}

	/**
	 * Set numeric field INCIVC using a BigDecimal value.
	 */
	public void setINCIVC(BigDecimal newvalue) {
		fieldINCIVC.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCIVC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCIVC() {
		return fieldINCIVC.getBigDecimal();
	}

	/**
	 * Set field INCFECPROG using a String value.
	 */
	public void setINCFECPROG(String newvalue) {
		fieldINCFECPROG.setString(newvalue);
	}

	/**
	 * Get value of field INCFECPROG as a String.
	 */
	public String getINCFECPROG() {
		return fieldINCFECPROG.getString();
	}

	/**
	 * Set numeric field INCFECPROG using a BigDecimal value.
	 */
	public void setINCFECPROG(BigDecimal newvalue) {
		fieldINCFECPROG.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFECPROG as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFECPROG() {
		return fieldINCFECPROG.getBigDecimal();
	}

	/**
	 * Set field INCHORPROG using a String value.
	 */
	public void setINCHORPROG(String newvalue) {
		fieldINCHORPROG.setString(newvalue);
	}

	/**
	 * Get value of field INCHORPROG as a String.
	 */
	public String getINCHORPROG() {
		return fieldINCHORPROG.getString();
	}

	/**
	 * Set numeric field INCHORPROG using a BigDecimal value.
	 */
	public void setINCHORPROG(BigDecimal newvalue) {
		fieldINCHORPROG.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHORPROG as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHORPROG() {
		return fieldINCHORPROG.getBigDecimal();
	}

	/**
	 * Set field INCTIPNOM using a String value.
	 */
	public void setINCTIPNOM(String newvalue) {
		fieldINCTIPNOM.setString(newvalue);
	}

	/**
	 * Get value of field INCTIPNOM as a String.
	 */
	public String getINCTIPNOM() {
		return fieldINCTIPNOM.getString();
	}

	/**
	 * Set field INCFREC using a String value.
	 */
	public void setINCFREC(String newvalue) {
		fieldINCFREC.setString(newvalue);
	}

	/**
	 * Get value of field INCFREC as a String.
	 */
	public String getINCFREC() {
		return fieldINCFREC.getString();
	}

	/**
	 * Set field INCESTATUS using a String value.
	 */
	public void setINCESTATUS(String newvalue) {
		fieldINCESTATUS.setString(newvalue);
	}

	/**
	 * Get value of field INCESTATUS as a String.
	 */
	public String getINCESTATUS() {
		return fieldINCESTATUS.getString();
	}

	/**
	 * Set field INCFECREG using a String value.
	 */
	public void setINCFECREG(String newvalue) {
		fieldINCFECREG.setString(newvalue);
	}

	/**
	 * Get value of field INCFECREG as a String.
	 */
	public String getINCFECREG() {
		return fieldINCFECREG.getString();
	}

	/**
	 * Set numeric field INCFECREG using a BigDecimal value.
	 */
	public void setINCFECREG(BigDecimal newvalue) {
		fieldINCFECREG.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFECREG as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFECREG() {
		return fieldINCFECREG.getBigDecimal();
	}

	/**
	 * Set field INCHORREG using a String value.
	 */
	public void setINCHORREG(String newvalue) {
		fieldINCHORREG.setString(newvalue);
	}

	/**
	 * Get value of field INCHORREG as a String.
	 */
	public String getINCHORREG() {
		return fieldINCHORREG.getString();
	}

	/**
	 * Set numeric field INCHORREG using a BigDecimal value.
	 */
	public void setINCHORREG(BigDecimal newvalue) {
		fieldINCHORREG.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHORREG as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHORREG() {
		return fieldINCHORREG.getBigDecimal();
	}

	/**
	 * Set field INCUSUREG using a String value.
	 */
	public void setINCUSUREG(String newvalue) {
		fieldINCUSUREG.setString(newvalue);
	}

	/**
	 * Get value of field INCUSUREG as a String.
	 */
	public String getINCUSUREG() {
		return fieldINCUSUREG.getString();
	}

	/**
	 * Set field INCFECAPR using a String value.
	 */
	public void setINCFECAPR(String newvalue) {
		fieldINCFECAPR.setString(newvalue);
	}

	/**
	 * Get value of field INCFECAPR as a String.
	 */
	public String getINCFECAPR() {
		return fieldINCFECAPR.getString();
	}

	/**
	 * Set numeric field INCFECAPR using a BigDecimal value.
	 */
	public void setINCFECAPR(BigDecimal newvalue) {
		fieldINCFECAPR.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFECAPR as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFECAPR() {
		return fieldINCFECAPR.getBigDecimal();
	}

	/**
	 * Set field INCHORAPR using a String value.
	 */
	public void setINCHORAPR(String newvalue) {
		fieldINCHORAPR.setString(newvalue);
	}

	/**
	 * Get value of field INCHORAPR as a String.
	 */
	public String getINCHORAPR() {
		return fieldINCHORAPR.getString();
	}

	/**
	 * Set numeric field INCHORAPR using a BigDecimal value.
	 */
	public void setINCHORAPR(BigDecimal newvalue) {
		fieldINCHORAPR.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHORAPR as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHORAPR() {
		return fieldINCHORAPR.getBigDecimal();
	}

	/**
	 * Set field INCUSUAPR using a String value.
	 */
	public void setINCUSUAPR(String newvalue) {
		fieldINCUSUAPR.setString(newvalue);
	}

	/**
	 * Get value of field INCUSUAPR as a String.
	 */
	public String getINCUSUAPR() {
		return fieldINCUSUAPR.getString();
	}

	/**
	 * Set field INCFECAPL using a String value.
	 */
	public void setINCFECAPL(String newvalue) {
		fieldINCFECAPL.setString(newvalue);
	}

	/**
	 * Get value of field INCFECAPL as a String.
	 */
	public String getINCFECAPL() {
		return fieldINCFECAPL.getString();
	}

	/**
	 * Set numeric field INCFECAPL using a BigDecimal value.
	 */
	public void setINCFECAPL(BigDecimal newvalue) {
		fieldINCFECAPL.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCFECAPL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCFECAPL() {
		return fieldINCFECAPL.getBigDecimal();
	}

	/**
	 * Set field INCHORAPL using a String value.
	 */
	public void setINCHORAPL(String newvalue) {
		fieldINCHORAPL.setString(newvalue);
	}

	/**
	 * Get value of field INCHORAPL as a String.
	 */
	public String getINCHORAPL() {
		return fieldINCHORAPL.getString();
	}

	/**
	 * Set numeric field INCHORAPL using a BigDecimal value.
	 */
	public void setINCHORAPL(BigDecimal newvalue) {
		fieldINCHORAPL.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCHORAPL as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCHORAPL() {
		return fieldINCHORAPL.getBigDecimal();
	}

	/**
	 * Set field INCUSUAPL using a String value.
	 */
	public void setINCUSUAPL(String newvalue) {
		fieldINCUSUAPL.setString(newvalue);
	}

	/**
	 * Get value of field INCUSUAPL as a String.
	 */
	public String getINCUSUAPL() {
		return fieldINCUSUAPL.getString();
	}

	/**
	 * Set field INCUS1 using a String value.
	 */
	public void setINCUS1(String newvalue) {
		fieldINCUS1.setString(newvalue);
	}

	/**
	 * Get value of field INCUS1 as a String.
	 */
	public String getINCUS1() {
		return fieldINCUS1.getString();
	}

	/**
	 * Set field INCUS2 using a String value.
	 */
	public void setINCUS2(String newvalue) {
		fieldINCUS2.setString(newvalue);
	}

	/**
	 * Get value of field INCUS2 as a String.
	 */
	public String getINCUS2() {
		return fieldINCUS2.getString();
	}

	/**
	 * Set field INCUS3 using a String value.
	 */
	public void setINCUS3(String newvalue) {
		fieldINCUS3.setString(newvalue);
	}

	/**
	 * Get value of field INCUS3 as a String.
	 */
	public String getINCUS3() {
		return fieldINCUS3.getString();
	}

	/**
	 * Set field INCMAILAD using a String value.
	 */
	public void setINCMAILAD(String newvalue) {
		fieldINCMAILAD.setString(newvalue);
	}

	/**
	 * Get value of field INCMAILAD as a String.
	 */
	public String getINCMAILAD() {
		return fieldINCMAILAD.getString();
	}

	/**
	 * Set field INCDATOS using a String value.
	 */
	public void setINCDATOS(String newvalue) {
		fieldINCDATOS.setString(newvalue);
	}

	/**
	 * Get value of field INCDATOS as a String.
	 */
	public String getINCDATOS() {
		return fieldINCDATOS.getString();
	}

	/**
	 * Set field INCERROR using a String value.
	 */
	public void setINCERROR(String newvalue) {
		fieldINCERROR.setString(newvalue);
	}

	/**
	 * Get value of field INCERROR as a String.
	 */
	public String getINCERROR() {
		return fieldINCERROR.getString();
	}

	/**
	 * Set field INCDESC using a String value.
	 */
	public void setINCDESC(String newvalue) {
		fieldINCDESC.setString(newvalue);
	}

	/**
	 * Get value of field INCDESC as a String.
	 */
	public String getINCDESC() {
		return fieldINCDESC.getString();
	}

	/**
	 * Set field INCRENGLON using a String value.
	 */
	public void setINCRENGLON(String newvalue) {
		fieldINCRENGLON.setString(newvalue);
	}

	/**
	 * Get value of field INCRENGLON as a String.
	 */
	public String getINCRENGLON() {
		return fieldINCRENGLON.getString();
	}

	/**
	 * Set numeric field INCRENGLON using a BigDecimal value.
	 */
	public void setINCRENGLON(BigDecimal newvalue) {
		fieldINCRENGLON.setBigDecimal(newvalue);
	}

	/**
	 * Return value of numeric field INCRENGLON as a BigDecimal.
	 */
	public BigDecimal getBigDecimalINCRENGLON() {
		return fieldINCRENGLON.getBigDecimal();
	}

	/**
	 * Set field INCCVEDUP using a String value.
	 */
	public void setINCCVEDUP(String newvalue) {
		fieldINCCVEDUP.setString(newvalue);
	}

	/**
	 * Get value of field INCCVEDUP as a String.
	 */
	public String getINCCVEDUP() {
		return fieldINCCVEDUP.getString();
	}

}
