package com.afirme.afirmenet.ibs.messages;

import java.math.BigDecimal;

import com.datapro.sockets.CharacterField;
import com.datapro.sockets.DecimalField;
import com.datapro.sockets.MessageField;
import com.datapro.sockets.MessageRecord;

/**
 * Class generated by AS/400 CRTCLASS command from IN200001 physical file
 * definition.
 * 
 * File level identifier is 1010226173954. Record format level identifier is
 * 3EC35CF887760.
 */

public class IN200001Message extends MessageRecord {
	final int FIELDCOUNT = 16;
	private CharacterField fieldIN201USR = null;
	private DecimalField fieldIN201CUN = null;
	private DecimalField fieldIN201ACC = null;
	private DecimalField fieldIN201SEQ = null;
	private CharacterField fieldIN201DCI = null;
	private DecimalField fieldIN201AMT = null;
	private CharacterField fieldIN201CCY = null;
	private CharacterField fieldIN201FLG = null;
	private DecimalField fieldIN201DTE = null;
	private CharacterField fieldIN201NME = null;
	private CharacterField fieldIN201EC1 = null;
	private CharacterField fieldIN201ED1 = null;
	private CharacterField fieldIN201EC2 = null;
	private CharacterField fieldIN201ED2 = null;
	private CharacterField fieldIN201EOF = null;
	private CharacterField fieldIN201OPR = null;

	/**
	 * Constructor for IN200001Message.
	 */
	public IN200001Message() {
		createFields();
		initialize();
	}

	/**
	 * Create fields for this message. This method implements the abstract
	 * method in the MessageRecord superclass.
	 */
	protected void createFields() {
		recordsize = 254;
		fileid = "1010226173954";
		recordid = "3EC35CF887760";
		message = new byte[getByteLength()];
		formatname = "IN200001";
		fieldnames = new String[FIELDCOUNT];
		tagnames = new String[FIELDCOUNT];
		fields = new MessageField[FIELDCOUNT];

		fieldnames[0] = "IN201USR";
		tagnames[0] = "IN201USR";
		fields[0] = fieldIN201USR = new CharacterField(message, HEADERSIZE + 0,
				10, "IN201USR");
		fieldnames[1] = "IN201CUN";
		tagnames[1] = "IN201CUN";
		fields[1] = fieldIN201CUN = new DecimalField(message, HEADERSIZE + 10,
				10, 0, "IN201CUN");
		fieldnames[2] = "IN201ACC";
		tagnames[2] = "IN201ACC";
		fields[2] = fieldIN201ACC = new DecimalField(message, HEADERSIZE + 20,
				13, 0, "IN201ACC");
		fieldnames[3] = "IN201SEQ";
		tagnames[3] = "IN201SEQ";
		fields[3] = fieldIN201SEQ = new DecimalField(message, HEADERSIZE + 33,
				5, 0, "IN201SEQ");
		fieldnames[4] = "IN201DCI";
		tagnames[4] = "IN201DCI";
		fields[4] = fieldIN201DCI = new CharacterField(message,
				HEADERSIZE + 38, 1, "IN201DCI");
		fieldnames[5] = "IN201AMT";
		tagnames[5] = "IN201AMT";
		fields[5] = fieldIN201AMT = new DecimalField(message, HEADERSIZE + 39,
				17, 2, "IN201AMT");
		fieldnames[6] = "IN201CCY";
		tagnames[6] = "IN201CCY";
		fields[6] = fieldIN201CCY = new CharacterField(message,
				HEADERSIZE + 56, 3, "IN201CCY");
		fieldnames[7] = "IN201FLG";
		tagnames[7] = "IN201FLG";
		fields[7] = fieldIN201FLG = new CharacterField(message,
				HEADERSIZE + 59, 1, "IN201FLG");
		fieldnames[8] = "IN201DTE";
		tagnames[8] = "IN201DTE";
		fields[8] = fieldIN201DTE = new DecimalField(message, HEADERSIZE + 60,
				9, 0, "IN201DTE");
		fieldnames[9] = "IN201NME";
		tagnames[9] = "IN201NME";
		fields[9] = fieldIN201NME = new CharacterField(message,
				HEADERSIZE + 69, 35, "IN201NME");
		fieldnames[10] = "IN201EC1";
		tagnames[10] = "IN201EC1";
		fields[10] = fieldIN201EC1 = new CharacterField(message,
				HEADERSIZE + 104, 4, "IN201EC1");
		fieldnames[11] = "IN201ED1";
		tagnames[11] = "IN201ED1";
		fields[11] = fieldIN201ED1 = new CharacterField(message,
				HEADERSIZE + 108, 70, "IN201ED1");
		fieldnames[12] = "IN201EC2";
		tagnames[12] = "IN201EC2";
		fields[12] = fieldIN201EC2 = new CharacterField(message,
				HEADERSIZE + 178, 4, "IN201EC2");
		fieldnames[13] = "IN201ED2";
		tagnames[13] = "IN201ED2";
		fields[13] = fieldIN201ED2 = new CharacterField(message,
				HEADERSIZE + 182, 70, "IN201ED2");
		fieldnames[14] = "IN201EOF";
		tagnames[14] = "IN201EOF";
		fields[14] = fieldIN201EOF = new CharacterField(message,
				HEADERSIZE + 252, 1, "IN201EOF");
		fieldnames[15] = "IN201OPR";
		tagnames[15] = "IN201OPR";
		fields[15] = fieldIN201OPR = new CharacterField(message,
				HEADERSIZE + 253, 1, "IN201OPR");
	}

	/**
	 * Return value of numeric field IN201ACC as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN201ACC() {
		return fieldIN201ACC.getBigDecimal();
	}

	/**
	 * Return value of numeric field IN201AMT as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN201AMT() {
		return fieldIN201AMT.getBigDecimal();
	}

	/**
	 * Return value of numeric field IN201CUN as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN201CUN() {
		return fieldIN201CUN.getBigDecimal();
	}

	/**
	 * Return value of numeric field IN201DTE as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN201DTE() {
		return fieldIN201DTE.getBigDecimal();
	}

	/**
	 * Return value of numeric field IN201SEQ as a BigDecimal.
	 */
	public BigDecimal getBigDecimalIN201SEQ() {
		return fieldIN201SEQ.getBigDecimal();
	}

	/**
	 * Get value of field IN201ACC as a String.
	 */
	public String getIN201ACC() {
		return fieldIN201ACC.getString();
	}

	/**
	 * Get value of field IN201AMT as a String.
	 */
	public String getIN201AMT() {
		return fieldIN201AMT.getString();
	}

	/**
	 * Get value of field IN201CCY as a String.
	 */
	public String getIN201CCY() {
		return fieldIN201CCY.getString();
	}

	/**
	 * Get value of field IN201CUN as a String.
	 */
	public String getIN201CUN() {
		return fieldIN201CUN.getString();
	}

	/**
	 * Get value of field IN201DCI as a String.
	 */
	public String getIN201DCI() {
		return fieldIN201DCI.getString();
	}

	/**
	 * Get value of field IN201DTE as a String.
	 */
	public String getIN201DTE() {
		return fieldIN201DTE.getString();
	}

	/**
	 * Get value of field IN201EC1 as a String.
	 */
	public String getIN201EC1() {
		return fieldIN201EC1.getString();
	}

	/**
	 * Get value of field IN201EC2 as a String.
	 */
	public String getIN201EC2() {
		return fieldIN201EC2.getString();
	}

	/**
	 * Get value of field IN201ED1 as a String.
	 */
	public String getIN201ED1() {
		return fieldIN201ED1.getString();
	}

	/**
	 * Get value of field IN201ED2 as a String.
	 */
	public String getIN201ED2() {
		return fieldIN201ED2.getString();
	}

	/**
	 * Get value of field IN201EOF as a String.
	 */
	public String getIN201EOF() {
		return fieldIN201EOF.getString();
	}

	/**
	 * Get value of field IN201FLG as a String.
	 */
	public String getIN201FLG() {
		return fieldIN201FLG.getString();
	}

	/**
	 * Get value of field IN201NME as a String.
	 */
	public String getIN201NME() {
		return fieldIN201NME.getString();
	}

	/**
	 * Get value of field IN201OPR as a String.
	 */
	public String getIN201OPR() {
		return fieldIN201OPR.getString();
	}

	/**
	 * Get value of field IN201SEQ as a String.
	 */
	public String getIN201SEQ() {
		return fieldIN201SEQ.getString();
	}

	/**
	 * Get value of field IN201USR as a String.
	 */
	public String getIN201USR() {
		return fieldIN201USR.getString();
	}

	/**
	 * Set field IN201ACC using a String value.
	 */
	public void setIN201ACC(String newvalue) {
		fieldIN201ACC.setString(newvalue);
	}

	/**
	 * Set numeric field IN201ACC using a BigDecimal value.
	 */
	public void setIN201ACC(BigDecimal newvalue) {
		fieldIN201ACC.setBigDecimal(newvalue);
	}

	/**
	 * Set field IN201AMT using a String value.
	 */
	public void setIN201AMT(String newvalue) {
		fieldIN201AMT.setString(newvalue);
	}

	/**
	 * Set numeric field IN201AMT using a BigDecimal value.
	 */
	public void setIN201AMT(BigDecimal newvalue) {
		fieldIN201AMT.setBigDecimal(newvalue);
	}

	/**
	 * Set field IN201CCY using a String value.
	 */
	public void setIN201CCY(String newvalue) {
		fieldIN201CCY.setString(newvalue);
	}

	/**
	 * Set field IN201CUN using a String value.
	 */
	public void setIN201CUN(String newvalue) {
		fieldIN201CUN.setString(newvalue);
	}

	/**
	 * Set numeric field IN201CUN using a BigDecimal value.
	 */
	public void setIN201CUN(BigDecimal newvalue) {
		fieldIN201CUN.setBigDecimal(newvalue);
	}

	/**
	 * Set field IN201DCI using a String value.
	 */
	public void setIN201DCI(String newvalue) {
		fieldIN201DCI.setString(newvalue);
	}

	/**
	 * Set field IN201DTE using a String value.
	 */
	public void setIN201DTE(String newvalue) {
		fieldIN201DTE.setString(newvalue);
	}

	/**
	 * Set numeric field IN201DTE using a BigDecimal value.
	 */
	public void setIN201DTE(BigDecimal newvalue) {
		fieldIN201DTE.setBigDecimal(newvalue);
	}

	/**
	 * Set field IN201EC1 using a String value.
	 */
	public void setIN201EC1(String newvalue) {
		fieldIN201EC1.setString(newvalue);
	}

	/**
	 * Set field IN201EC2 using a String value.
	 */
	public void setIN201EC2(String newvalue) {
		fieldIN201EC2.setString(newvalue);
	}

	/**
	 * Set field IN201ED1 using a String value.
	 */
	public void setIN201ED1(String newvalue) {
		fieldIN201ED1.setString(newvalue);
	}

	/**
	 * Set field IN201ED2 using a String value.
	 */
	public void setIN201ED2(String newvalue) {
		fieldIN201ED2.setString(newvalue);
	}

	/**
	 * Set field IN201EOF using a String value.
	 */
	public void setIN201EOF(String newvalue) {
		fieldIN201EOF.setString(newvalue);
	}

	/**
	 * Set field IN201FLG using a String value.
	 */
	public void setIN201FLG(String newvalue) {
		fieldIN201FLG.setString(newvalue);
	}

	/**
	 * Set field IN201NME using a String value.
	 */
	public void setIN201NME(String newvalue) {
		fieldIN201NME.setString(newvalue);
	}

	/**
	 * Set field IN201OPR using a String value.
	 */
	public void setIN201OPR(String newvalue) {
		fieldIN201OPR.setString(newvalue);
	}

	/**
	 * Set field IN201SEQ using a String value.
	 */
	public void setIN201SEQ(String newvalue) {
		fieldIN201SEQ.setString(newvalue);
	}

	/**
	 * Set numeric field IN201SEQ using a BigDecimal value.
	 */
	public void setIN201SEQ(BigDecimal newvalue) {
		fieldIN201SEQ.setBigDecimal(newvalue);
	}

	/**
	 * Set field IN201USR using a String value.
	 */
	public void setIN201USR(String newvalue) {
		fieldIN201USR.setString(newvalue);
	}
}